<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Agilebase docs – v6</title>
    <link>https://docs.agilebase.co.uk/tags/v6/</link>
    <description>Recent content in v6 on Agilebase docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 16 Aug 2023 13:00:00 +0100</lastBuildDate>
    
	  <atom:link href="https://docs.agilebase.co.uk/tags/v6/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Security Features</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/</guid>
      <description>
        
        
        &lt;p&gt;In these pages you can find details of how to set up users, roles, and privileges in Agilebase. Agilebase has an extensive role-based permissions system that enables fine-grained permissions and roles to be used.&lt;/p&gt;
&lt;p&gt;Tables of data can also be marked as containing &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/sensitive-data/&#34;&gt;commercially sensitive or personal data&lt;/a&gt;, relevant to GDPR and affecting application behaviour.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Development Mode</title>
      <link>https://docs.agilebase.co.uk/docs/introduction/development-mode/</link>
      <pubDate>Fri, 18 Feb 2022 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/introduction/development-mode/</guid>
      <description>
        
        
        &lt;p&gt;As a no-code platform, Agilebase allows you to easily construct (and later de-construct or &amp;lsquo;refactor&amp;rsquo;) and change your software.&lt;/p&gt;
&lt;h2 id=&#34;toggling-development-mode-on-and-off&#34;&gt;Toggling development mode on and off&lt;/h2&gt;
&lt;p&gt;To get started, you need to toggle from &amp;rsquo;normal&amp;rsquo; mode to &amp;lsquo;development&amp;rsquo; mode.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/toggle-build-mode.png&#34; alt=&#34;Toggle development mode&#34;&gt;&lt;/p&gt;
&lt;p&gt;You can do this wherever you are in the system and you will switch to building or developing the item you&amp;rsquo;re looking at. The three main areas this covers are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The homepage. Toggling to development mode on the homepage shows an overview of everything in the system - tables, views, tiles, roles and users can all be listed and edited. Furthermore, the connections between different objects can be shown. More advanced users will typically use this area, when working on larger systems. 
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/A_OYbB9wR6c&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;In a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;view&lt;/a&gt;. When a view is open, toggling development on will let you edit that view - to add or remove fields and calculations for example.&lt;/li&gt;
&lt;li&gt;When viewing a record from a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/%3E&#34;&gt;table&lt;/a&gt;, toggling development on will let you edit that table, e.g. to add/remove fields.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When development mode is on, pencil icons will appear next to every object which can be edited: for example, next to every field and tab in a table record.&lt;/p&gt;
&lt;p&gt;When editing views and tables, the large pencil at the top left lets you edit the object as a whole, as opposed to a field or a tab in it.&lt;/p&gt;
&lt;p&gt;Development mode can easily be toggled off again when you&amp;rsquo;re done and the user interface will switch back to &amp;rsquo;normal&amp;rsquo; mode.&lt;/p&gt;
&lt;h2 id=&#34;using-editing-panels&#34;&gt;Using editing panels&lt;/h2&gt;
&lt;p&gt;When development mode is on, clicking any of the pencil icons on screen will open a panel allowing you to edit the item it&amp;rsquo;s next to. The panel can be dragged to move it around the screen if you want to see what&amp;rsquo;s underneath. Whenever you make a change using the panel, the display underneath will update, allowing you to see the effect your changes have in real time.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s an example of editing a table and view:&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/mTOWsXDpQgo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;and here&amp;rsquo;s what the development mode looks like on the homepage:&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Rojcf6OzdHw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;the-development-homepage&#34;&gt;The development homepage&lt;/h2&gt;
&lt;p&gt;When development mode is toggled on from the homepage, the development homepage will show. There are three main areas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;The lefthand sidebar&lt;/strong&gt;: this shows any objects (tables, views etc.) you&amp;rsquo;ve been working on recently, for quick access, or any that you have &amp;lsquo;pinned&amp;rsquo; (see below)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The map&lt;/strong&gt;: clicking this diagram shows the connections between tables in the system, i.e. the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/&#34;&gt;relations&lt;/a&gt; between them. Clicking a table opens it for editing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lists&lt;/strong&gt;: to the right of the map, at the top, is a set of boxes which each load a different type of object, i.e. &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/&#34;&gt;tables&lt;/a&gt;, &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;tiles&lt;/a&gt;, &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/&#34;&gt;roles&lt;/a&gt;, &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/&#34;&gt;users&lt;/a&gt; and different categories of &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;view&lt;/a&gt;. Clicking on each will load a list of objects, so you can see full details, edit and delete them.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;pinning-objects&#34;&gt;Pinning objects&lt;/h3&gt;
&lt;p&gt;When you have an editing panel open, e.g. by clicking on an object from a list (see above), you can &amp;lsquo;pin&amp;rsquo; it by clicking the pushpin icon at the top left of the panel.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/pinning.png&#34; alt=&#34;Pinning a view&#34;&gt;&lt;/p&gt;
&lt;p&gt;Pinned objects remain on screen for quick access at the top of the lefthand sidebar. They will also be remembered if you log out, for the next time you log in.&lt;/p&gt;
&lt;p&gt;Pinned objects can also be quickly accessed at any time, even if the development homepage is not open, using the history menu in Agilebase&amp;rsquo;s top toolbar which is always present. The history icon is just to the right of the &amp;lsquo;back (&amp;lt;)&amp;rsquo; button.&lt;/p&gt;
&lt;h2 id=&#34;accessing-additional-debugging-information&#34;&gt;Accessing additional debugging information&lt;/h2&gt;
&lt;p&gt;Later on down the route of creating applications, you may wish the user interface to show additional information, specifically in views, to show the primary key values for each record - the internal row identifiers - which are normally hidden.&lt;/p&gt;
&lt;p&gt;This can be useful when testing and debugging &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;APIs&lt;/a&gt; for example.&lt;/p&gt;
&lt;p&gt;To enable this, add &lt;code&gt;&amp;amp;set_context=systadmin&lt;/code&gt; to the URL in the browser. To revert to normal mode, replace it with &lt;code&gt;&amp;amp;set_context=business&lt;/code&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Introduction</title>
      <link>https://docs.agilebase.co.uk/docs/introduction/</link>
      <pubDate>Fri, 18 Feb 2022 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/introduction/</guid>
      <description>
        
        
        &lt;p&gt;People from many different backgrounds use Agilebase to create software that solves problems for them and their organisations. Some are seasoned IT professionals, who are able to code but are new to the no-code world. Some have used tools like Microsoft Access or newer no-code tools and many if not most are from outside of the IT world completely.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s a place for everyone - to encourage this diversity and ensure people can pick up Agilebase at whatever level is most appropriate, we&amp;rsquo;ve designed our unique five step Learner Progression route.&lt;/p&gt;
&lt;p&gt;Learner Progression starts at a level appropriate to someone who has no experience of software development at all. You can learn &amp;lsquo;on the job&amp;rsquo;, by following video guides and documentation and with support from partners, to become a fully fledged software architect, whatever your background.&lt;/p&gt;
&lt;p&gt;The learner progression page below gives an outline of this route and the development mode page gives practical information on how to start using development features.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Learner Progression</title>
      <link>https://docs.agilebase.co.uk/docs/introduction/learner-progression/</link>
      <pubDate>Fri, 18 Feb 2022 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/introduction/learner-progression/</guid>
      <description>
        
        
        &lt;p&gt;Agilebase&amp;rsquo;s learner progression pathway enables you to transform your career. You can go from  a citizen developer to a no-code software architect.&lt;/p&gt;
&lt;p&gt;Citizen developers can create their own applications using no code. Software architects can build complex applications, including powerful workflow features and integrations with other applications.&lt;/p&gt;
&lt;p&gt;To go on this journey requires no technical knowledge. Beginners - &amp;ldquo;citizen developers&amp;rdquo; - come from a diverse range of non-IT backgrounds. The only skills you need are the ability to think, be willing to learn, and be able to plan.&lt;/p&gt;
&lt;p&gt;Agilebase will help you every step of the way. And you can stop at the level that is useful to you.&lt;/p&gt;
&lt;p&gt;Agilebase enables citizen developers to pass through five stages on their way to becoming software architects:&lt;/p&gt;
&lt;h2 id=&#34;citizen-developer-level-1&#34;&gt;Citizen Developer Level 1&lt;/h2&gt;
&lt;p&gt;This is the start of the Agilebase journey. At this level you can create your own applications, using no coding.&lt;/p&gt;
&lt;p&gt;An Agilebase citizen developer can create &amp;lsquo;personal copies&amp;rsquo; of any &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;view&lt;/a&gt; and edit those copies&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;remove or add fields, excepting any that are marked &amp;lsquo;confidential&amp;rsquo; (only higher level developers can access those fields)&lt;/li&gt;
&lt;li&gt;rearrange fields&lt;/li&gt;
&lt;li&gt;change field sorting&lt;/li&gt;
&lt;li&gt;add filters or remove filters (except on &amp;lsquo;confidential&amp;rsquo; fields)&lt;/li&gt;
&lt;li&gt;add and remove &lt;a href=&#34;https://docs.agilebase.co.uk/docs/charting/&#34;&gt;charts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;A confidential field is one that has a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#show-if-record-in-view&#34;&gt;visibility&lt;/a&gt; rule, or is used for &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/#multi-tenanting&#34;&gt;multi-tenanting&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The personal copy of the view is seen only by them. For example, a citizen developer may create a list of records filtered to show ones assigned to them. Everyone else in the organisation sees only the original view.&lt;/p&gt;
&lt;p&gt;You earn the Citizen Developer title once you have carried out standard functions. These include adding and editing records. The title is assigned to internal staff not to &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/community-users/&#34;&gt;community users&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;citizen-developer-level-2&#34;&gt;Citizen Developer Level 2&lt;/h2&gt;
&lt;p&gt;This level is suggested or &amp;lsquo;unlocked&amp;rsquo; once a citizen developer has carried out a certain number of citizen development functions and has therefore started to learn how no code development works in a safe environment.&lt;/p&gt;
&lt;p&gt;However to activate the level, it must be manually assigned by a Software Architect level user, as it allows changes to the system which can affect other users.&lt;/p&gt;
&lt;p&gt;A citizen developer level 2 can&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create new views that everyone can see, from any table
&lt;ul&gt;
&lt;li&gt;edit them as per the citizen developer functionality above&lt;/li&gt;
&lt;li&gt;additionally they can add and remove simple joins, to include data from other tables in a view&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;remove views that they themselves have created (not those that others have)&lt;/li&gt;
&lt;li&gt;create their own &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/&#34;&gt;tables&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;add, edit and remove fields and tabs from those tables&lt;/li&gt;
&lt;li&gt;edit basic properties of the fields&lt;/li&gt;
&lt;li&gt;assign privileges (up to edit) on those tables, using existing roles or direct user privileges&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;create &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;tiles&lt;/a&gt; and delete tiles they&amp;rsquo;ve added themselves&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;citizen-developer-level-3&#34;&gt;Citizen Developer Level 3&lt;/h2&gt;
&lt;p&gt;A Software Architect (see below) can, at their discretion, assign a citizen developer 3 &amp;lsquo;develop&amp;rsquo; privileges on a table (or tables).&lt;/p&gt;
&lt;p&gt;That allows them to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;add &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/&#34;&gt;fields&lt;/a&gt; to those table, excluding referenced fields&lt;/li&gt;
&lt;li&gt;remove fields that they themselves have added (not others)&lt;/li&gt;
&lt;li&gt;edit the basic properties of any field in those tables, e.g. the list of options in a dropdown box&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, actions not related to having develop privileges on a particular table are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;edit the basic properties of any regular view. However, workflow, API and some other types of system view will be read-only&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;junior-software-architect&#34;&gt;Junior Software Architect&lt;/h2&gt;
&lt;p&gt;A junior software architect can use practically all of the application building functionality of Agilebase. For example&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflows&lt;/a&gt; (including chasers, document generation)&lt;/li&gt;
&lt;li&gt;Set up &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add complex &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/joins/&#34;&gt;joins&lt;/a&gt; to views&lt;/li&gt;
&lt;li&gt;Create, edit and delete &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/&#34;&gt;roles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Assign &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/&#34;&gt;privileges&lt;/a&gt; to roles or users up to the &amp;rsquo;edit&amp;rsquo; level&lt;/li&gt;
&lt;li&gt;Remove fields, views etc. created by anyone&lt;/li&gt;
&lt;li&gt;Edit the advanced properties of fields and views, including field visibility rules (confidentiality rules) for example&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Their only limitations are to do with managing the organisation as a whole, including other users.&lt;/p&gt;
&lt;h2 id=&#34;software-architect&#34;&gt;Software Architect&lt;/h2&gt;
&lt;p&gt;As well as building and disassembling applications, software architects can set company-wide settings and manage the account as a whole. They have full discretionary spend and can&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add and remove &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/&#34;&gt;users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Edit company level settings (e.g. whether to enforce 2FA)&lt;/li&gt;
&lt;li&gt;Change table &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/sensitive-data/&#34;&gt;sensitive and personal data&lt;/a&gt; settings (GDPR)&lt;/li&gt;
&lt;li&gt;View and controls users&amp;rsquo; learner progression levels and &amp;lsquo;budget&amp;rsquo; limits&lt;/li&gt;
&lt;li&gt;Assign any privileges up to the highest &amp;lsquo;develop&amp;rsquo; level&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 2FA setup</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/2fa-setup/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/2fa-setup/</guid>
      <description>
        
        
        &lt;h2 id=&#34;what-is-two-factor-authentication&#34;&gt;What is two factor authentication?&lt;/h2&gt;
&lt;p&gt;Simply put, it helps to keep your company’s data more secure, to stop outsiders stealing it, editing or even deleting it.&lt;/p&gt;
&lt;p&gt;When someone logs in from a new device or location, the system will prompt them for a code sent to or generated by their phone, to prove their identity.&lt;/p&gt;
&lt;p&gt;If you’d like to dive into more detail, check out this video from authy.com: &lt;a href=&#34;https://www.youtube.com/watch?v=ds_TANz4n3U&amp;amp;feature=youtu.be&#34;&gt;https://www.youtube.com/watch?v=ds_TANz4n3U&amp;amp;feature=youtu.be&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-long-does-this-take-to-set-up&#34;&gt;How long does this take to set up?&lt;/h2&gt;
&lt;p&gt;No more than a minute or two. It’s a really simple set up process. Here&amp;rsquo;s a 60 second video showing how to do it.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/lGqp6oDVUF4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;This example shows an iPhone but it’s the same process with an Android phone - just install the Authenticator app from the Google Play store.&lt;/p&gt;
&lt;p&gt;Setup only needs to be done once. From then on you don’t need to do anything apart from open the app when asked. The app will automatically generate and display a code without any need for you to do anything.&lt;/p&gt;
&lt;p&gt;To kick off the process&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click your user icon at the top right of the screen&lt;/li&gt;
&lt;li&gt;Select &amp;rsquo;edit profile&#39;&lt;/li&gt;
&lt;li&gt;Tick &amp;rsquo;enable two factor authentication&#39;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;what-if-i-cant-use-a-smartphone&#34;&gt;What if I can’t use a smartphone?&lt;/h2&gt;
&lt;p&gt;If you don’t use a smartphone at work, that’s no problem. You can use an app on your computer - in fact many people find that more convenient than using a phone. Please ask your system administrator how to set things up and they’ll give you a hand.&lt;/p&gt;
&lt;h2 id=&#34;when-should-i-set-this-up&#34;&gt;When should I set this up?&lt;/h2&gt;
&lt;p&gt;Now!&lt;/p&gt;
&lt;p&gt;It’s never a bad time to upgrade your data security and privacy protection measures. If you’ve not already set up 2FA, Agilebase will prompt you to do so once a week.&lt;/p&gt;
&lt;p&gt;However, you can do so at any time: click your user icon at the top right of the screen, select &amp;rsquo;edit profile&amp;rsquo; and tick &amp;rsquo;enable two factor authentication&#39;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Security and Compliance</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/</guid>
      <description>
        
        
        &lt;p&gt;Agilebase often works best when end users become part of the development process, so they&amp;rsquo;re able to give feedback as your software builds up, also gaining confidence in the end result. So it&amp;rsquo;s quite likely that you&amp;rsquo;ll be adding user accounts relatively early in the process.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s a good idea to adopt security best practices from the start rather than trying to retro-fit. This guide will take you through the mechanics of creating &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/&#34;&gt;User Accounts&lt;/a&gt; but also explain the steps you can take to ensure data is suitably protected.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Users</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/</guid>
      <description>
        
        
        &lt;h2 id=&#34;adding-a-user&#34;&gt;Adding a user&lt;/h2&gt;
&lt;p&gt;You can add a new user from scratch, or clone an existing one. To add:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to the homepage and &lt;a href=&#34;https://docs.agilebase.co.uk/docs/introduction/development-mode/&#34;&gt;toggle development mode on&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Click the &amp;lsquo;+ USER&amp;rsquo; button under Lists at the top of the screen&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To clone:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to the homepage and &lt;a href=&#34;https://docs.agilebase.co.uk/docs/introduction/development-mode/&#34;&gt;toggle development mode on&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Click the Users box at the top right to load a list of existing users&lt;/li&gt;
&lt;li&gt;Click a user to clone to open up their editing panel&lt;/li&gt;
&lt;li&gt;At the bottom, press the Clone button&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If a cost is to be applied, this will be shown to you.&lt;/p&gt;
&lt;p&gt;You should now see an editing screen with the details of the user you just created.
![Add user][/add-user.png]
&lt;img src=&#34;https://docs.agilebase.co.uk/new-user-details.png&#34; alt=&#34;User editing&#34;&gt;&lt;/p&gt;
&lt;p&gt;You can enter the user&amp;rsquo;s name and username. If the username isn&amp;rsquo;t their email address, enter their email address in the field provided too. This is useful&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;to allow them to reset their own password by receiving a link by email&lt;/li&gt;
&lt;li&gt;to allow them to receive notifications when another user adds a comment against a record&lt;/li&gt;
&lt;li&gt;as various features allow a user to be assigned to a record. Workflows can be set up to email those users. E.g. if an account manager is assigned to a customer, you may want to email them when a complaint is received from that customer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;passwords&#34;&gt;Passwords&lt;/h3&gt;
&lt;p&gt;The recommended way to set passwords is for the user to choose their own, which they can do once they have a username and email address filled in. They will need to visit the login page, click the &amp;lsquo;reset password&amp;rsquo; link and type in their username. They will be emailed a link which will let them set a password.&lt;/p&gt;
&lt;p&gt;As an administrator, you can also manually reset someone&amp;rsquo;s password by clicking &amp;lsquo;change password&amp;rsquo; in their user details screen.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We recommend the adoption of a password wallet service like &lt;a href=&#34;https://1password.com/&#34;&gt;1Password&lt;/a&gt;, &lt;a href=&#34;https://lastpass.com&#34;&gt;LastPass&lt;/a&gt; or built-in browser features to generate and store passwords. That lets passwords become much more secure and harder to guess whilst not requiring users to remember them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;notes-about-password-security&#34;&gt;Notes about password security&lt;/h4&gt;
&lt;p&gt;Passwords must be a minimum of 8 characters.&lt;/p&gt;
&lt;p&gt;When someone sets or changes their password, it&amp;rsquo;s checked against &lt;a href=&#34;https://haveibeenpwned.com/Passwords&#34;&gt;https://haveibeenpwned.com/Passwords&lt;/a&gt; to ensure it&amp;rsquo;s not a common one and is suitable for ongoing use.&lt;/p&gt;
&lt;p&gt;Passwords are stored in our system &lt;a href=&#34;https://www.okta.com/blog/2019/03/what-are-salted-passwords-and-password-hashing/&#34;&gt;salted and hashed&lt;/a&gt; using the &lt;a href=&#34;https://en.wikipedia.org/wiki/Bcrypt&#34;&gt;bcrypt&lt;/a&gt; scheme, with 13 rounds. This means that we do not know what your passwords are and in the unfortunate event of our passwords database being hacked, the original passwords would still not be able to be retrieved.&lt;/p&gt;
&lt;h3 id=&#34;two-factor-authentication&#34;&gt;Two factor authentication&lt;/h3&gt;
&lt;p&gt;Users are strongly encouraged to set up two factor authentication (2FA) using an app. Unfortunately this is one step an administrator can&amp;rsquo;t do for them, but luckily it is quick and easy to do: &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/2fa-setup/&#34;&gt;here&amp;rsquo;s how&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Users without 2FA will be prompted to do so in the user interface and by email.&lt;/p&gt;
&lt;p&gt;2FA is mandatory for &lt;a href=&#34;#roles&#34;&gt;administrators&lt;/a&gt; and necessary for a user to have before &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/&#34;&gt;develop&lt;/a&gt; privileges can be assigned to them. Users also need to have 2FA enabled in order to perform certain functions such as exporting to spreadsheet.&lt;/p&gt;
&lt;p&gt;When enabled, a user will be prompted for the 2FA code as well as their password when they log in from a device or location they haven&amp;rsquo;t used in the past 30 days.&lt;/p&gt;
&lt;p&gt;If a user encounters any problems with 2FA, e.g. they lose the device for generating their codes, you can temporarily disable 2FA on their account by going to their user details screen and un-ticking &amp;lsquo;use 2FA&amp;rsquo;. Of course, you need to be aware of the risks, for example double checking that a user who contacts you is really who they say they are. Once they can log in, they&amp;rsquo;ll be able to enable 2FA themselves again.&lt;/p&gt;
&lt;h4 id=&#34;mandating-2fa-for-everyone&#34;&gt;Mandating 2FA for everyone&lt;/h4&gt;
&lt;p&gt;This can be done in the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/advanced-usage/company-settings/#mandate-2fa&#34;&gt;company settings&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;other-options&#34;&gt;Other options&lt;/h3&gt;
&lt;h4 id=&#34;learner-progression-level&#34;&gt;Learner Progression Level&lt;/h4&gt;
&lt;p&gt;When created, the level defaults to being a &amp;lsquo;core user&amp;rsquo;, i.e. a standard user who has no special development privileges.&lt;/p&gt;
&lt;p&gt;A software architect can change this to move any user up (or down) in learner development progress. Please see &lt;a href=&#34;https://docs.agilebase.co.uk/docs/introduction/learner-progression/&#34;&gt;learner progression&lt;/a&gt; for more information on what abilities each level confers.&lt;/p&gt;
&lt;h4 id=&#34;use-the-custom-agilechilli-ui-rather-than-agilebases&#34;&gt;Use the custom AgileChilli UI rather than Agilebase&amp;rsquo;s&lt;/h4&gt;
&lt;p&gt;It&amp;rsquo;s possible for companies to apply their logo and custom login screen to the system. Please contact us if you&amp;rsquo;d like to set this up.&lt;/p&gt;
&lt;h4 id=&#34;logout-after&#34;&gt;Logout after&lt;/h4&gt;
&lt;p&gt;Automatically end the user&amp;rsquo;s session after this many minutes of inactivity. The user themselves can also change this setting.&lt;/p&gt;
&lt;h4 id=&#34;restrict-data-access&#34;&gt;Restrict data access&lt;/h4&gt;
&lt;p&gt;Here, you can specify a field name, either an equals or a contains filter and a value. The button &lt;em&gt;set to user ID&lt;/em&gt; will set the value to the user&amp;rsquo;s ID.&lt;/p&gt;
&lt;p&gt;The purpose of this is to limit the data rows a particular user sees in a view. If a field with the name you specify appears in a view, a filter will be automatically applied so the user only sees rows which match the filter.&lt;/p&gt;
&lt;p&gt;For example, if you set &lt;code&gt;created by [auto] = Oliver Kohll (oliver@agilechilli.com)&lt;/code&gt;, then (assuming &lt;code&gt;Oliver Kohll (oliver@agilechilli.com)&lt;/code&gt; is their username), the user will only see records they created, as long as the &amp;lsquo;created by [auto]&amp;rsquo; field appears in the view.&lt;/p&gt;
&lt;p&gt;A similar feature exists to add filters to roles - useful when you may want to apply the same filter to multiple users. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/#multi-tenanting&#34;&gt;roles&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;roles&#34;&gt;Roles&lt;/h4&gt;
&lt;p&gt;Tick a role to assign the user to it. The primary purpose of roles is to apply privileges to groups of users, see &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/&#34;&gt;roles&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s one special role which can be assigned. It will be marked &lt;strong&gt;grants administrative privileges&lt;/strong&gt;. Assigning that role will make a user an administrator, with full permissions over the complete system. They can create/remove users, roles, tables etc., as well as assign themselves privileges on any table.&lt;/p&gt;
&lt;p&gt;Next to each role listed is a list of tiles that will be added to their screen if that role is assigned to them. This is a convenience feature to speed up setting up their home screen. The tiles shown for a role are those which more than half of the members of that role have. Tiles can be manually added and removed by an [administrator] or the user themselves.&lt;/p&gt;
&lt;p&gt;If any role is a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/#multi-tenanting&#34;&gt;filtering role&lt;/a&gt;, the filter applied is also displayed.&lt;/p&gt;
&lt;h4 id=&#34;privileges&#34;&gt;Privileges&lt;/h4&gt;
&lt;p&gt;Assign individual table &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/&#34;&gt;privileges&lt;/a&gt; to a user.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When dealing with larger numbers of users it&amp;rsquo;s usually more manageable if you use roles to assign privileges.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If a user has a privilege due to being a member of a role, that privilege is shown with a shaded blue background. Any additional privileges individually assigned to them are shown in green.&lt;/p&gt;
&lt;h4 id=&#34;tiles&#34;&gt;Tiles&lt;/h4&gt;
&lt;p&gt;Allows an admin to add/remove &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;tiles&lt;/a&gt; for a user. By default users can add/remove tiles themselves too, although this can be disabled through the use of a &lt;a href=&#34;#other-options&#34;&gt;custom UI&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;viewing-users&#34;&gt;Viewing users&lt;/h2&gt;
&lt;p&gt;From the homepage, &lt;a href=&#34;https://docs.agilebase.co.uk/docs/introduction/development-mode/&#34;&gt;toggle development mode on&lt;/a&gt; and click the &amp;lsquo;users&amp;rsquo; box at the top right. You&amp;rsquo;ll see a list of existing user accounts. Their details are listed including 2FA status (whether they&amp;rsquo;re using app-based 2FA or not) and when they last logged in.&lt;/p&gt;
&lt;p&gt;Each user&amp;rsquo;s roles are shown. Any &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/#multi-tenanting&#34;&gt;multi-tenanting&lt;/a&gt; roles are also included.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The list of users can be exported to spreadsheet by clicking again on the &amp;lsquo;users&amp;rsquo; box at the top right of the screen.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Note that if you want to see a full audit trail of what each user has done (editing, searching, exporting etc.), then you can use the optional &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/usage-reporting/#enhanced-audit-trail&#34;&gt;enhanced audit trail&lt;/a&gt; feature (only available on certain plans).&lt;/p&gt;
&lt;h2 id=&#34;removing-users&#34;&gt;Removing users&lt;/h2&gt;
&lt;p&gt;To remove a user, click one in the list (see above) to open the user editing panel. At the bottom, click the Remove button.&lt;/p&gt;
&lt;p&gt;A user removal will have no effect on any data stored in the system. The user&amp;rsquo;s previous comments will still be visible for example and their username will still be logged against any records they&amp;rsquo;re marked as owner of. Their changes will still be in the audit trail and they will be marked as the creator/last editor of records where relevant.&lt;/p&gt;
&lt;p&gt;You may want to take some other actions after deletion e.g. to re-assign records they are assigned to.&lt;/p&gt;
&lt;p&gt;A deleted user&amp;rsquo;s profile image will be replaced with a standard icon representing a deleted user, when displayed in comment streams etc.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Community Users</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/community-users/</link>
      <pubDate>Fri, 05 Nov 2021 12:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/community-users/</guid>
      <description>
        
        
        &lt;p&gt;Agilebase is primarily a platform for building back office systems for employees (or members of the organisation) to use.&lt;/p&gt;
&lt;p&gt;However, it&amp;rsquo;s common to allow access to people outside the organisation to perform limited data entry tasks. For example, you may wish your suppliers to be able to upload certificates of conformances to items they sell you, or you may have a large workforce of contractors who you require to fill in timesheets.&lt;/p&gt;
&lt;p&gt;It may be that you don&amp;rsquo;t wish to supply each person a full Agilebase license because&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;there will be a large number of them, so there&amp;rsquo;ll be management and cost issues&lt;/li&gt;
&lt;li&gt;you wish to restrict what they can do in the system further than can be accomplished with roles and privileges&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Community Users mechanism allows this.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Community Users have limited access (described below), with subscriptions which are significantly less costly and must be purchased in bulk. Once a block of community users is purchased, you can set up and remove as many as you need within the upper limit of that block.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;validity&#34;&gt;Validity&lt;/h2&gt;
&lt;p&gt;For a Community User subscription to apply, a person must be one of&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a &lt;em&gt;supplier&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;a &lt;em&gt;contractor&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;an &lt;em&gt;app&lt;/em&gt; user i.e. someone who utilises Agilebase functions via the API, using a third party app or website&lt;/li&gt;
&lt;li&gt;or a &lt;em&gt;member of the public&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;
&lt;h3 id=&#34;configuring-a-community-of-users&#34;&gt;Configuring a community of users&lt;/h3&gt;
&lt;p&gt;To set up a new community of a certain type, a role must be created for them. The role privileges will determine which tables they have access to.&lt;/p&gt;
&lt;p&gt;Each community user must be a member of that single role only - no additional roles or privileges can be applied.&lt;/p&gt;
&lt;p&gt;Different communities of users can be created by creating different roles. A separate block of subscriptions must be purchased for each role created. Therefore you can have multiple communities, for example one for members of the public and another for contractors, or two different types of contractor.&lt;/p&gt;
&lt;p&gt;When setting up the role, tick the &amp;lsquo;members are community users&amp;rsquo; tickbox. Then create a user and assign them to that role.&lt;/p&gt;
&lt;h2 id=&#34;functional-restrictions&#34;&gt;Functional Restrictions&lt;/h2&gt;
&lt;p&gt;The following restrictions appropriate to users of an outside community are applied.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a community users role can be set to allow VIEW access to up to 10 tables, plus EDIT privileges on up to 3 additional tables&lt;/li&gt;
&lt;li&gt;for the 3 tables which allow editing, community users can only see and edit records they themselves have created. All records from read-only tables can be seen.
&lt;ul&gt;
&lt;li&gt;for example, a user may have read-only access to a list of companies. Against each company, they can add and edit timesheet records&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;community users only see comments added by themselves or specifically sent to them (comments are commonly used for internal company discussions)&lt;/li&gt;
&lt;li&gt;a community user can have up to 6 tiles on their homepage&lt;/li&gt;
&lt;li&gt;the homepage is fixed for community users, they can&amp;rsquo;t add or remove tiles&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further, community users are unable to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;export data&lt;/li&gt;
&lt;li&gt;create charts&lt;/li&gt;
&lt;li&gt;unlock locked fields or records&lt;/li&gt;
&lt;li&gt;bulk edit&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Together, all of these measures will help protect data in the organisation whilst simplifying the user interface, allowing people from outside to be able to usefully carry out work, without having to go through the expense of creating or purchasing dedicated applications for them.&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: 1. Creating a basic task list</title>
      <link>https://docs.agilebase.co.uk/guides/guide1-crm/tasklist/</link>
      <pubDate>Fri, 22 Apr 2022 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/guides/guide1-crm/tasklist/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Learning Aim:&lt;/strong&gt; Create a Table and associated Views to use it!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; User to have watched &amp;ldquo;How to use Agilebase&amp;rdquo;&lt;/p&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;This stage of the guide will introduce you to the basic activities required to build a simple application. We will start by creating a table with different types of fields in order to store a variety of data. We will then show you how to create and control tiles, views and forms which are the interfaces that your users will use to enter and consume this data.
Let us start by building a simple task list.&lt;/p&gt;
&lt;h2 id=&#34;create-a-table-called-tasks&#34;&gt;Create a table called &amp;ldquo;Tasks&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;Our simple application will need to store information about the tasks our users create. This is done by creating a database table. In Agilebase this is achieved by navigating to the developer interface and pressing the “add new table button”.
[guide 1.1 - video 1]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/-kY2RRzKqxQ&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;add-fields-to-the-tasks-table&#34;&gt;Add fields to the &amp;ldquo;Tasks&amp;rdquo; table&lt;/h2&gt;
&lt;p&gt;A table of data is nothing without its list of fields. Each field stores a single piece of information. It is simple to add fields to an existing table within agilebase.
Edit the table, type in the name of the field and choose the appropriate type. On creation of the field you will be able to set further options.
For more detail visit - &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/&#34;&gt;https://docs.agilebase.co.uk/docs/fields/field-types/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the following video we add the fields needed to for a simple Task
[guide 1.1 - video 2]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/SannBQNKlKk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;make-the-form-easier-to-understand-break-it-into-sections&#34;&gt;Make the form easier to understand. Break it into sections&lt;/h2&gt;
&lt;p&gt;Now we have the data structure required to capture a simple task we can think about how it would be used. The user interface within Agilebase is controlled by the list of fields and their options. It is a simple task to reorder fields, just use the drag and drop facility when looking at the list of fields.
Use a field of type separator to create sections within the user interface
[guide 1.1 - video 3]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/c8XMlhoiuSM&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;We now need to provide the user with a way of accessing our “tasks” table and using it!!! This is achieved by a combination of Tiles and Views.&lt;/p&gt;
&lt;p&gt;For more info on Tiles - &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;https://docs.agilebase.co.uk/docs/tiles/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For more info on Views - &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;https://docs.agilebase.co.uk/docs/views/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In summary:
A view generally provides abbreviated data in the form of a list of records. It also provides the ability to drill through to see the full record details.
Tiles are a way of grouping functionality together. Specifically, a data tile is a way of grouping a collection of views that all share some common theme.&lt;/p&gt;
&lt;p&gt;For this guide, we need a tile and collection of views dedicated to helping us create and manage our “Tasks”&lt;/p&gt;
&lt;h2 id=&#34;make-the-table-available-for-use&#34;&gt;Make the table available for use!&lt;/h2&gt;
&lt;h3 id=&#34;adding-a-tile-to-the-homepage&#34;&gt;Adding a tile to the homepage&lt;/h3&gt;
&lt;p&gt;The homepage of agilebase is made up of data tiles. We need to create a new tile to hold all the views of our taks data
[guide 1.1 - video 4]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/7hA7-VzX_A8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;adding-views-that-show-all-the-tasks-that-have-been-created&#34;&gt;Adding views that show all the tasks that have been created&lt;/h3&gt;
&lt;p&gt;To provide the user access to a list of Task records we need to create a View. To start with we will create a view that will list ALL the data.   &lt;br&gt;
[guide 1.1 - video 5]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ZwAcJz3jBhs&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;a-better-way-of-looking-at-data&#34;&gt;A better way of looking at data&lt;/h3&gt;
&lt;p&gt;Many users will be familiar with a card or kanban style interface (such as Trello). Agilebase has a similar style of view that can often be useful.&lt;br&gt;
Within a views “options” tab you can set its interface stylle to be “Cards in Columns”
[guide 1.1 - video 6]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/HeZxfiLZR_k&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;making-views-for-a-specific-job&#34;&gt;Making views for a specific job&lt;/h3&gt;
&lt;p&gt;Whilst users can apply their own filters and re-order data in a view, it is often a better user experience if there are dedicated views setup that match a particular job. For this example we want to create a list of all the completed tasks with the most recent at the top of the list.
For more information on applying filters - &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/filters/&#34;&gt;https://docs.agilebase.co.uk/docs/views/filters/&lt;/a&gt;
[guide 1.1 - video 7]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/2755kBKLKzk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;our-simple-application-is-complete&#34;&gt;Our simple application is complete!&lt;/h3&gt;
&lt;p&gt;However, we can quickly see that we have missed implementing a key feature - collaboration. We should add another field to this table - a comments field!&lt;/p&gt;
&lt;p&gt;For more information on the comments field and its associated comment feed - &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/comment-feeds/&#34;&gt;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/comment-feeds/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;add-a-comments-field-to-a-table&#34;&gt;Add a Comments field to a table!&lt;/h2&gt;
&lt;p&gt;Adding new fields to an existing table is no different to when creating from scratch. Simply add via the table edit screen.
Adding collaboration functionality to an agileB\se application is as easy as adding any other field! Just add a field of type Comments as shown in the video below
[guide 1.1 - video 8 *]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/VqpAmdVJiVc&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For completeness the remainder of this stage of the guide covers removing items and functionality that are no longer needed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;deleting-views&#34;&gt;Deleting Views&lt;/h2&gt;
&lt;p&gt;Eventually you will want to remove unused views in order to reduce clutter and streamline the user experience. To do this go to the Properties and Options tab when editing the view and press Delete view
[guide 1.1 - video 9 *]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/YfCz-9Fjt7g&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;delete-fields-and-tables&#34;&gt;Delete Fields and Tables&lt;/h2&gt;
&lt;p&gt;Keeping the user interface streamlined and uncluttered also includes the removal of unwanted or old data fields.
It is straightforward to delete a field from a table. Either clicking the X icon on the RHS of the list of fields, or use the Remove field button on the fields definition. However, extra care needs to be taken as the field may be in use as the following video demonstrates.&lt;/p&gt;
&lt;p&gt;N.b. to completely remove a table you are first required to delete ALL the fields it contains.
[guide 1.1 - video 10 *]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/5ExSypK06W8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Policies</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/policies/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/policies/</guid>
      <description>
        
        
        &lt;h2 id=&#34;backups&#34;&gt;Backups&lt;/h2&gt;
&lt;p&gt;Data backups are performed across the stack of technology, from server down to databases and file storage.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Database backups are taken daily and hosted in the European Union by Amazon. Older backups transition to &lt;a href=&#34;https://aws.amazon.com/glacier/&#34;&gt;Amazon Glacier&lt;/a&gt; and are kept for 200 days - this allows a balance between the practical necessity of allowing rollbacks to a certain point in time, whilst not storing data for an unnecessarily long period, to comply with the GDPR.
By policy, backups under 100 days old are read-only and un-deletable, so will always be available in the case of attacks like ransomware.
These backups are also encrypted so that Amazon has no access to the data within then.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/warm-standby.html&#34;&gt;Continuous archiving &lt;/a&gt; of the database is also enabled, to transfer data to a &amp;lsquo;hot standby&amp;rsquo; server using streaming replication, allowing immediate failover should the primary database fail for any reason.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agilebase content (uploaded files, custom templates etc.) also have snapshots taken daily, kept for 200 days in a separate EU location.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In addition to these content-only backups, snapshots of the totality of each key server in the infrastructure (including configuration), are run daily using the Linode backup service &lt;a href=&#34;https://www.linode.com/products/backups/&#34;&gt;https://www.linode.com/products/backups/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The backup and recovery process is monitored and tested regularly.&lt;/p&gt;
&lt;h3 id=&#34;retrieval&#34;&gt;Retrieval&lt;/h3&gt;
&lt;p&gt;There may be a charge for retrieval of customer data from backup, to cover our costs. The data will be restored to a separate instance of Agilebase available at a different URL, which a customer can look at to compare data. If necessary, data can then be extracted from one and loaded into the other.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Please be aware that depending on needs, this may be a complex process due to the fact that other data in the live system may have changed since the backup. A simple overwrite of existing data may not be the best option.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;privacy-policy&#34;&gt;Privacy policy&lt;/h2&gt;
&lt;p&gt;Agilebase Ltd is funded directly by the customers we provide services to, we do not have any other business model, particularly we do not resell any data.&lt;/p&gt;
&lt;p&gt;Our privacy policy is available here: &lt;a href=&#34;https://agilechilli.com/help-centre/agilebase/privacy-policy/&#34;&gt;https://agilechilli.com/help-centre/agilebase/privacy-policy/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;gdpr-policy&#34;&gt;GDPR Policy&lt;/h2&gt;
&lt;p&gt;An overview of our GDPR policy is available &lt;a href=&#34;https://docs.agilebase.co.uk/gdpr-overview.pdf&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/gdpr-overview.pdf&#34;&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/gdpr-compliance-cycle.png&#34; alt=&#34;GDPR Compliance Cycle&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;data-protection-and-disaster-recovery&#34;&gt;Data Protection and Disaster Recovery&lt;/h2&gt;
&lt;p&gt;Full details of our processes and plans are available to customers and relevant parties on request.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Relational Database Concepts</title>
      <link>https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/</guid>
      <description>
        
        
        &lt;p&gt;Before diving into the details of building applications, starting with tables, let&amp;rsquo;s take a step back and learn some background information about databases, including what a table is. If you&amp;rsquo;re familiar with these concepts, feel free to skip this section.&lt;/p&gt;
&lt;p&gt;When building back office software with Agilebase, a large amount of what we&amp;rsquo;ll be doing is building database structures, to store user-entered data. Agilebase takes care of creating the user interface to allow users to use these structures automatically, e.g. to search for data, add and edit it.&lt;/p&gt;
&lt;p&gt;You will find many articles explaining relational databases if you look for them on the internet. Most will introduce SQL, the language used to work with databases. It&amp;rsquo;s not necessary to learn that as Agilebase generates it automatically behind the scenes, but the higher level concepts are useful to grasp.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a YouTube video with a good introduction.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/NvrpuBAMddw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;If you prefer reading, here are a couple of examples.&lt;/p&gt;
&lt;h2 id=&#34;simple-example---what-is-a-relation&#34;&gt;Simple example - what is a relation?&lt;/h2&gt;
&lt;p&gt;Imagine we want a place to store records of suppliers to our business. This could be the start of a supplier management system to compare companies based on quality, accreditation levels and price for example, or to carry out supplier approval processes.&lt;/p&gt;
&lt;p&gt;To do this we need just one table &amp;lsquo;suppliers&amp;rsquo; which would have fields in such as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;company name&lt;/li&gt;
&lt;li&gt;a few address fields&lt;/li&gt;
&lt;li&gt;phone number&lt;/li&gt;
&lt;li&gt;website&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;etc.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s just like creating a spreadsheet with column headings across the top for those fields. You can then add a row for each supplier you record.&lt;/p&gt;
&lt;p&gt;Now, if we communicate with our suppliers, we may want to store the contact details of a few key people at each supplier.&lt;/p&gt;
&lt;p&gt;Typically, a naive spreadsheet user would add a few more columns (fields in database parlance), things like Contact Name 1, Phone 1, Email 1, Contact Name 2, Phone 2, Email 2. As you can imagine if there are more than one or two contacts, it would become pretty cumbersome and difficult to maintain.&lt;/p&gt;
&lt;p&gt;With our database we can easily do a lot better and create a separate table of contacts that links to the suppliers table - in fact it &lt;strong&gt;relates&lt;/strong&gt; to it. That&amp;rsquo;s why relational databases are so called, just because they&amp;rsquo;re very good at dealing with relations between tables.&lt;/p&gt;
&lt;p&gt;So we have our contact table, maybe with fields&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contact name&lt;/li&gt;
&lt;li&gt;Role&lt;/li&gt;
&lt;li&gt;Direct Line number&lt;/li&gt;
&lt;li&gt;Email address&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;etc.&lt;/p&gt;
&lt;p&gt;To connect them we add another field of a special type, called a &lt;em&gt;relation&lt;/em&gt;. It can be called Company, but rather than storing the company name again (we already have stored the company name in the suppliers table), it will be a link to a particular company. Don&amp;rsquo;t worry about how that works behind the scenes, just know that the Company relation links to a supplier.&lt;/p&gt;
&lt;p&gt;So now we have&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/join.png&#34; alt=&#34;join&#34;&gt;&lt;/p&gt;
&lt;p&gt;We can now add as many contacts as we like to a supplier. And if we decide to store some more data about each contact, maybe a link to their LinkedIn profile for example, we can add that field to the contacts table and it will automatically be there for all contacts (as opposed to our naive spreadsheet example).&lt;/p&gt;
&lt;h2 id=&#34;a-more-complex-example&#34;&gt;A more complex example&lt;/h2&gt;
&lt;p&gt;That&amp;rsquo;s a good start. Moving on, there&amp;rsquo;s one more type of relation it&amp;rsquo;s useful to understand - the &amp;lsquo;many to many&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;Our link between contacts and suppliers above is called a &amp;lsquo;one to many&amp;rsquo; (or sometimes many to one) relationship. The reason is simply that one supplier can have many contacts attached.&lt;/p&gt;
&lt;p&gt;What happens if we think about a more complex case? Suppose our suppliers supply us with raw materials, for example ingredients and packaging. We may want to record which materials each supplier supplies.&lt;/p&gt;
&lt;p&gt;We could set it up as above, where we have a raw materials table. A raw material has a relation field linking it to a supplier, so one supplier can supply many materials.&lt;/p&gt;
&lt;p&gt;However, what happens if a particular raw material is supplied by more than one company? You may have a primary supplier, then various fallbacks for example.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;d have to create a new raw material record for each supplier. That would be ok if our raw material record consisted of nothing more than a name and maybe a price, but there could be dozens or hundreds of fields added as we build up our system - to store nutritional information, chemical properties, allergens, etc. etc. That would mean lots of duplication to keep track of. And if we want to later build recipes which use our raw materials, we&amp;rsquo;d probably just want a recipe to refer to &amp;lsquo;flour&amp;rsquo;, not &amp;lsquo;flour from Supplier X&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;The solution is to create a &lt;strong&gt;many to many&lt;/strong&gt; relation, where one supplier can provide many raw materials but also a single raw material can be linked to many different suppliers.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s no new field type to get to know, we just use the standard one to many relation we&amp;rsquo;ve already learned about in a clever new way - we use two of them, plus a join table. The structure looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/junction-table.png&#34; alt=&#34;junction table&#34;&gt;&lt;/p&gt;
&lt;p&gt;The table in the middle, Links, is called a join table, or junction table.&lt;/p&gt;
&lt;p&gt;It has a normal relation field linking it to suppliers, and also one linking to raw materials. By adding a record to the links table, we can join any raw material to any supplier. A supplier can then have lots of raw materials, but an raw material can also have lots of suppliers.&lt;/p&gt;
&lt;p&gt;The video above also explains this type of relation if you&amp;rsquo;ve not already watched it.&lt;/p&gt;
&lt;h3 id=&#34;when-to-use-the-many-to-many&#34;&gt;When to use the many to many&lt;/h3&gt;
&lt;p&gt;You may have a niggling thought at the back of your mind: how do I know whether it&amp;rsquo;s best to use a simple one to many relation, or a more complex many to many setup? Surely I could use many to many for contacts and suppliers too? A single contact may be associated with more than one supplier, for example if they&amp;rsquo;re a contractor, or if they move jobs.&lt;/p&gt;
&lt;p&gt;The answer to that just comes down to your judgement. Although Agilebase creates a friendly, easy to use interface on top of the data structure, the many to many does add complexity. So it&amp;rsquo;s a bit of a trade-off. However the advantage of a no-code system like Agilebase is that you can rapidly try out ideas and see which one works best. As time goes on you&amp;rsquo;ll get a sense of what works best in which situation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you do want to learn more about this topic, it&amp;rsquo;s called &amp;lsquo;database normalisation&amp;rsquo; and there&amp;rsquo;s plenty written about it!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;I hope that gives you a bit of background about what a table is, what a relation is and how they work together.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A table is a store of data about a single concept e.g. a company or contact&lt;/li&gt;
&lt;li&gt;A relation field links tables together e.g. a contact belongs to a company&lt;/li&gt;
&lt;li&gt;Many to many relations (created with a join table) are sometimes useful. They allow us to link many records of one table to many of another.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That&amp;rsquo;s pretty much all of the most important information you&amp;rsquo;ll need to know about data structures. The rest of the documentation will show you how to create applications practically. Have fun!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Roles</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/</guid>
      <description>
        
        
        &lt;p&gt;The primary purpose of roles is to apply privileges to groups of users, rather than applying them individually. That makes managing large numbers of users easier and also more secure as it&amp;rsquo;s easy to see which privileges each type of user has and which they don&amp;rsquo;t.&lt;/p&gt;
&lt;p&gt;Roles have some other important uses, such as multi-tenanting, described below.&lt;/p&gt;
&lt;h2 id=&#34;creating-a-role&#34;&gt;Creating a role&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Go to the homepage and toggle development mode on
42 Click the &amp;lsquo;+ ROLE&amp;rsquo; button at the top right of the screen&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/add-role.png&#34; alt=&#34;Add Role&#34;&gt;&lt;/p&gt;
&lt;p&gt;You should now see an editing screen with the details of the role you just created. You can give it a name and there are a few options:
&lt;img src=&#34;https://docs.agilebase.co.uk/new-role-details.png&#34; alt=&#34;Role details&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Allow Export&lt;/strong&gt;&lt;br&gt;
Referrs to exporting to spreadsheet - see &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/exporting-to-spreadsheet/&#34;&gt;spreadsheet exports&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Allow global editing&lt;/strong&gt;
Users with &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/&#34;&gt;edit privileges&lt;/a&gt; on a particular table, when added to this role, will be able to perform global edits on the data.&lt;/p&gt;
&lt;p&gt;To perform a global edit, the user should&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;filter the view (by typing into the filter boxes at the top of each column) to narrow down the rows to those which should be edited&lt;/li&gt;
&lt;li&gt;double click on a column header in a view, to edit the data in that field. The field must be from the view&amp;rsquo;s parent table.&lt;/li&gt;
&lt;li&gt;click the &amp;rsquo;edit filtered&amp;rsquo; button which appears&lt;/li&gt;
&lt;li&gt;type in the value you want to apply and follow through the prompts&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;User Visibility&lt;/strong&gt; and &lt;strong&gt;Allow only multi-tenanting views to be seen&lt;/strong&gt;
Used to configure &lt;a href=&#34;#multi-tenanting&#34;&gt;multi-tenanting&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;members&#34;&gt;Members&lt;/h3&gt;
&lt;p&gt;Tick each user to add them to the role. Users will gain all the privileges defined by the role.&lt;/p&gt;
&lt;h3 id=&#34;privileges&#34;&gt;Privileges&lt;/h3&gt;
&lt;p&gt;Select the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/&#34;&gt;table privileges&lt;/a&gt; which will apply to members.&lt;/p&gt;
&lt;p&gt;Privileges are additive - if a user is a member of multiple roles, they gain all the privileges from each of those roles added together.&lt;/p&gt;
&lt;h2 id=&#34;multi-tenanting&#34;&gt;Multi-tenanting&lt;/h2&gt;
&lt;p&gt;Multi-tenanting is the ability to separate users into groups who can’t see each other’s data. This can be used for example to allow different sets of companies, clubs, or membership groups (or whatever the organisational group is) to use the same system features whilst remaining separate from each other.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Multi-tenanting is a powerful feature that can be used not just for customers to segragate data amongst their users.&lt;/p&gt;
&lt;p&gt;Partners can also use this facility if building software to widely market. In that case, each customer they sign up can very quickly be set up with their own private dataset, whilst the partner retains the ability to add features which will automatically apply to everyone.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To set up multi-tenanting:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;first &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/&#34;&gt;add a text field&lt;/a&gt; to all tables in the system for which you want data to be segragated. The field must be named the same in every table, for example&amp;rsquo;s sake here let&amp;rsquo;s assume it&amp;rsquo;s called &amp;lsquo;account name&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;Then create one role for each set of users who you want to segregate. We&amp;rsquo;ll assume there&amp;rsquo;s one called &amp;lsquo;Customer A&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;In the role details screen for the Customer A role, tick &lt;em&gt;user visibility&lt;/em&gt;. That means that users in this role won&amp;rsquo;t see users in other roles with the same option ticked. In other words, users from Customer A won&amp;rsquo;t be able to select Customer B or Customer C users when doing things like adding comments or assigning users to records.&lt;/li&gt;
&lt;li&gt;Under &lt;em&gt;restrict data access&lt;/em&gt; in the role details, enter &lt;code&gt;account name = Customer A&lt;/code&gt;, i.e. &lt;em&gt;Filter Field Name&lt;/em&gt; = &amp;lsquo;account name&amp;rsquo;, &lt;em&gt;Filter Value&lt;/em&gt; = &amp;lsquo;Customer A&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Finally, ensure the account name field is present in all views based on the table. When creating a view, any fields used for multi-tenanting will automatically be added but you may need to retro-fit any existing views.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This has two effects -&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;When a user assigned to the Customer A role creates a new record in one of the multi-tenanting tables, the account name field will automatically be populated with the value Customer A (as entered under &lt;em&gt;restrict data access&lt;/em&gt;). The field will be invisible to them - they won&amp;rsquo;t be able to see or edit the value.&lt;/li&gt;
&lt;li&gt;When looking at records in a view, a filter will be automatically applied so the user only sees records where account name = Customer A.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Users who &lt;strong&gt;aren&amp;rsquo;t&lt;/strong&gt; a member of the role will see the account name field in the data editing form and in views. This can be useful for allowing e.g. group managers to see all data.&lt;/p&gt;
&lt;p&gt;If any multi-tenanting roles are set up, then views which &lt;strong&gt;don&amp;rsquo;t&lt;/strong&gt; contain a multi-tenanting field will be marked in red in the administration interface, as a warning. If a multi-tenanting user loads one of these views, they will see all records. Typically, practically all views will need the multi-tenanting field to be present.&lt;/p&gt;
&lt;h4 id=&#34;allow-only-multi-tenanting-views-to-be-seen&#34;&gt;Allow only multi-tenanting views to be seen&lt;/h4&gt;
&lt;p&gt;Optionally, this can be ticked. If ticked, user&amp;rsquo;s will only be shown views which contain the multi-tenanting field, &amp;lsquo;Account Name&amp;rsquo; in the example above.&lt;/p&gt;
&lt;p&gt;This is an added protection - if the multi-tenanting field is removed from a view, the user won&amp;rsquo;t see it any more. Otherwise they&amp;rsquo;d be able to see all data in the view, even that which they shouldn&amp;rsquo;t. This can also be useful to set when there is partial multi-tenanting set up, i.e. some views are multi-tenanted but others aren&amp;rsquo;t and you only want certain groups (e.g. people outside the organisation) to see the multi-tenanted parts, not everything.&lt;/p&gt;
&lt;h3 id=&#34;complex-multi-tenanting&#34;&gt;Complex multi-tenanting&lt;/h3&gt;
&lt;h4 id=&#34;multi-level&#34;&gt;Multi-level&lt;/h4&gt;
&lt;p&gt;Users may be a member of more than one multi-tenanting role. For example you may use two multi-tenanting fields/roles, one for a company and another for a division. Members of a company role will be able to see data from all divisions in their company and members of both a company and a division role will only be able to see data for a single division.&lt;/p&gt;
&lt;h4 id=&#34;multi-account-via-multiple-roles&#34;&gt;Multi-account (via multiple roles)&lt;/h4&gt;
&lt;p&gt;It&amp;rsquo;s also possible for a user to be a member of multiple roles, all of which are set to multi-tenant on the same field, with different values. E.g. if a user is a member of Company A and Company B roles as in our example above, they will see data from those two companies when viewing records, but not Company C.&lt;/p&gt;
&lt;p&gt;This works best when the user has read-only privileges on the data, e.g. for a manager reporting on those two companies. They can view records but not add new records, as the system is unable to determine the value of the account name field to use.&lt;/p&gt;
&lt;h4 id=&#34;multi-account-via-_contains_-filtering&#34;&gt;Multi-account (via &lt;em&gt;contains&lt;/em&gt; filtering)&lt;/h4&gt;
&lt;p&gt;It&amp;rsquo;s also possible to define a role filter under &lt;em&gt;restrict data access&lt;/em&gt; with a &amp;lsquo;contains&amp;rsquo; rather than an &amp;lsquo;=&amp;rsquo; filter. You can then use a naming convension for your account name values to allow members of this role to see multiple accounts. As above, users of this role will need to be read-only on the data.&lt;/p&gt;
&lt;h4 id=&#34;api-setup&#34;&gt;API setup&lt;/h4&gt;
&lt;p&gt;In a multi-tenanting account, it&amp;rsquo;s possible to create new tenants, with users, by API, as opposed to the manual actions of an administrator. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/creating-user-accounts/&#34;&gt;Creating user accounts with the API&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;role-properties&#34;&gt;Role properties&lt;/h2&gt;
&lt;h3 id=&#34;brand-name-and-domain&#34;&gt;Brand name and domain&lt;/h3&gt;
&lt;p&gt;These two options allow system emails (password reset notification etc.) to come from a domain name of your choice and be branded with a particular &amp;lsquo;app&amp;rsquo; name. This can be useful if you&amp;rsquo;re creating a public-facing app using Agilebase, rather than applications for your own staff.&lt;/p&gt;
&lt;p&gt;To allow the domain name to work, you&amp;rsquo;ll need to contact us to set it up - our server will need to be authorised to send email from your domain.&lt;/p&gt;
&lt;h3 id=&#34;custom-menus&#34;&gt;Custom menus&lt;/h3&gt;
&lt;p&gt;It’s possible to add custom menu items into the user menu (the one at the top right that appears if you click your user icon). That means if your company has specific help pages or process documentation relevant to your organisation or application, you can make them available from within Agilebase.&lt;/p&gt;
&lt;p&gt;Each custom menu has a title, description and URL, which will be opened in a new tab when the menu item’s chosen.&lt;/p&gt;
&lt;p&gt;Simply add these into the &lt;strong&gt;menu title&lt;/strong&gt;, &lt;strong&gt;menu description&lt;/strong&gt; and &lt;strong&gt;menu URL&lt;/strong&gt; properties of a role. Assigning that role to a user will add the menu item to their profile menu.&lt;/p&gt;
&lt;p&gt;To add multiple menu items to a user or users, assign multiple roles, each with one menu item defined.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Tiles</title>
      <link>https://docs.agilebase.co.uk/docs/tiles/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tiles/</guid>
      <description>
        
        
        &lt;p&gt;A tile on a user&amp;rsquo;s home screen represents an application or module of an application - a collection of data and functionality that forms a coherent whole.&lt;/p&gt;
&lt;p&gt;There are five types of tile, each of which present data in a different way.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data tile
&lt;ul&gt;
&lt;li&gt;the most common tile type - from the administrator&amp;rsquo;s viewpoint this is a collection of &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;views&lt;/a&gt;. The user can navigate the views, search for data, edit records etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Image / document library
&lt;ul&gt;
&lt;li&gt;a type of data tile. Views which contain a document field can be displayed in &amp;lsquo;card&amp;rsquo; format to show large document previews, rather than the usual &amp;lsquo;rows&amp;rsquo; format&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Calendar
&lt;ul&gt;
&lt;li&gt;can display any views in the system containing date/time fields in calendar formats, such as a standard month layout, or gannt-like chart&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Visualisations
&lt;ul&gt;
&lt;li&gt;rather than a collection of views, displays a collection of charts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Comment stream
&lt;ul&gt;
&lt;li&gt;brings together everyone&amp;rsquo;s &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/comment-feeds/&#34;&gt;comments&lt;/a&gt; (that a user has privileges to see) from everywhere in the system into one place. The newest comments are shown in the tile on the user&amp;rsquo;s homepage. Clicking on a comment loads the record it&amp;rsquo;s attached to&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Data tiles need to be created by an administrator. Once a data tile is created and filled with views, it can be added to a user&amp;rsquo;s screen either as a standard data tile or, if the views contain document fields, optionally as an image/document library tile.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Other types of tile i.e. calendar, visualisation and comment stream tiles need not be created by an administrator, they are built-in facilities of the platform. Each of these tile offers different ways of seeing data collected from across the system. As such they are automatically available to add to a user&amp;rsquo;s screen.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;creating-a-tile&#34;&gt;Creating a tile&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Go to the homepage and toggle development mode&lt;/li&gt;
&lt;li&gt;Click the &amp;lsquo;+ TILE&amp;rsquo; near the top right of the screen&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You should now see an editing screen with the details of the tile you just created.
&lt;img src=&#34;https://docs.agilebase.co.uk/tile-details.png&#34; alt=&#34;Tile editing&#34;&gt;&lt;/p&gt;
&lt;p&gt;The available options are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name - the tile name&lt;/li&gt;
&lt;li&gt;Section - optional. If you have a large number of tiles, you can organise them into sections. This is an aid for administrators only, it doesn&amp;rsquo;t affect end users&lt;/li&gt;
&lt;li&gt;Index - affects the order of tiles on screen, lower numbered tiles appear before higher&lt;/li&gt;
&lt;li&gt;Purpose - can be used as help content to tell users about this tile&lt;/li&gt;
&lt;li&gt;Colour - the colour will be automatically chosen to avoid as much colour duplication as possible, however you can manually change the colour if you like, e.g. to organise similarly themed or related tiles together visually&lt;/li&gt;
&lt;li&gt;Icon - a tile icon can be chosen from the icon panel&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;A multitude of icons are available, from &lt;a href=&#34;https://fontawesome.com&#34;&gt;Font Awesome&lt;/a&gt;. They are constantly adding more so if you see one that&amp;rsquo;s available on their website that&amp;rsquo;s not in our set yet then just let us know.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;adding-views-to-a-data-tile&#34;&gt;Adding views to a data tile&lt;/h2&gt;
&lt;p&gt;Data tiles need to contain one or more views to be useful. If you have no tables or views yet, you may want to check out the &lt;a href=&#34;https://docs.agilebase.co.uk/guides/&#34;&gt;Quick Start Guides&lt;/a&gt;, or see &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;Views&lt;/a&gt; for full details on view creation.&lt;/p&gt;
&lt;p&gt;When editing a view, in the &lt;em&gt;properties&lt;/em&gt; panel, choose the tile which you want to place it in from the &lt;em&gt;Tile&lt;/em&gt; dropdown.&lt;/p&gt;
&lt;h2 id=&#34;adding-and-removing-tiles-from-users&#34;&gt;Adding and removing tiles from users&lt;/h2&gt;
&lt;p&gt;Users can themselves add tiles to their own homepages (unless they have customised UI options to prevent this). However, administrators can also do this for them.&lt;/p&gt;
&lt;p&gt;To add a tile to a user&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to the homepage and toggle development mode&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;users&lt;/em&gt;. Select the user you wish to edit&lt;/li&gt;
&lt;li&gt;Open the &lt;em&gt;Tiles&lt;/em&gt; panel&lt;/li&gt;
&lt;li&gt;Click the tile you want to add
&lt;ul&gt;
&lt;li&gt;If it&amp;rsquo;s a data tile or document / image library tile, you&amp;rsquo;ll be prompted for the primary view, which is the view that will load when the user first opens the tile. The most commonly used view for the tile is the default.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;auto-adding-tiles&#34;&gt;Auto-adding tiles&lt;/h3&gt;
&lt;p&gt;Tiles can also be added automatically in bulk by assigning a user role.&lt;/p&gt;
&lt;p&gt;When editing a user, click the &lt;em&gt;Roles&lt;/em&gt; button. Next to each role listed is a list of tiles that will be added to their screen if that role is assigned to them. This is a convenience feature to speed up setting up their home screen. The tiles shown for a role are those which more than half of the members of that role have (tiles which the user already has aren&amp;rsquo;t listed).&lt;/p&gt;
&lt;p&gt;After assigning a role, if any tiles aren&amp;rsquo;t needed for a particular user, they can be removed from the &lt;em&gt;Tiles&lt;/em&gt; panel for that user.&lt;/p&gt;
&lt;h2 id=&#34;system-tiles&#34;&gt;System tiles&lt;/h2&gt;
&lt;p&gt;As an administrator, you will likely create a number of views which aren&amp;rsquo;t meant to be directly visible by users, but which are for the internal workings of your applications. For example, workflows, tab views etc. - see &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/special-uses/&#34;&gt;Views - Special Uses&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To prevent users seeing these, you can put then in system tiles. A system tile is simply one which has a name starting with the word &amp;lsquo;System&amp;rsquo;. These will only be visible to administrators. You may find it a good idea to create a number of System tiles for organisation purposes.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: 2. Capturing Company and Contact data (Introducing Relational Databases)</title>
      <link>https://docs.agilebase.co.uk/guides/guide1-crm/adding_relational_data/</link>
      <pubDate>Wed, 16 Aug 2023 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/guides/guide1-crm/adding_relational_data/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Learning Aim:&lt;/strong&gt; Create related Tables to demonstrate the power of relational databases&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; User to have watched “Creating a basic task list” video&amp;quot;&lt;/p&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;In this step of the guide we will build the engine of our CRM and in doing so start to introduce the concept of a relational database. We will do this as a practical example and you’ll see how agilebase makes this straight forward. We will be building a bigger system, but for the most part it’s simply reusing things we’ve already covered.. Let’s start with building a table called ‘Organisations’&lt;/p&gt;
&lt;h2 id=&#34;create-a-table-called-organisations&#34;&gt;Create a table called &amp;ldquo;Organisations&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;To get our CRM going we need somewhere to store information about the organisations we will interact with. This can easily be achieved by adding a new table, a tile and an initial view. If you need a quick refresher watch the video below, or if you need more detail go back to &lt;a href=&#34;https://docs.agilebase.co.uk/guides/guide1-crm/tasklist/&#34;&gt;step 1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[guide 1.2 - video 1]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/F-4Qp-5udsU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;create-a-table-called-sites&#34;&gt;Create a table called &amp;ldquo;Sites&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;A company might have more than one location, so we will need a table to hold information about the various addresses they might have - &amp;lsquo;Sites&amp;rsquo;. This is the first example we have of adding a Relation field.
If you want to learn more then please visit &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/&#34;&gt;relational database concepts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[guide 1.2 - video 2]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/psJRDyW3RMs&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;create-a-table-called-contacts&#34;&gt;Create a table called &amp;lsquo;Contacts&amp;rsquo;&lt;/h2&gt;
&lt;p&gt;Let’s add another table of data that is related to an Organisation, the people who work there - &amp;lsquo;Contacts&amp;rsquo;.
We will link to two tables, the organisation they work for and the site they primarily work from.&lt;/p&gt;
&lt;p&gt;[guide 1.2 - video 3]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Mrj6Iu7fxmg&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;adding-tabs&#34;&gt;Adding tabs&lt;/h2&gt;
&lt;p&gt;Viewing and adding data in isolation doesn’t feel very natural. What we want to do is look at an organisation’s records and see its list of contacts there and then. One way Agilebase does this is through adding ‘Tabs’ to a record.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you want to know more visit or documentation about &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/&#34;&gt;tabs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[guide 1.2 - video 4]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/nRSQ3IARLVI&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;optional---linking-tasks-to-organisations&#34;&gt;OPTIONAL - Linking Tasks to Organisations&lt;/h2&gt;
&lt;p&gt;At this point you may decide to upgrade the Task system we created previously. If you want to do this you will need to update the Tasks table to have a Parent Org, adding a Relation field (to organisation) and then adding the new Tab to the Organisation table just as we’ve done before.&lt;/p&gt;
&lt;p&gt;You might also want to go back in to some of the views people use to access tasks and add a field so they know which organisation it&amp;rsquo;s for.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Tables</title>
      <link>https://docs.agilebase.co.uk/docs/tables/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/</guid>
      <description>
        
        
        &lt;p&gt;These pages provide a guide to using tables, which are the backbone of data storage in Agilebase. Agilebase offers rich table functionality so that data can be processed in the optimal way for your application.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: 3. Adding a Sales Pipeline - Kanban</title>
      <link>https://docs.agilebase.co.uk/guides/guide1-crm/sales_pipeline/</link>
      <pubDate>Wed, 16 Aug 2023 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/guides/guide1-crm/sales_pipeline/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Learning Aim:&lt;/strong&gt;  Introduce Kanban / Card view. Power of dropdowns on fields. Show how easy to add graphs. Show off the advanced UI elements of aB&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; User to have watched “Capturing Company and Contact details” video. Understand relational data&lt;/p&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;In this step of our guide we going to look at adding a dropdown field to &amp;ldquo;control&amp;rdquo; data input as we want to set up a Kanban board approach to managing Sales Opportunities.
This video assumes you are happy creating tables so jumps to the point of adding the Dropdown field.
If you are following along and want to build this table please copy the following table structure&lt;/p&gt;
&lt;p&gt;Fields we will need: Organisation(relation to Organisation) Title (text), Detail (text large), Date of Enquiry (date), Source (text), Main Contact (relation to contact), Opp. Owner (text), Demo-Meeting (Separator), Date of Demo (date), Meeting Notes (text large), Quote (Separator), Quote Amount (number), Quote notes (text large), Outcome (Separator), Date Won (date), Date lost (date), Lost reason (text), closed by (text), closed date (date)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/Sales_Opportunity_pre_dropdown&#34; alt=&#34;Sales Opprtunity Fields before Status DropDown has been added&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;adding-a-dropdown-field&#34;&gt;Adding a dropdown field&lt;/h2&gt;
&lt;p&gt;A dropdown field is as simple to add as any other field type. However there are some considerations about how it is configured to help the user experience.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Having an initial comma in the list means the default value will be blank.&lt;/li&gt;
&lt;li&gt;Adding an initial number to each option in the list is very useful to imply an order (an override the default alphabetical ordering).&lt;/li&gt;
&lt;li&gt;Autofilling with a list of users. &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/#lists-of-users&#34;&gt;Click here for more info&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In this stage of our guide we are going to add the stages a typical Sales opportunity will pass through.
[Guide 1.3 - video 1]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/1PzY64hPWlE&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;creating-a-kanban-view&#34;&gt;Creating a Kanban view&lt;/h2&gt;
&lt;p&gt;We can now create a view to show all the Sales Opportunities we will be mansaging.
This is the basically the same as we’ve done before
&lt;a href=&#34;https://docs.agilebase.co.uk/guides/guide1-crm/tasklist/#adding-views-that-show-all-the-tasks-that-have-been-createds&#34;&gt;Click here to see how add a view&lt;/a&gt;
Before We set the interface option to be &amp;ldquo;Cards in Column&amp;rdquo; its important to move the controlling field to the top of the list. In this case we want ther Kanban board to be controlled by Status, therefore it should be the first DropDown field in the view.&lt;/p&gt;
&lt;p&gt;[Guide 1.3 - video 2]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ydCtGAdgqjk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;adding-graphs&#34;&gt;Adding Graphs!&lt;/h2&gt;
&lt;p&gt;Sales teams love graphs. After all, a picture says a thousand words, and agileBase has an easy to use graphing facility to help you show off the insights your data contains.
Creating graphs can be done by any user, but it usually helps if the developers take the lead and build the obvious ones.&lt;/p&gt;
&lt;p&gt;This video demonstrates adding a pie chart to show the number of Sales Opportunites by Source, and also a column graph to show volume of sales enquires over time. It also shows the advanced option of using Stcaking to add more insights.&lt;/p&gt;
&lt;p&gt;[Guide 1.3 - video 3]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/3FOOk8QS5RE&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Adding, editing and removing</title>
      <link>https://docs.agilebase.co.uk/docs/tables/adding-and-removing/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/adding-and-removing/</guid>
      <description>
        
        
        &lt;p&gt;A table is a store of data of a particular type e.g. a company, contact, product or invoice. Tables are the fundamental building blocks of an Agilebase application.&lt;/p&gt;
&lt;h2 id=&#34;adding-a-table&#34;&gt;Adding a table&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;On the homepage, click the &amp;rsquo;toggle&amp;rsquo; button in the top-right of the screen to enable dev mode (if it is not enabled already)&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;+ Table&lt;/em&gt;, choosing a name for the new table&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;TODO: images&lt;/strong&gt;
&lt;img src=&#34;https://docs.agilebase.co.uk/add-table-button.png&#34; alt=&#34;Add Table Button&#34;&gt;&lt;/p&gt;
&lt;p&gt;You can change the table&amp;rsquo;s name and add a longer description under &lt;strong&gt;Help&lt;/strong&gt;. This description will be used as help text in the user interface.&lt;/p&gt;
&lt;h3 id=&#34;naming-tables&#34;&gt;Naming tables&lt;/h3&gt;
&lt;p&gt;When naming a table, it&amp;rsquo;s best to use a plural form. Also avoid filler endings like &amp;lsquo;info&amp;rsquo; or &amp;lsquo;details&amp;rsquo;. So rather than &amp;lsquo;company info&amp;rsquo;, you might call a table &amp;lsquo;companies&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;The reason for this is that the user interface will automatically convert plural names into singular forms where appropriate. So for example if there&amp;rsquo;s a plus button on the screen to allow the user to add a new record in the table, it will automatically recognise the table and title the button Add Company.&lt;/p&gt;
&lt;p&gt;If you build a large system with lots of tables, you may find it a good idea to prefix table names using a numbering/lettering system e.g.
&lt;code&gt;a) table 1&lt;/code&gt;
&lt;code&gt;b) table 2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In the administrator interface, tables are listed alphabetically, so you can arrange the tables into a logical order with this method.&lt;/p&gt;
&lt;p&gt;The user interface will strip out any prefixes when displaying names to users, if they end with a closing bracket &lt;code&gt;)&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;editing-a-table&#34;&gt;Editing a table&lt;/h2&gt;
&lt;p&gt;There are two ways to edit a table: from the homepage, or from editing a record.&lt;/p&gt;
&lt;h3 id=&#34;from-the-homepage&#34;&gt;From the homepage&lt;/h3&gt;
&lt;p&gt;When you toggle development mode with the toggle in the top right corner of the screen, you can see a &lt;em&gt;Map&lt;/em&gt; and &lt;em&gt;List&lt;/em&gt; items: the Map shows tables and relations between them, the List can show tables and also other entities, like views or users.&lt;/p&gt;
&lt;p&gt;From either display, you can click a table to edit it. Once open, you can also pin tables with the pin icon at the top left of the editing panel. The table will then appear &amp;lsquo;pinned&amp;rsquo; to the lefthand side of the development homepage and will remain there until unpinned, or you log out. This can be useful when working with a number of different tables.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/homepage-connections-mode.png&#34; alt=&#34;Connections mode&#34;&gt;
&lt;img src=&#34;https://docs.agilebase.co.uk/homepage-list-mode.png&#34; alt=&#34;List mode&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;from-editing-a-record&#34;&gt;From editing a record&lt;/h3&gt;
&lt;p&gt;When build mode is enabled, if you are viewing an individual record then clicking the big pencil at the top left of the screen lets you edit the underlying table.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/editing-a-record.png&#34; alt=&#34;Editing a record&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;removing-a-table&#34;&gt;Removing a table&lt;/h2&gt;
&lt;p&gt;Before removing a table, you first need to remove all views and &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/#removing-a-field&#34;&gt;fields&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not necessary to remove actual data records from the table first.&lt;/p&gt;
&lt;p&gt;A list of existing views is visible in the &lt;em&gt;name and views&lt;/em&gt; section of the panel sidebar. Visit each view and delete it.&lt;/p&gt;
&lt;p&gt;Then below to the table&amp;rsquo;s &lt;em&gt;name and views&lt;/em&gt; section is the &lt;em&gt;fields&lt;/em&gt; section. Delete all the existing fields from here.&lt;/p&gt;
&lt;p&gt;When you&amp;rsquo;re done, you can click the &lt;em&gt;Remove table&lt;/em&gt; button in &lt;em&gt;name and views&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;When deleting views and fields, you may find you have to first delete other views or fields they depend on. In complex systems there can be chains of objects that need to be deleted in order.&lt;/p&gt;
&lt;p&gt;Deleting is a destructive process so is not highly automated on purpose, to avoid accidental deletion. However at each stage you&amp;rsquo;ll be shown any dependencies which have to be removed first, so you can follow through the chain.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Exporting</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/exporting/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/exporting/</guid>
      <description>
        
        
        &lt;p&gt;Exporting to spreadsheet is only one way of getting data out of Agilebase, but it is the most commonly used amongst everyday users. For less ad-hoc data transfers, such as integrations with third party systems involving incoming and/or outgoing data, the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;API&lt;/a&gt; can be used.&lt;/p&gt;
&lt;h2 id=&#34;allowing-exports&#34;&gt;Allowing exports&lt;/h2&gt;
&lt;p&gt;In order for a user to be allowed to export to spreadsheet, a number of critieria have to be matched, to suitably protect your organisation&amp;rsquo;s data.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The user must have &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/#two-factor-authentication&#34;&gt;Two Factor Authentication&lt;/a&gt; enabled&lt;/li&gt;
&lt;li&gt;The view to export from must have exporting enabled (it&amp;rsquo;s enabled by default). To do this
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/introduction/development-mode/&#34;&gt;edit the view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;under &lt;em&gt;properties and options&lt;/em&gt;, tick &lt;em&gt;allow exports&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The user must also be a member of a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/&#34;&gt;role&lt;/a&gt; that allows exporting (disabled by default). To allow exporting for a role,
&lt;ul&gt;
&lt;li&gt;on the homepage, toggle &lt;a href=&#34;https://docs.agilebase.co.uk/docs/introduction/development-mode/&#34;&gt;development mode&lt;/a&gt; on&lt;/li&gt;
&lt;li&gt;click &lt;em&gt;roles&lt;/em&gt; and select the role you want&lt;/li&gt;
&lt;li&gt;tick &lt;em&gt;allow exports&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A user with &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/&#34;&gt;develop privileges&lt;/a&gt; on the view&amp;rsquo;s parent table can bypass criteria 2 and 3. This privilege is not commonly applied to normal users.&lt;/p&gt;
&lt;h2 id=&#34;exporting&#34;&gt;Exporting&lt;/h2&gt;
&lt;p&gt;A user with the ability to export can do so by opening the view, clicking the export icon near the top right and selecting &lt;em&gt;export&lt;/em&gt; from the options in the menu.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/export.png&#34; alt=&#34;exporting&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the user &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/filters/&#34;&gt;filters&lt;/a&gt; the data on screen before doing this, only the filtered data will be exported.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The resulting spreadsheet will be in Microsoft Excel format. The first sheet will be some metadata about the export, such as a timestamp, the name of the exporter and any filters applied. The second sheet will be the actual data.&lt;/p&gt;
&lt;p&gt;Column A in the data sheet holds the internal row ID of each record. This is useful for matching purposes if you&amp;rsquo;re going to be modifying then re-importing the data.&lt;/p&gt;
&lt;h3 id=&#34;charts&#34;&gt;Charts&lt;/h3&gt;
&lt;p&gt;If the view has &lt;a href=&#34;https://docs.agilebase.co.uk/docs/charting/&#34;&gt;charts&lt;/a&gt; attached, one sheet per chart will also be included in the spreadsheet. The contents will be the chart data, not the chart visualisation itself, but the visualisation can easily be re-created in the spreadsheet from the data if necessary.&lt;/p&gt;
&lt;h2 id=&#34;limits-and-notifications&#34;&gt;Limits and notifications&lt;/h2&gt;
&lt;p&gt;An administrator can log whether each table contains commercially sensitive data (ticked by default) and/or personal data (see &lt;a href=&#34;https://gdpr-info.eu/art-4-gdpr/)&#34;&gt;https://gdpr-info.eu/art-4-gdpr/)&lt;/a&gt;. If either of these options is ticked for a view&amp;rsquo;s parent table, you’ll have additional options for&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;notifying all administrators if an export of more than a certain number of rows is done&lt;/li&gt;
&lt;li&gt;setting a hard limit to completely disallow exports of more than a certain number of rows&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To configure these options, see &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/&#34;&gt;tables&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You may also want to set an export prompt message to show people when they request an export, to remind people of their data protection obligations under the GDPR for example. This can be done in the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/advanced-usage/company-settings/#export-message&#34;&gt;company settings&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Fields</title>
      <link>https://docs.agilebase.co.uk/docs/fields/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/</guid>
      <description>
        
        
        &lt;p&gt;Adding fields to a table creates a form by which people (and other sources such as the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;API&lt;/a&gt; or &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflows&lt;/a&gt;) can enter data.&lt;/p&gt;
&lt;p&gt;There are various types of fields and field options which this section will cover.&lt;/p&gt;
&lt;h2 id=&#34;adding-a-field&#34;&gt;Adding a field&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Ensure &lt;a href=&#34;https://docs.agilebase.co.uk/docs/introduction/development-mode/&#34;&gt;development mode&lt;/a&gt; is toggled on&lt;/li&gt;
&lt;li&gt;Select the table to add a field to&lt;/li&gt;
&lt;li&gt;Click on the pencil icon above the record, if necessary, to edit the table&lt;/li&gt;
&lt;li&gt;From the controls at the top of the list of existing fields:
&lt;ul&gt;
&lt;li&gt;Type in a field name, optional description, choose a type and press the &lt;em&gt;Add&lt;/em&gt; button&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Optionally, drag and drop the field to a desired location relevant to other fields&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/adding-a-table-field.png&#34; alt=&#34;Adding a table field&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;field-level-help&#34;&gt;Field level help&lt;/h2&gt;
&lt;p&gt;Any description added to the field will be used as inline help. URLs can be included and will be turned into clickable links. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/adding-help/&#34;&gt;help&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2 id=&#34;editing-a-field&#34;&gt;Editing a field&lt;/h2&gt;
&lt;p&gt;Field name and description (help text) as well as field options can be altered at any time by clicking a field. Fields can be moved on screen by dragging.&lt;/p&gt;
&lt;p&gt;However, once set, the field type can&amp;rsquo;t be changed. A number field can&amp;rsquo;t be converted to a text field for example. In particular, a decimal number can&amp;rsquo;t be converted to a whole number field and vice versa, as integers and floating point numbers are different data types.&lt;/p&gt;
&lt;p&gt;There is a process available for changing field types, please see &lt;a href=&#34;https://docs.agilebase.co.uk/docs/advanced-usage/build-patterns/#switching-a-field-from-one-type-to-another&#34;&gt;changing field types&lt;/a&gt; if you need to do that.&lt;/p&gt;
&lt;h2 id=&#34;removing-a-field&#34;&gt;Removing a field&lt;/h2&gt;
&lt;p&gt;In the &lt;em&gt;fields&lt;/em&gt; panel, click the &lt;em&gt;x&lt;/em&gt; button to the right of a field.&lt;/p&gt;
&lt;p&gt;If the field is used in any other locations in your application, such as a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;view&lt;/a&gt;, you&amp;rsquo;ll be alerted to the fact. You&amp;rsquo;ll need to first remove the field from those locations before being able to remove it.&lt;/p&gt;
&lt;p&gt;You can also see where fields are used by scrolling to the bottom of the field editing panel and looking under &amp;lsquo;Field Uses&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/removing-a-table-field.png&#34; alt=&#34;Removing a table field&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;adding-a-field-to-multiple-views&#34;&gt;Adding a field to multiple views&lt;/h2&gt;
&lt;p&gt;First &amp;lsquo;pin&amp;rsquo; all the views to which you want to add a field. You can pin a single view by clicking on the pushpin icon when editing it, or multiple ones at once from the &amp;rsquo;name and views&amp;rsquo; panel of a table when editing it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/pin-views.png&#34; alt=&#34;pinning views&#34;&gt;&lt;/p&gt;
&lt;p&gt;When editing a field, press &amp;lsquo;add to pinned views&amp;rsquo;. The field will then be added to all pinned views which don&amp;rsquo;t already contain it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/add-to-pinned-views.png&#34; alt=&#34;adding a field to pinned views&#34;&gt;&lt;/p&gt;
&lt;p&gt;This can be particularly useful when introducing a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/#multi-tenanting&#34;&gt;multi-tenanting&lt;/a&gt; feature. Multi-tenanting means allowing different customers to access the same system, segregating their data so they each see only their own data. Part of the setup requires adding a new field to all (or most) of the views in the system.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: 4. Calculated Datafields</title>
      <link>https://docs.agilebase.co.uk/guides/guide1-crm/calculated_datafields/</link>
      <pubDate>Wed, 16 Aug 2023 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/guides/guide1-crm/calculated_datafields/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Learning Aim:&lt;/strong&gt;   Introduce calculations and basic SQL&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; User to have understanding of relational data&lt;/p&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;The ability to use your existing data to calculate new information will dramatically enhance the user interface, and lead your users to create new data!&lt;/p&gt;
&lt;p&gt;In this step fo the guide we&amp;rsquo;ll start with something simple, expanding the data we know about Organisations.&lt;/p&gt;
&lt;h2 id=&#34;calculating-the-number-of-contacts-belonging-to-an-organisation&#34;&gt;Calculating the number of contacts belonging to an Organisation&lt;/h2&gt;
&lt;p&gt;Using the All Organisations view as a starting point, clone it and rename it &amp;ldquo;Organisation - Calculations.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;We will need to join down to the Contacts table, before we create our calculation field.&lt;/li&gt;
&lt;li&gt;Go to “fields”, highlight the add a calculation section&lt;/li&gt;
&lt;li&gt;Add a calculation called “Number of Contacts”, of type ‘Whole number’.&lt;/li&gt;
&lt;li&gt;Press Add&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The important area is the ‘Calculation Definition’. In this example we want to count the number of contacts each organisation has. We can do this by using a SQL statement called Count.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;count()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Between the brackets we choose which field we want to count. In this case the contact record&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;count({contacts.id:contacts})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We now need to press update to tell agileBase we have finished editing our calculation. Press Update.&lt;/p&gt;
&lt;p&gt;As you can see the system has correctly identified that count is something known as an aggregate field and ticked the box for us.&lt;/p&gt;
&lt;p&gt;If you click back on Fields you should see the list and how calculations are highlighted in purple to distinguish from regular fields taken from a table definition. Lets drag our calculation near the front”&lt;/p&gt;
&lt;p&gt;Move the calc.&lt;/p&gt;
&lt;p&gt;Closing the edit allows us to see our results.&lt;/p&gt;
&lt;p&gt;This is a very simple example of an SQL calculation. For more examples as well as a link to the underlying Postgres documentation visit - &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/calculations/examples/&#34;&gt;docs- calculation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[guide 1.4 - video 1]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/kxsIr6yHlNg&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;calculating-the-date-of-our-latest-sale-to-create-a-our-customers-list&#34;&gt;Calculating the Date of our Latest Sale to create a &amp;ldquo;Our Customers&amp;rdquo; list&lt;/h2&gt;
&lt;p&gt;A further useful example is to show how we can use the results of a calculation to create a Live view, for example &amp;ldquo;Our Customers&amp;rdquo;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Start by adding a join down to Sales opportunities&lt;/li&gt;
&lt;li&gt;Instead of adding an existing Sales opportunity field let’s add a calculation&lt;/li&gt;
&lt;li&gt;Go to list of fields and add a calculation called “Latest Sale”, which of course will be a ‘Date’ field.&lt;/li&gt;
&lt;li&gt;Press Add&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This time our SQL looks like&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; max({sales opportunities.date won})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The same aggregate field option should be ticked for us.&lt;/p&gt;
&lt;p&gt;We can add a filter based on the values in the calculation e.g. where ‘Latest Sale’ is not blank!&lt;/p&gt;
&lt;p&gt;You should now see your list of Organisations has dramatically shrunk&lt;/p&gt;
&lt;p&gt;If you are following along, it makes sense for a Quick name change to make it “All customers”&lt;/p&gt;
&lt;p&gt;[guide 1.4 - video 2]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/tGIsw4uhYZQ&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Common Options</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-options/common-options/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-options/common-options/</guid>
      <description>
        
        
        &lt;h2 id=&#34;capitalise-field-name&#34;&gt;Capitalise field name&lt;/h2&gt;
&lt;p&gt;By default Agilebase displays field names in Title Case. Un-ticking this option disables that, which can be useful for special cases like e.g. &amp;lsquo;pH&amp;rsquo; or &amp;lsquo;Length (m)&amp;rsquo;, which would otherwise show as &amp;lsquo;PH&amp;rsquo; and &amp;lsquo;Length (M)&amp;rsquo;.&lt;/p&gt;
&lt;h2 id=&#34;icon&#34;&gt;Icon&lt;/h2&gt;
&lt;p&gt;Rather than displaying a field name, show an icon, chosen from &lt;a href=&#34;https://fontawesome.com/icons&#34;&gt;https://fontawesome.com/icons&lt;/a&gt;. For example, to show a phone icon for a phone number field, you could enter &lt;code&gt;phone&lt;/code&gt;, for an email field &lt;code&gt;envelope&lt;/code&gt; or a twitter handle &lt;code&gt;twitter&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;field-visibility&#34;&gt;Field visibility&lt;/h2&gt;
&lt;p&gt;Allow a field to be hidden or shown based on conditions.&lt;/p&gt;
&lt;p&gt;You can either select a view containing the conditions to use or just create conditions directly under the Field Visibility heading. In either case, the conditions in use will be shown.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/field-visibility.png&#34; alt=&#34;field visibility conditions&#34;&gt;&lt;/p&gt;
&lt;p&gt;Behind the scenes, the conditions are saved by creating a view (if none is selected already) and adding each condition as a filter. If a record appears in the view, the field will be visible, otherwise it won&amp;rsquo;t display to users.&lt;/p&gt;
&lt;p&gt;You can click the &amp;lsquo;visibility view&amp;rsquo; link to go to that view and edit it to add more complex conditions if you wish.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As the conditions are created in a view, this mechanism is really powerful. You can create simple or very complex critera, including all of the filter options in a view, for example basing a filter on a calculation and combining multiple filters.&lt;/p&gt;
&lt;p&gt;So you could make a field appear only when a particular point is reached in a process, or a status is changed elsewhere in a form, or perhaps it should only be visible to people who are &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/&#34;&gt;members of a certain role&lt;/a&gt;. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/filters/&#34;&gt;view filters&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Two special options are available&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;show always - the default state&lt;/li&gt;
&lt;li&gt;show never - useful for hiding fields used for internal purposes, e.g. which help the internal workings of a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;If this option is used on a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/separators/&#34;&gt;separator&lt;/a&gt; field, then the visibility rule will apply to the entire block of fields under that separator.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;lock-when-value-set&#34;&gt;Lock when value set&lt;/h2&gt;
&lt;p&gt;If the field is blank, allow a value to be entered, however as soon as it has a value, lock to prevent further editing. The user can manually unlock, but will be prompted for a reason for doing so, which will be logged against the field as a comment.&lt;/p&gt;
&lt;p&gt;This can be used to prevent accidental editing of important fields which should not usually be changed, for example a product&amp;rsquo;s stock code.&lt;/p&gt;
&lt;h2 id=&#34;unlock-if-record-in-view&#34;&gt;Unlock if record in view&lt;/h2&gt;
&lt;p&gt;If &lt;strong&gt;Lock when value set&lt;/strong&gt; is ticked, unlock on certain criteria. Works the same way as &lt;a href=&#34;#show-if-record-in-view&#34;&gt;Show if record in view&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;required&#34;&gt;Required&lt;/h2&gt;
&lt;p&gt;If ticked, prompt the user for a value when they try to leave a record without one. Note we can&amp;rsquo;t force the value, as the user could refresh the browser as a workaround.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For dropdown fields with the value(s) set to &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/#lists-of-users&#34;&gt;Lists of users&lt;/a&gt;, this has the special effect of defaulting the field to the ID of the currently logged in user.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;prominent&#34;&gt;Prominent&lt;/h2&gt;
&lt;p&gt;Prominently highlight the field on the screen, e.g. if it&amp;rsquo;s one that is important to fill out, without actually requiring a value to be supplied.&lt;/p&gt;
&lt;h2 id=&#34;set-from-previous-referenced-field&#34;&gt;Set from previous referenced field&lt;/h2&gt;
&lt;p&gt;Provides a way to calculate a default option for a field. Tick this option and place a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/referenced-data/&#34;&gt;referenced field&lt;/a&gt; just before this field. The value of this field will be set from whatever value the referenced field outputs.&lt;/p&gt;
&lt;p&gt;If the referenced field&amp;rsquo;s view has more than one field, the last one will be used, or if any have the same name as this field then that one will be.&lt;/p&gt;
&lt;p&gt;To have a value set only at a certain point in a process, this option can be combined with the &lt;a href=&#34;#show-if-record-in-view&#34;&gt;Show if record in view&lt;/a&gt; option. When the field becomes visible, the value will be set.&lt;/p&gt;
&lt;p&gt;Setting the value of a relation field is a special case because you need to set both the actual relation value, which is the numeric ID of the record you wish to relate to, and the display value i.e. what the user should see. The way to do this is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add a field or calculation with the same name as the display field for the relation. For example in a contact record, if you have a relation field &amp;lsquo;Company&amp;rsquo; with its display field set to &amp;lsquo;Company Name&amp;rsquo;, then you could create a calculation called Company Name and set it to output the name of the relevant company.&lt;/li&gt;
&lt;li&gt;Add the internal row ID for the company to the referenced field&amp;rsquo;s view. This should be the &lt;strong&gt;last&lt;/strong&gt; field in the view&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that another way of setting a value on record creation is to use a workflow set to &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/#when-a-records-created-run-this-workflow &#34;&gt;run on record creation&lt;/a&gt;. If you need to set the value on record creation, using a workflow is the best way - it will seem slightly quicker to the user. However if you need to be able to wait a while before automatically setting the value of a field, perhaps until another field has been filled in, then using this referenced field option is the way to go.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;unique&#34;&gt;Unique&lt;/h2&gt;
&lt;p&gt;Disallow any duplicate values from being entered. No records in the table can have the same value as each other.&lt;/p&gt;
&lt;h2 id=&#34;change-causes-record-refresh&#34;&gt;Change causes record refresh&lt;/h2&gt;
&lt;p&gt;Through the use of some field options like &lt;a href=&#34;#show-if-record-in-view&#34;&gt;Show if record in view&lt;/a&gt; above, the screen can change based on what&amp;rsquo;s entered into a form. This option can work as a switch to refresh the configuration of the screen if it does change as someone enters new data.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For example, if there is a table to store sales opportunities, one field may be the status. If the status changes to &lt;code&gt;won&lt;/code&gt; or &lt;code&gt;lost&lt;/code&gt;, then you may wish to show some extra fields like &amp;lsquo;date won&amp;rsquo; or &amp;lsquo;reason why lost&amp;rsquo; for example. To allow this, tick the &amp;lsquo;change causes record refresh&amp;rsquo; option on the status field. Then whenever the status changes, these fields will automatically appear if relevant.&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Field Types</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-types/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-types/</guid>
      <description>
        
        
        &lt;p&gt;These pages describe the various types of fields it is possible to have in an Agilebase application. It is recommended to begin with the basic field types before moving on to dealing with special field types.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Reporting</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/usage-reporting/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/usage-reporting/</guid>
      <description>
        
        
        &lt;p&gt;Log data reporting provides a rich view of system usage.&lt;/p&gt;
&lt;h2 id=&#34;enhanced-audit-trail&#34;&gt;Enhanced audit trail&lt;/h2&gt;
&lt;p&gt;For organisations who have activated the enhanced audit trail, all logs are stored in user-accessible tables which are just like any other tables in the system, the only difference being the data is read only. This means an administrator can use the full power of the built in Agilebase reporting features, to create views, add calculations, charts etc., even export via the API.&lt;/p&gt;
&lt;p&gt;So for example, you could analyse how many changes were made per month by each user, count the volume of logins from various locations or see what the most common fields are to search on. All actions listed on the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/&#34;&gt;usage monitoring&lt;/a&gt; page are available to query.&lt;/p&gt;
&lt;p&gt;Data is also retained for an extended period, see &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/#retention-periods&#34;&gt;retention periods&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If interested in activating this feature, please &lt;a href=&#34;https://agilechilli.com/contact-us/&#34;&gt;get in touch&lt;/a&gt;. There will be a small recurring charge added to your bill.&lt;/p&gt;
&lt;h3 id=&#34;data-stored&#34;&gt;Data stored&lt;/h3&gt;
&lt;h4 id=&#34;logins&#34;&gt;Logins&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Username&lt;/li&gt;
&lt;li&gt;Date and time&lt;/li&gt;
&lt;li&gt;IP Address&lt;/li&gt;
&lt;li&gt;Country&lt;/li&gt;
&lt;li&gt;Internet Service Provider organisation name and location&lt;/li&gt;
&lt;li&gt;Client web browser (both summary and exact version details)&lt;/li&gt;
&lt;li&gt;Client operating system&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;data-changes-record-creation--update--delete&#34;&gt;Data changes (record creation / update / delete)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Username (in the case of an API call, will be &amp;lsquo;Public API [IP address]&amp;rsquo;. In the case of a system workflow, &amp;lsquo;System&amp;rsquo;)&lt;/li&gt;
&lt;li&gt;Date and time&lt;/li&gt;
&lt;li&gt;Action (e.g. update or delete)&lt;/li&gt;
&lt;li&gt;Table&lt;/li&gt;
&lt;li&gt;Field (if a single field is updated)&lt;/li&gt;
&lt;li&gt;Row ID - internal identifier of the record updated&lt;/li&gt;
&lt;li&gt;Saved data&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;view-access&#34;&gt;View access&lt;/h4&gt;
&lt;p&gt;This covers any time a view is opened or filtered, either by a user, or an API call&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Username (in the case of an API call, will be &amp;lsquo;Public API [IP address]&amp;rsquo;)&lt;/li&gt;
&lt;li&gt;Date and time&lt;/li&gt;
&lt;li&gt;Tile and view name&lt;/li&gt;
&lt;li&gt;Details - any filters and row limit applied&lt;/li&gt;
&lt;li&gt;Rows - the number of records returned to the user or API&lt;/li&gt;
&lt;li&gt;Processing time - the total server-side processing time in milliseconds needed to retrieve the data, and if for an API, transform it into JSON format&lt;/li&gt;
&lt;li&gt;Of which Q time &lt;strong&gt;(API calls only)&lt;/strong&gt; - to achieve a fair level of load balancing, Agilebase operates a separate API request queue for each customer. If a request arrives and the system is still busy processing a previous request, the new one gets held in a queue. This field shows how much of the total processing time, in ms was spent waiting for previous requests to complete&lt;/li&gt;
&lt;li&gt;Bytes &lt;strong&gt;(API calls only)&lt;/strong&gt; - the number of bytes of JSON data returned via the API&lt;/li&gt;
&lt;li&gt;Count - if many similar requests or API calls (to a particular view) reach the server in quick succession, they will be amalgamated together into one log line. The count then shows the number of requests the log line refers to, otherwise it will be 1. If more than one, then the &lt;em&gt;rows&lt;/em&gt;, &lt;em&gt;processing time&lt;/em&gt;, &lt;em&gt;of which q time&lt;/em&gt; and &lt;em&gt;bytes&lt;/em&gt; will represent the totals for all requests&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;table-schema-changes&#34;&gt;Table schema changes&lt;/h4&gt;
&lt;p&gt;These are changes made to a table structure by someone with &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/&#34;&gt;develop&lt;/a&gt; privileges, such as adding or removing a field.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Date and time&lt;/li&gt;
&lt;li&gt;Username&lt;/li&gt;
&lt;li&gt;Table name&lt;/li&gt;
&lt;li&gt;Action e.g. &amp;lsquo;add field&amp;rsquo;, &amp;lsquo;remove field&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Details - e.g. the name of the field&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;view-schema-changes&#34;&gt;View schema changes&lt;/h4&gt;
&lt;p&gt;Changes made to a view structure, such as adding fields, filters, calculations or charts&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Date and time&lt;/li&gt;
&lt;li&gt;Username&lt;/li&gt;
&lt;li&gt;Tile and view name&lt;/li&gt;
&lt;li&gt;Action&lt;/li&gt;
&lt;li&gt;Details - additional data related to the action, e.g. if adding a field, the field name&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;authentication-changes&#34;&gt;Authentication changes&lt;/h2&gt;
&lt;p&gt;A log of administrative actions such as assigning a user to a role, assigning privileges, or user actions such as requesting a password reset&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Date and time&lt;/li&gt;
&lt;li&gt;Username (of the user making the change)&lt;/li&gt;
&lt;li&gt;Action - e.g. add privilege&lt;/li&gt;
&lt;li&gt;Table name - only if the action relates to a particular table, e.g. assigning a role to a table&lt;/li&gt;
&lt;li&gt;Details - additional data related to the action, e.g. if adding a role to the table, the role name&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;standard-reporting&#34;&gt;Standard reporting&lt;/h2&gt;
&lt;p&gt;Built in reports are available in a number of areas, whether using the enhanced audit trail or standard logging.&lt;/p&gt;
&lt;h3 id=&#34;the-dashboard&#34;&gt;The dashboard&lt;/h3&gt;
&lt;p&gt;From the tiles interface, click the bird icon at the top left, then select &lt;em&gt;usage dashboard&lt;/em&gt;. The dashboard contains system reports including usage data.&lt;/p&gt;
&lt;h4 id=&#34;trends&#34;&gt;Trends&lt;/h4&gt;
&lt;p&gt;An overall usage treemap is displayed at the top. Each view is a section of the screen. Large areas represent views that get a lot of use, smaller areas those that don’t. Colours give immediate feedback on whether usage has been increasing (blue) or decreasing (grey) this month. Hovering over an area shows more stats including the top users.&lt;/p&gt;
&lt;p&gt;Underneath that a series of sparkline charts show long term trends, across selected operational, tactical and strategic metrics, all geared to showing utilisation over a 12 month period.&lt;/p&gt;
&lt;p&gt;Raw data can be downloaded to spreadsheet using the links beneath each sparkline. Note only the most recent 200,000 records can be downloaded in this way.&lt;/p&gt;
&lt;h4 id=&#34;capacity&#34;&gt;Capacity&lt;/h4&gt;
&lt;p&gt;As well as actual usage, the dashboard shows total capacity i.e. how many users, records, tables etc. are present in the system, along with purchased capacity (if relevant). These elements affect billing.&lt;/p&gt;
&lt;h4 id=&#34;workflows&#34;&gt;Workflows&lt;/h4&gt;
&lt;p&gt;A convenience view of all workflows which carry out automated data modifications, see &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflows&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;database-graph&#34;&gt;Database graph&lt;/h4&gt;
&lt;p&gt;Finally, for background on what the data structure looks like and how tables are connected, the database graph shows relations between tables is visual form. This can provide a fuller understaning of the system.&lt;/p&gt;
&lt;h3 id=&#34;table-and-view-usage&#34;&gt;Table and view usage&lt;/h3&gt;
&lt;p&gt;A quick overview of who is viewing data is shown in the administration interface for both tables and views.&lt;/p&gt;
&lt;p&gt;For a table&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Edit the table&lt;/li&gt;
&lt;li&gt;Open the &lt;em&gt;Recent Changes&lt;/em&gt; panel&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The report shows the number of times each user has viewed data from the table, per view. All views which contain any data from the table are included.&lt;/p&gt;
&lt;p&gt;For a view&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Edit the view&lt;/li&gt;
&lt;li&gt;Open to the &lt;em&gt;Recent Changes&lt;/em&gt; panel&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Similar data is show as for tables, but limited to the selected view.&lt;/p&gt;
&lt;h2 id=&#34;individual-record-histories&#34;&gt;Individual record histories&lt;/h2&gt;
&lt;p&gt;Any user can see the complete history of changes to an individual record, up to the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/#retention-periods&#34;&gt;retention period&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When editing a record, scroll to the bottom of the screen and click &lt;em&gt;history&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;To view the precise time of a change, hover over a date.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Table layouts</title>
      <link>https://docs.agilebase.co.uk/docs/tables/table-layouts/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/table-layouts/</guid>
      <description>
        
        
        &lt;p&gt;For each table, Agilebase will automatically build a data entry form for users to view, add and edit records with.&lt;/p&gt;
&lt;p&gt;The layout of this form can be controlled by selecting a layout option and adding separators to create blocks i.e. groups of fields which go together. This will create a more pleasant and usable system.&lt;/p&gt;
&lt;h2 id=&#34;layout&#34;&gt;Layout&lt;/h2&gt;
&lt;p&gt;The layout option is the main control. There are three options:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;single column&lt;/strong&gt; - a simple vertical list of fields&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;blocks in two columns&lt;/strong&gt; - makes the best use of screen space for large forms. Also allows tabs
&lt;ul&gt;
&lt;li&gt;All fields before the first separator are displayed in a section at the top of the screen, in two columns&lt;/li&gt;
&lt;li&gt;After that, each separator added creates a new block of fields. Blocks are arranged in two &amp;rsquo;newspaper&amp;rsquo; style columns which are displayed below the top section&lt;/li&gt;
&lt;li&gt;If the table has tabs, they are displayed below the top section&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;process flow&lt;/strong&gt; - blocks of fields are arranged vertically one after each other, works well when there the data entry form maps to a set process&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/tags-and-options.png&#34; alt=&#34;Tags and options&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s what the same data entry form looks like in each of the three configurations&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/layout-single.png&#34; alt=&#34;single column layout&#34;&gt; &amp;ldquo;single column&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/layout-two-columns.png&#34; alt=&#34;two column layout&#34;&gt; &amp;ldquo;two columns&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/layout-process.png&#34; alt=&#34;process flow layout&#34;&gt; &amp;ldquo;process flow&amp;rdquo;&lt;/p&gt;
&lt;p&gt;and here&amp;rsquo;s an example of &lt;strong&gt;2. blocks in two columns&lt;/strong&gt; with tabs.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/layout-tabs.png&#34; alt=&#34;form with tabs&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;separators&#34;&gt;Separators&lt;/h2&gt;
&lt;p&gt;To form a block, click on the &lt;em&gt;fields&lt;/em&gt; tab of a table and add a field of type &amp;lsquo;separator&amp;rsquo; - see the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/separators/&#34;&gt;fields reference&lt;/a&gt;. Move it to where the start of the block should be i.e. before the first field in the block.&lt;/p&gt;
&lt;h2 id=&#34;record-titles&#34;&gt;Record titles&lt;/h2&gt;
&lt;p&gt;In the screenshots above, you can see that each record has a heading, or title. drawn from the data.&lt;/p&gt;
&lt;p&gt;To set one or more fields to include in the title, use the field option &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/#use-as-record-title&#34;&gt;use as record title&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;see-also&#34;&gt;See also&lt;/h2&gt;
&lt;p&gt;When a relation field is near the top of the form, it&amp;rsquo;s also moved to the record title level to become a title link, allowing navigation upwards to the &amp;lsquo;parent&amp;rsquo; record. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/&#34;&gt;hierarchy navigation&lt;/a&gt; for info about upwards, and downwards, navigation.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Usage Monitoring</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/</guid>
      <description>
        
        
        &lt;p&gt;Agilebase comprehensively logs changes to data in the system as well as changes to the structure of the system. Powerful &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/usage-reporting/&#34;&gt;reporting facilities&lt;/a&gt; allow the generation of audit trails, trend monitoring, customer success monitoring etc.&lt;/p&gt;
&lt;h2 id=&#34;what-is-logged&#34;&gt;What is logged&lt;/h2&gt;
&lt;h3 id=&#34;user-actions&#34;&gt;User actions&lt;/h3&gt;
&lt;p&gt;The following actions are recorded&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;logins, including connection details&lt;/li&gt;
&lt;li&gt;record edits (create, update and delete)&lt;/li&gt;
&lt;li&gt;global edits&lt;/li&gt;
&lt;li&gt;comment additions and removals&lt;/li&gt;
&lt;li&gt;data imports and exports&lt;/li&gt;
&lt;li&gt;viewing and searching/filtering data in views&lt;/li&gt;
&lt;li&gt;password resets&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When logging a record deletion, the data values deleted are logged.&lt;/p&gt;
&lt;p&gt;Further, for every record in a table, the following metadata is stored and can be included in views:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The creation time and time of last update&lt;/li&gt;
&lt;li&gt;The user who created the record and who last updated it&lt;/li&gt;
&lt;li&gt;The view count: how many times the record has been opened&lt;/li&gt;
&lt;li&gt;A visual activity histogram showing the number of edits per week over the past six months&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/automatically-present-fields/&#34;&gt;automatically present fields&lt;/a&gt; for full details.&lt;/p&gt;
&lt;h3 id=&#34;api-and-workflow-actions&#34;&gt;API and workflow actions&lt;/h3&gt;
&lt;p&gt;Data changes or outflows arising from &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;API calls&lt;/a&gt;are logged to the same log store as user actions. Instead of logging the user taking the action, it&amp;rsquo;s logged as an API call with the IP address of the source of the request.&lt;/p&gt;
&lt;p&gt;Automated &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflow&lt;/a&gt; actions are also logged. Each is marked as a workflow actions with the name of the action (i.e. the view name) to identify it.&lt;/p&gt;
&lt;h3 id=&#34;administration-and-management-actions&#34;&gt;Administration and management actions&lt;/h3&gt;
&lt;p&gt;All significant actions are recorded, in summary&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;adding, updating or removing users, roles and privileges&lt;/li&gt;
&lt;li&gt;table additions and removals, field additions and removals, data constraint additions and removals&lt;/li&gt;
&lt;li&gt;view additions, updates and removals&lt;/li&gt;
&lt;li&gt;chart edits&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;viewing-logs&#34;&gt;Viewing logs&lt;/h2&gt;
&lt;p&gt;Changes to schemas (e.g. tables and views) can be seen in the editing panels for those objects. On the development homepage, a history of recent changes can be seen.&lt;/p&gt;
&lt;p&gt;Changes to an individual record can be seen from the &amp;lsquo;history&amp;rsquo; link at the bottom left of any editing screen.&lt;/p&gt;
&lt;p&gt;If the account has the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/usage-reporting/#enhanced-audit-trail&#34;&gt;enhanced audit trail&lt;/a&gt; then all data can be queried using Agilebase views.&lt;/p&gt;
&lt;h2 id=&#34;retention-periods&#34;&gt;Retention periods&lt;/h2&gt;
&lt;p&gt;Data is retained for 12 months as standard. The enhanced audit trail allows customers to define their own retention period, the maximum being unlimited.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Views</title>
      <link>https://docs.agilebase.co.uk/docs/views/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/views/</guid>
      <description>
        
        
        &lt;p&gt;Along with &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/&#34;&gt;tables&lt;/a&gt;, views are one of the two foundational concepts used when building applications with Agilebase.&lt;/p&gt;
&lt;h2 id=&#34;what-is-a-view&#34;&gt;What is a view?&lt;/h2&gt;
&lt;p&gt;In fact, the concept of a view is not unique to Agilebase, it is a core part of any database system, including the &lt;a href=&#34;https://www.postgresql.org&#34;&gt;PostgreSQL&lt;/a&gt; database that Agilebase uses to store, manipulate and report on data.&lt;/p&gt;
&lt;p&gt;Here are some of the advantages a view can offer, as explained by the &lt;a href=&#34;https://en.wikipedia.org/wiki/View_(SQL)&#34;&gt;Wikipedia Article on database views&lt;/a&gt;, slightly shortened.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Views can represent a subset of the data contained in a table.&lt;/li&gt;
&lt;li&gt;Views can join and simplify multiple tables into a single virtual table.&lt;/li&gt;
&lt;li&gt;Views can act as aggregated tables, where the database engine aggregates data (sum, average, etc.) and presents the calculated results as part of the data.&lt;/li&gt;
&lt;li&gt;Views can hide the complexity of data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In a nutshell, creating a view in Agilebase allows you to display information to the user in an easily searchable format. A single view of data can contain fields from many different places placed alongside each other. It can be filtered down to a subset, and/or contain summarising data like counts, totals or averages.&lt;/p&gt;
&lt;p&gt;Views can utilise the full power of the SQL language (mostly behind the scenes with complexity hidden from administrators) to create useful and advanced reports where necessary.&lt;/p&gt;
&lt;p&gt;On the screen, a view is most usually output as a series of rows of data, with field names as column headings - like a spreadsheet.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/view.png&#34; alt=&#34;view&#34;&gt;&lt;/p&gt;
&lt;p&gt;There are also other ways of displaying the output, such as in a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/calendar/&#34;&gt;calendar&lt;/a&gt; or &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;document library&lt;/a&gt; interface.&lt;/p&gt;
&lt;p&gt;Views are organised into &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;tiles&lt;/a&gt;. Each tile contains a collection of views, organised into a menu system within it. Administrators can hence organise the display of data in a logical fashion.&lt;/p&gt;
&lt;h3 id=&#34;behind-the-scenes-uses&#34;&gt;Behind the scenes uses&lt;/h3&gt;
&lt;p&gt;As well as showing data to users, the power and flexibility of views allows them to be used in a multitude of different ways useful for administrators. For example, in &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflow&lt;/a&gt; automations, to create &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;APIs&lt;/a&gt; to allow third party systems to query the data, or to control &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#show-if-record-in-view&#34;&gt;hiding and showing fields&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are many other uses we&amp;rsquo;ll come across throughout this documentation, in fact almost every major feature depends on views in some way.&lt;/p&gt;
&lt;p&gt;So it&amp;rsquo;s a useful topic to understand.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Logging in from an app</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/app_login/</link>
      <pubDate>Sun, 20 Jun 2021 09:20:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/app_login/</guid>
      <description>
        
        
        &lt;p&gt;It&amp;rsquo;s possible for a developer to create a third party application, for example a phone or tablet app, that communicates with Agilebase via the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations&#34;&gt;API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now to use the API, you don&amp;rsquo;t need to authenticate as a user, as long as the app has the correct Authorization key(s), it can read and write data to Agilebase.&lt;/p&gt;
&lt;p&gt;However, in some cases the app may need to confirm that someone has a valid Agilebase account before allowing them to use the app. This may or may not be necessary depending on the use case, for example depending on whether the app is free to use for anyone, or must be limited to paying customers.&lt;/p&gt;
&lt;p&gt;To validate a user, the app must redirect them to the Agilebase login page, let them log in and confirm that was successful. Therefore, a HTTP client is necessary - this can be a &amp;lsquo;web view component&amp;rsquo; or a programmatic client such as the &lt;a href=&#34;https://hc.apache.org/&#34;&gt;Apache HTTP Client&lt;/a&gt; for &lt;a href=&#34;https://en.wikipedia.org/wiki/Java_%28programming_language%29&#34;&gt;Java&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this example, we&amp;rsquo;ll use the &lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/react-native-webview&#34;&gt;Native Web View&lt;/a&gt; but the principle is the same for any programming language or library.&lt;/p&gt;
&lt;h2 id=&#34;general-principle&#34;&gt;General Principle&lt;/h2&gt;
&lt;p&gt;The application must reproduce the same login process as a human would, using a HTTP client. Importantly, the HTTP client must support cookies, as the login process depends on them, in particular setting a &lt;code&gt;JSESSIONID&lt;/code&gt; cookie.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make a request to load the page &lt;a href=&#34;https://appserver.gtportalbase.com/Agilebase/AppController.servlet?return=user_details&#34;&gt;https://appserver.gtportalbase.com/Agilebase/AppController.servlet?return=user_details&lt;/a&gt;. This will return the login page and set the cookie value.&lt;/li&gt;
&lt;li&gt;Submit the login form using the user&amp;rsquo;s username and password. If using a programattic process i.e. making the calls from code rather than using a web view, this means making a form POST to &lt;code&gt;/Agilebase/j_security_check&lt;/code&gt; with the parameters &lt;code&gt;j_username&lt;/code&gt; and &lt;code&gt;j_password&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Detect whether the login&amp;rsquo;s successful. If not, the standard Agilebase login failure page will be returned&lt;/li&gt;
&lt;li&gt;If successful, a HTML page will be returned containing three hidden input fields, &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;forename&lt;/code&gt;, &lt;code&gt;surname&lt;/code&gt; containing relevant details for the logged in user. If being called from a React Native Web View, the page will also post back messages to React using this JavaScript:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if (window.ReactNativeWebView) {
    window.ReactNativeWebView.postMessage(&amp;#34;username:&amp;#34; + username);
    window.ReactNativeWebView.postMessage(&amp;#34;forename:&amp;#34; + forename);
    window.ReactNativeWebView.postMessage(&amp;#34;surname:&amp;#34; + surname);
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s a full example of a login.js page using the React Native Web View. NB this is an example taken from a full application, so you will need to modify it / strip it back to suit your needs, before it can be run.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;//Node imports
import React, {useEffect, useRef, useState} from &amp;#39;react&amp;#39;;
import {View, StatusBar, Image, ImageBackground, ScrollView} from &amp;#39;react-native&amp;#39;;

//Local imports
import {styles} from &amp;#39;../../../styles/loginStyles&amp;#39;;
import {Images, Colors, Constants, Language} from &amp;#39;../../../common&amp;#39;;
import {useNetInfo} from &amp;#34;@react-native-community/netinfo&amp;#34;;
import { WebView } from &amp;#39;react-native-webview&amp;#39;;
import {useDispatch, useSelector} from &amp;#39;react-redux&amp;#39;;
import {updateUserData} from &amp;#39;../../../redux/actions/commonAction&amp;#39;;
import commonFunctions from &amp;#39;../../../common/commonFunctions&amp;#39;;
import SplashScreen from &amp;#39;react-native-splash-screen&amp;#39;
const {fontSize, fontFamily, Window} = Constants;

const LoginScreen = (props) =&amp;gt; {
    const dispatch = useDispatch();
    const {user_data} = useSelector(state =&amp;gt; state);
    const netInfo = useNetInfo();

    useEffect(function () {
        SplashScreen.hide();
        console.log(&amp;#39;netInfo==============&amp;#39;, netInfo)
        if(netInfo?.isInternetReachable || netInfo?.details != null){
            checkUser();
        }
    }, [netInfo, user_data]);

    const checkUser = () =&amp;gt; {
        if(user_data &amp;amp;&amp;amp; user_data?.forename &amp;amp;&amp;amp; user_data?.surname &amp;amp;&amp;amp; user_data?.username){
            goToNextPage();
        }
        console.log(&amp;#39;user_data&amp;#39;, user_data)
    }

    const goToNextPage = async () =&amp;gt; {
        await commonFunctions.removeTimeStamp();
        navigateToNextPage();
    }

    const onResponseFromWebView = (event) =&amp;gt; {
        const eventData = event.nativeEvent.data;
        console.log(&amp;#39;eventData&amp;#39;, eventData);
        if (eventData.includes(&amp;#39;username&amp;#39;)) {
            dispatch(updateUserData({username: eventData.split(&amp;#39;username:&amp;#39;)[1]}));
        } else if (eventData.includes(&amp;#39;forename&amp;#39;)) {
            dispatch(updateUserData({forename: eventData.split(&amp;#39;forename:&amp;#39;)[1]}));
        } else if (eventData.includes(&amp;#39;surname&amp;#39;)) {
            dispatch(updateUserData({surname: eventData.split(&amp;#39;surname:&amp;#39;)[1]}));
        }
    }

    const navigateToNextPage = () =&amp;gt; {
        if (netInfo?.isInternetReachable) {
            return props.navigation.navigate(&amp;#39;Loading&amp;#39;);
        }
        return props.navigation.navigate(&amp;#39;MyApplicationPage&amp;#39;);
    }

    return (
        &amp;lt;View style={styles.container}&amp;gt;
            &amp;lt;StatusBar backgroundColor={Colors.black} barStyle={&amp;#39;dark-content&amp;#39;}/&amp;gt;
            {(netInfo?.isInternetReachable &amp;amp;&amp;amp; !user_data?.surname) ?
                &amp;lt;WebView
                    source={{uri: &amp;#39;https://appserver.gtportalbase.com/Agilebase/AppController.servlet?return=user_details&amp;#39;}}
                    onMessage={onResponseFromWebView}
                    textZoom={100}
                    sharedCookiesEnabled={true}
                /&amp;gt; :
                &amp;lt;View style={styles.loadingImage}&amp;gt;
                    &amp;lt;Image source={Images.logo}/&amp;gt;
                &amp;lt;/View&amp;gt;
            }
        &amp;lt;/View&amp;gt;
    );
};

export default LoginScreen;
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Creating a view</title>
      <link>https://docs.agilebase.co.uk/docs/views/creating-a-view/</link>
      <pubDate>Wed, 13 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/views/creating-a-view/</guid>
      <description>
        
        
        &lt;p&gt;In Agilebase, a view &amp;lsquo;belongs to&amp;rsquo; a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/&#34;&gt;table&lt;/a&gt;. We&amp;rsquo;ll see what that means in more detail below, but for now, just choose a table to show data from to users. In examples on this section of the documentation we&amp;rsquo;ll assume we pick a contacts table.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll also assume we already have some tables and some &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;tiles&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;to-create-a-view&#34;&gt;To create a view&lt;/h2&gt;
&lt;p&gt;You can create a view from scratch, or clone an existing one then edit it.&lt;/p&gt;
&lt;p&gt;To create from scratch&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Select (or &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/&#34;&gt;create&lt;/a&gt; a new) table.&lt;/li&gt;
&lt;li&gt;Click the table you want to create a view from&lt;/li&gt;
&lt;li&gt;Once the table has been selected, click &lt;em&gt;name and views&lt;/em&gt; on the floating sidebar&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;Add View&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;You should now see your freshly created view&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;There is an option &lt;strong&gt;Populate the view with fields from this table&lt;/strong&gt; next to the &lt;em&gt;Add View&lt;/em&gt; button. This is a convenience feature, which is ticked by default. When it&amp;rsquo;s ticked, the view created will contain the first 10 fields from the table - you can then remove any you don&amp;rsquo;t need or add more. When un-ticked, the view will start with no fields so you can add just those you wish.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To clone an existing view&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open a view&lt;/li&gt;
&lt;li&gt;Toggle on the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/introduction/development-mode/&#34;&gt;development mode&lt;/a&gt; and click &amp;rsquo;edit view&amp;rsquo; at the top left&lt;/li&gt;
&lt;li&gt;Open the &amp;lsquo;properties and options&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Scroll down to the bottom of the panel and press the &amp;lsquo;clone view&amp;rsquo; button&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;[snippet video  - cloning a view]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/zA2EEW7YLsA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;organising-into-a-navigation-structure&#34;&gt;Organising into a navigation structure&lt;/h2&gt;
&lt;p&gt;On creating a view, its editing panel will open. One of the first things it&amp;rsquo;s useful to do is put the field in a tile - use the &lt;em&gt;Tile&lt;/em&gt; dropdown option, under &lt;em&gt;properties&lt;/em&gt; to do so.&lt;/p&gt;
&lt;p&gt;Within a tile, the view can be added to a menu by editing the view name. Simply prefix the view name with a menu name and a dash. So for example, naming a view &lt;code&gt;contacts - all contacts&lt;/code&gt; will create a &amp;lsquo;contacts&amp;rsquo; menu containing the view &amp;lsquo;all contacts&amp;rsquo; visible to users.&lt;/p&gt;
&lt;p&gt;Entering a view &lt;em&gt;Help&lt;/em&gt; in the space underneath the name will provide help text for the view. This will be displayed in the menu underneath the view name. Here&amp;rsquo;s a screenshot of a sample menu, each with purpose completed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/menu.png&#34; alt=&#34;menu&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;adding-and-removing-fields&#34;&gt;Adding and removing fields&lt;/h2&gt;
&lt;p&gt;The core function of a view is usually to display a set of fields to people, as columns, so they can see data and search it.&lt;/p&gt;
&lt;p&gt;When you create a view, the first dozen or so fields in the table it was created from will be added automatically. You can hover over a field and click the cross icon to remove it from the view.&lt;/p&gt;
&lt;p&gt;To add a new field, make sure you&amp;rsquo;re in the &amp;lsquo;fields&amp;rsquo; panel (the default). An &amp;lsquo;Add Field&amp;rsquo; section will be visible, with two selectors.
The first on the left selects the source of data. This is typically a table, but can also be a view.&lt;/p&gt;
&lt;p&gt;The default source is the view&amp;rsquo;s parent table. The system also intelligently presents any tables which are related - for example, when editing a view based on contacts, &amp;lsquo;organisations&amp;rsquo; may be available if each contact belongs to an organisation.
Finally, any tables or views which are &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/joins/&#34;&gt;joined&lt;/a&gt; to this view are available as sources.&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;ve selected a source (if not the default), you can choose a field to add.&lt;/p&gt;
&lt;p&gt;When you press the Add button you&amp;rsquo;ll be prompted to edit the field name if you like. You can just press OK to accept the name of the field as it is, but if you like you can edit it first. That doesn&amp;rsquo;t change the field name in its underlying table, but it does allow you to name the field something specific just for this view.
For example, in your organisations table, you may have a field &amp;lsquo;Organisation Name&amp;rsquo;. In a view of invoices to customers, you may want to name this &amp;lsquo;Customer Name&amp;rsquo;, just for that view.&lt;/p&gt;
&lt;h3 id=&#34;applying-sorts&#34;&gt;Applying sorts&lt;/h3&gt;
&lt;p&gt;When someone opens a view, they can sort it by any column they like by clicking the column header. However when building a view, you may want to set a default sort order.&lt;/p&gt;
&lt;p&gt;To do that, when looking at the list of fields in a view, click the little up/down icon to the left of the fieldname. That will apply a sort to that field. Clicking it again will change the direction of the sort.&lt;/p&gt;
&lt;p&gt;You can add sorts to multiple fields, they will take effect from the top down, i.e. the data will be sorted by the top field with a sort, then by the next one down etc.&lt;/p&gt;
&lt;h3 id=&#34;adding-sections&#34;&gt;Adding sections&lt;/h3&gt;
&lt;p&gt;If a view has many fields, it can be beneficial to organise them into sections, just like you organise table fields into sections using &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/separators/&#34;&gt;separators&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To create a section, edit the field or calculation which should form the start of a section and enter some text describing the section into the &lt;em&gt;Section Name&lt;/em&gt; box.&lt;/p&gt;
&lt;p&gt;When a user hovers over a column name which is the start of a section (identified by the vertical bar on screen), the section name is displayed. Here&amp;rsquo;s an example where the field Distinct Wish Count is the start of an &amp;lsquo;Actions&amp;rsquo; section.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/view-section.png&#34; alt=&#34;view section&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;using-a-view&#34;&gt;Using a view&lt;/h2&gt;
&lt;p&gt;Once the view is created, how can someone use it? We won&amp;rsquo;t work through every possibility here as this documentation is for administrators rather than users, but here are some of the most important points in brief you may like to be aware of in order to support apps you build.&lt;/p&gt;
&lt;h3 id=&#34;finding-data&#34;&gt;Finding data&lt;/h3&gt;
&lt;p&gt;By default, a search box appears under each column heading (the system can also be configured in a simplified way with a single search box to cover all fields).&lt;/p&gt;
&lt;p&gt;The help icon (?) to the left of the search boxes details the types of search that can be performed. There are many, allowing for e.g. date-based searches, &lt;em&gt;and&lt;/em&gt; and &lt;em&gt;or&lt;/em&gt; searching, finding empty values etc. Helper features pop up for some field types, like date range pickers for example.&lt;/p&gt;
&lt;h3 id=&#34;seeing-summary-stats&#34;&gt;Seeing summary stats&lt;/h3&gt;
&lt;p&gt;Hovering over a column shows summary statistics, like a total and average (of all filtered records) for numeric fields, or a breakdown of dropdown/tags fields.&lt;/p&gt;
&lt;h3 id=&#34;loading-a-record&#34;&gt;Loading a record&lt;/h3&gt;
&lt;p&gt;Once a record has been found, click a row in the view to load that record for viewing or editing. The record loaded comes from the table that the view belongs to (as referenced at the start of this page), even though the view may contain fields from other tables as well.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s also possible to use &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/options/display-options/#interface-inline-editing&#34;&gt;inline editing&lt;/a&gt; to edit the contents of fields directly in the view.&lt;/p&gt;
&lt;p&gt;Pressing the plus button to the left of the view contents will create a new record in the view&amp;rsquo;s parent table.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Hierarchy Navigation</title>
      <link>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/</link>
      <pubDate>Mon, 04 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/</guid>
      <description>
        
        
        &lt;p&gt;Agilebase does its best with sensible defaults to create a friendly user interface.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s useful for a software architect to know how to configure and tweak the system to allow the to user navigate the structure of an application in the most intuitive way possible.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Basic Field Types</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-types/basic-field-types/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-types/basic-field-types/</guid>
      <description>
        
        
        &lt;p&gt;These are the core types of fields by which data can be entered by users (or other sources such as the API or a workflow).&lt;/p&gt;
&lt;h2 id=&#34;text&#34;&gt;Text&lt;/h2&gt;
&lt;p&gt;Text fields are the most commonly used. Depending on &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/&#34;&gt;field options&lt;/a&gt;, text can be entered into a standard data entry control, a large box allowing rich formatting (bold, italic etc.), chosen from a dropdown of options or added as tags.&lt;/p&gt;
&lt;h2 id=&#34;number&#34;&gt;Number&lt;/h2&gt;
&lt;p&gt;When adding a number field, select a &lt;em&gt;precision&lt;/em&gt; from the dropdown. If &lt;code&gt;0&lt;/code&gt; is chosen, then it will be a whole number (integer) field. If any other value is chosen, it will be a decimal field. The decimal precision can be changed at any time in the field options, but a whole number can&amp;rsquo;t be converted to a decimal or vice versa via field options.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/advanced-usage/build-patterns/#switching-a-field-from-one-type-to-another&#34;&gt;changing field types&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;date&#34;&gt;Date&lt;/h2&gt;
&lt;p&gt;Represents a date or date/time, of any precision from year to second.&lt;/p&gt;
&lt;h2 id=&#34;auto-generated-number-sequence&#34;&gt;Auto-generated number sequence&lt;/h2&gt;
&lt;p&gt;The value of this field will be generated automatically, incremented by one each time a record is created.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sequence numbers are never rolled back, even on the deletion of a record, so they can&amp;rsquo;t be used if a gapless assignment of numbers is required. To accomplish that, calculate a value with a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#set-from-previous-referenced-field&#34;&gt;cross-referenced field&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;relation&#34;&gt;Relation&lt;/h2&gt;
&lt;p&gt;Adding a relation creates a link from one table to another. For example, a contacts table may contain a relation linking to an organisations table, to allow a person to belong to an organisation. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/&#34;&gt;relational database concepts&lt;/a&gt; for further info.&lt;/p&gt;
&lt;h2 id=&#34;checkbox&#34;&gt;Checkbox&lt;/h2&gt;
&lt;p&gt;Represents a boolean (true or false) value.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Text Field Options</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/</guid>
      <description>
        
        
        &lt;h2 id=&#34;colour-words&#34;&gt;Colour words&lt;/h2&gt;
&lt;p&gt;When this field is included in a view, highlight it with a colour if the content is one of a number of words. The most up-to-date values to be highlighted are shown in the administrator interface, but as of the latest update of this page, they are&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/word-colours.png&#34; alt=&#34;Word Colours&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Text calculations can also be coloured based on the same words - see the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/calculations/#colouring&#34;&gt;calculation options&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Words will also automatically be coloured when a &amp;lsquo;radio button&amp;rsquo; style is used for a field, i.e. when&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lsquo;use dropdown&amp;rsquo; is ticked&lt;/li&gt;
&lt;li&gt;&amp;lsquo;use only given values&amp;rsquo; is ticked&lt;/li&gt;
&lt;li&gt;there are three or fewer values to choose from&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;swap-colours&#34;&gt;Swap colours&lt;/h2&gt;
&lt;p&gt;When words are coloured (see above), &amp;lsquo;yes&amp;rsquo; will usually be coloured green and &amp;rsquo;no&amp;rsquo; red etc. However depending on the field name or question being asked, you may want to swap the colours.&lt;/p&gt;
&lt;p&gt;For example, for a field &amp;lsquo;Passport Checked&amp;rsquo;, you might want yes to be green, but for a field &amp;lsquo;Dangerous Substances Detected&amp;rsquo;, yes should be red and no should be green. In that case, use this option to swap the colours.&lt;/p&gt;
&lt;p&gt;The words that will have colours swapped by this option are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;yes / no&lt;/li&gt;
&lt;li&gt;true / false&lt;/li&gt;
&lt;li&gt;low / high&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;use-dropdown&#34;&gt;Use dropdown&lt;/h2&gt;
&lt;p&gt;Rather than a simple text entry field, display a dropdown of choices from which one can be selected. If there are only a few values, then the user interface may display options in &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio&#34;&gt;radio button&lt;/a&gt; style, but the behaviour is exactly the same.&lt;/p&gt;
&lt;p&gt;Options can be provided by entering a comma separated list into the &lt;a href=&#34;#values&#34;&gt;value(s)&lt;/a&gt; setting as below. If no options are specified, then the list of options will be automatically generated from the set of unique values &lt;strong&gt;already entered&lt;/strong&gt; into records. In this way, a set of values will gradually grow as people enter new data.&lt;/p&gt;
&lt;p&gt;See also the &lt;a href=&#34;#use-only-given-values&#34;&gt;Use only given values&lt;/a&gt; option below to enforce the use of provided values only.&lt;/p&gt;
&lt;h2 id=&#34;use-tags&#34;&gt;Use tags&lt;/h2&gt;
&lt;p&gt;Similar to Use dropdown, but rather than only letting the user select one value, multiple values can be chosen at once.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An example use may be selecting countries of origin for an ingredient, where it may come from different countries (perhaps via different suppliers).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The list of available options is specified in exactly the same way as for dropdowns above.&lt;/p&gt;
&lt;h2 id=&#34;use-only-given-values&#34;&gt;Use only given values&lt;/h2&gt;
&lt;p&gt;If a dropdown or tags list is used as above, ticking this option enforces the use of one of the provided values.&lt;/p&gt;
&lt;p&gt;If it&amp;rsquo;s un-ticked, then an &amp;lsquo;add new entry&amp;rsquo; option will be available for users to manually add values which aren&amp;rsquo;t yet in the list. Added values will be visible to all.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In some circumstances, it can be useful to leave this un-ticked and let options grow organically, until a certain point. Administrators can then rationalise and &amp;lsquo;hard-code&amp;rsquo; values from the most commonly entered. In other situations, it may be best to specify available options right from the start.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;values&#34;&gt;Value(s)&lt;/h2&gt;
&lt;p&gt;For basic text fields, i.e. not those which display as dropdowns or tag lists (see below), this simply provides a default value to set the field to when a new record&amp;rsquo;s created. If not provided, the field value will be blank on creation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Field defaults can also be calculated, with a simple or arbitratily complex calculation. To do that, instead use the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#set-from-previous-referenced-field&#34;&gt;Set from previous referenced field&lt;/a&gt; option.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;specifying-dropdown-lists-and-tags-fields&#34;&gt;Specifying dropdown lists and tags fields&lt;/h3&gt;
&lt;p&gt;If either &lt;a href=&#34;#use-dropdown&#34;&gt;Use dropdown&lt;/a&gt; or &lt;a href=&#34;#use-tags&#34;&gt;Use tags&lt;/a&gt; is selected, the value(s) option provides a &lt;strong&gt;list&lt;/strong&gt; of options with which to populate the dropdown, or a set of tags to choose from. Enter each option here separated by commas.&lt;/p&gt;
&lt;p&gt;If the list &lt;strong&gt;starts with&lt;/strong&gt; a comma, that means the field should be blank by default when a record is created. If not, then the default will be the first value in the comma separated list.&lt;/p&gt;
&lt;p&gt;In the dropdown/tags list, the options will be ordered alphabetically, not shown in the order they&amp;rsquo;re entered in. If you wish to give the values a particular order, you can prefix them with a number or letter followed by a closing bracket like so: &lt;code&gt;1) cold, 2) warm, 3) hot&lt;/code&gt;. The number prefixes won&amp;rsquo;t show to the user.&lt;/p&gt;
&lt;h4 id=&#34;customising-the-list-of-options-per-user&#34;&gt;Customising the list of options per user&lt;/h4&gt;
&lt;p&gt;As well as entering a default set of options for dropdowns and tags fields as above, it&amp;rsquo;s possible to add options which will only be visible to certain users, specifically those in a certain role.&lt;/p&gt;
&lt;p&gt;The way to add an option which will only be visible to users of a role is to add &lt;code&gt;|rolename&lt;/code&gt; after the option, that is a vertical bar followed by the name of the role.&lt;/p&gt;
&lt;p&gt;For example, setting the list of options to&lt;/p&gt;
&lt;p&gt;&lt;code&gt;1) not billed, 2) awaiting payment, 3) paid|finance&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;will mean that anyone will be able to set the field to &lt;code&gt;1) not billed&lt;/code&gt; or &lt;code&gt;2) awaiting payment&lt;/code&gt; but only members of the finance role will be able to see and set the &lt;code&gt;3) paid&lt;/code&gt; option (once it has been set, it will be visible to everyone).&lt;/p&gt;
&lt;h4 id=&#34;lists-of-users&#34;&gt;Lists of users&lt;/h4&gt;
&lt;p&gt;Also for dropdown lists and tags fields, Agilebase can generate dropdown contents based on a list of users and/or roles in the system. To do that, select &lt;code&gt;users&lt;/code&gt; or &lt;code&gt;users and roles&lt;/code&gt; from the &amp;lsquo;fill with&amp;rsquo; selector just below the value(s) input. The standard user ID format throughout the system is used, &amp;lsquo;Forename Surname (username)&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;Only users/roles which have privileges to view the data in this particular table will be shown in the list. That can keep things manageable if a system has hundreds or more users.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An example use would be assigning an account manager to a customer, selecting from a list of staff members (who are users).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When a user is selected in this way, more options for use are opened up, such as automatically emailing the selected person when there&amp;rsquo;s a status change or something is overdue for example. Agilebase can look up the user&amp;rsquo;s email address to accomplish this, See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-email/&#34;&gt;email workflows&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;When using &amp;lsquo;fill with users&amp;rsquo;, the list of users to appear in the dropdown can further be narrowed down by role if required. To do that, enter the text&lt;/p&gt;
&lt;p&gt;&lt;code&gt;_users|role1,role2,role3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;i.e. &lt;code&gt;_users&lt;/code&gt; followed by a vertical bar and then a comma separated list of role names. Only users which appear in one or more of the named roles will appear.&lt;/p&gt;
&lt;p&gt;If you want a field to auto-populate with the ID of the currently logged in user, enable both this option and the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#required&#34;&gt;required&lt;/a&gt; field option.&lt;/p&gt;
&lt;h2 id=&#34;text-case&#34;&gt;Text case&lt;/h2&gt;
&lt;p&gt;Convert people&amp;rsquo;s input into the required case as it&amp;rsquo;s entered - choose from&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;lowercase&lt;/li&gt;
&lt;li&gt;UPPERCASE&lt;/li&gt;
&lt;li&gt;Title Case&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;size&#34;&gt;Size&lt;/h2&gt;
&lt;p&gt;If &amp;lsquo;short&amp;rsquo; is chosen, a standard single line input box is displayed.&lt;/p&gt;
&lt;p&gt;If &amp;rsquo;large&amp;rsquo; is chosen, a multi-line text entry box is shown. This option also lets people format the text entered, such as using &lt;strong&gt;bold&lt;/strong&gt;, &lt;em&gt;italics&lt;/em&gt; or bullet points. For data security reasons, only certain formatting is allowed.&lt;/p&gt;
&lt;h2 id=&#34;use-as-record-title&#34;&gt;Use as record title&lt;/h2&gt;
&lt;p&gt;The user interface has the ability to highlight the importance of certain fields by showing their contents in large font at the top of the record data. For example, a Company Name field may be the record title for an organisation record.&lt;/p&gt;
&lt;p&gt;This option can be selected for multiple fields in a table. In that case, the first field will be the main title, others will appear as subtitles.&lt;/p&gt;
&lt;h3 id=&#34;preventing-duplicates&#34;&gt;Preventing duplicates&lt;/h3&gt;
&lt;p&gt;Enabling the &amp;lsquo;use as record title&amp;rsquo; option also has the effect of enabling duplicate detection. The system will detect when a value is entered that is close to an existing value in the system. Any &amp;lsquo;close&amp;rsquo; values that are found are displayed as links to the relevant records.&lt;/p&gt;
&lt;p&gt;This can be useful when e.g. entering company names. Although a field can be marked &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#unique&#34;&gt;unique&lt;/a&gt; to prevent exact duplicates, that won&amp;rsquo;t pick up near matches, which this duplicate detection will. For example, &amp;lsquo;The Universoty Of Bristol&amp;rsquo; and &amp;lsquo;University Of Bristol (UOB)&amp;rsquo; will be detected as close matches, or &amp;lsquo;Agilebase&amp;rsquo; and &amp;lsquo;Agilebase Ltd&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;The system uses &lt;a href=&#34;https://www.postgresql.org/docs/current/pgtrgm.html&#34;&gt;trigram matching&lt;/a&gt; to detect similar values.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Charting</title>
      <link>https://docs.agilebase.co.uk/docs/charting/</link>
      <pubDate>Fri, 05 Nov 2021 11:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/charting/</guid>
      <description>
        
        
        &lt;p&gt;In Agilebase there are two mechanisms for charting and visualising data, each suited to a different purpose&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;our &lt;a href=&#34;built-in-charting&#34;&gt;built-in charting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;exporting data to third party business intelligence tools&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you&amp;rsquo;re starting out, we recommend beginning by looking at built-in charting.&lt;/p&gt;
&lt;p&gt;For more advanced users, here&amp;rsquo;s a description of when each of the two options may be appropriate, with reasons why.&lt;/p&gt;
&lt;h2 id=&#34;built-in-charting&#34;&gt;Built in charting&lt;/h2&gt;
&lt;p&gt;This should be the default starting point. It&amp;rsquo;s great for ad-hoc charting, i.e. to get quick answers to questions you may have about the data in the view you&amp;rsquo;re looking at.&lt;/p&gt;
&lt;p&gt;Creating charts can be used in conjunction with building views, in an agile fashion. For example, if you&amp;rsquo;re looking at a view of invoice and want to see a breakdown of totals for the year by customer type, but the customer type field isn&amp;rsquo;t in the view, no problem. Just&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;add the customer type field to the invoices view&lt;/li&gt;
&lt;li&gt;create a chart to total up values by customer type&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Developers can also choose to have certain charts emailed to different groups of people on a regular basis. For example, [TODO]&lt;/p&gt;
&lt;h2 id=&#34;exporting-to-business-intelligence&#34;&gt;Exporting to Business Intelligence&lt;/h2&gt;
&lt;p&gt;Any tool you wish such as Power BI or Tableau for example can be connected.&lt;/p&gt;
&lt;p&gt;This may be useful when&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You want to report summary KPIs or trends upwards, to higher levels of management, so you need a dashboard
&lt;ul&gt;
&lt;li&gt;to include charts from different views in Agilebase in one place&lt;/li&gt;
&lt;li&gt;to present them in particular formats suitable for reporting, e.g. in particular sizes/layouts or using company colours&lt;/li&gt;
&lt;li&gt;potentially to include data from additional sources in the one dashboard e.g. from accounting systems as well&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The source data views in Agilebase are mature and aren&amp;rsquo;t likely to change. Changes can break any integration set up&lt;/li&gt;
&lt;li&gt;You are happy with the privacy and data security implications - see below&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;privacy-and-data-security&#34;&gt;Privacy and data security&lt;/h3&gt;
&lt;p&gt;When connecting a Business Intelligence tool, it&amp;rsquo;s important to realise that data &lt;em&gt;leaves Agilebase&lt;/em&gt; and therefore is no longer protected by Agilebase&amp;rsquo;s roles and privileges system.&lt;/p&gt;
&lt;p&gt;You may have data in Agilebase which is only accessible to certain members of staff, however when accessed outside of Agilebase, those rules no longer apply. That doesn&amp;rsquo;t necessarily mean the data is accessible publicly, but it does mean it&amp;rsquo;s controlled by whatever privilege system the third party tool uses, which will be different to Agilebase&amp;rsquo;s.&lt;/p&gt;
&lt;p&gt;Therefore, from Agilebase&amp;rsquo;s point of view, similar rules will apply when connecting a BI system as to when exporting data to spreadsheets. For example&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Any user connecting a BI tool will be shown a warning of these consequences, which they&amp;rsquo;ll need to accept prior to going ahead&lt;/li&gt;
&lt;li&gt;Agilebase system administrators will get email notifications every time data in a view is made available to BI tools, containing information on whether that data is marked as sensitive or private&lt;/li&gt;
&lt;li&gt;Only people with DEVELOP privileges on a table can connect BI tools. They also have to have two factor authentication enabled.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Relation Field Options</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-options/relation-field-options/</link>
      <pubDate>Tue, 12 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-options/relation-field-options/</guid>
      <description>
        
        
        &lt;p&gt;Relations between tables are the &amp;lsquo;glue&amp;rsquo; that holds together an application built using Agilebase. If you&amp;rsquo;d like to learn more about this fundamental concept, please check out the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/&#34;&gt;relational database concepts&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Some of the options for a relation field determine the nature of the links between tables, which can have a great effect on how an app works, so it&amp;rsquo;s very useful to know about them.&lt;/p&gt;
&lt;h2 id=&#34;one-to-one-only&#34;&gt;One to one only&lt;/h2&gt;
&lt;p&gt;By default, a relation is a &amp;lsquo;many to one&amp;rsquo;. For example if a relation field in a contacts table links to an organisation, that organisation can have many contacts linked. If an ingredient links to a recipe, that recipe can have many ingredients. One customer can have many orders - examples are numerous.&lt;/p&gt;
&lt;p&gt;If a relation is marked as &amp;lsquo;one to one only&amp;rsquo;, then that behaviour is changed so that only one &amp;lsquo;child&amp;rsquo; record of this type is allowed for a particular &amp;lsquo;parent&amp;rsquo; record.&lt;/p&gt;
&lt;p&gt;When is this useful?&lt;/p&gt;
&lt;p&gt;Take the case of an ingredient record. You may want to record nutritional information, chemical composition and allergens for example. With each type of date stored in a separate table, linked by a one-to-one relation, these can be separated out on the screen into &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/&#34;&gt;tabs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The advantages of doing that, as opposed to just adding all the fields into different blocks in a single table are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The user interface becomes clearer to navigate, especially if you have dozens of fields in each section&lt;/li&gt;
&lt;li&gt;Different privileges can easily be assigned to different tables. For example, you may want only certain people to be able to update allergen information, with others able to view but not edit the data.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;do-not-auto-populate&#34;&gt;Do not auto-populate&lt;/h2&gt;
&lt;p&gt;This is ticked by default. When un-ticked, this means that when you add a new record, the relation field will automatically be populated with a link to the last &amp;lsquo;parent&amp;rsquo; item you were looking at. For example, if you edit an organisation, then move away somewhere else in the system, finally load a contacts screen and create a new contact, that contact will link to the organisation you were editing (assuming there&amp;rsquo;s a relation field linking contacts and organisations).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/sequence-field-options/&#34;&gt;similarly named option&lt;/a&gt; exists for sequence fields, to prevent auto-population of sequence numbers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;on-parent-delete&#34;&gt;On parent delete&lt;/h2&gt;
&lt;p&gt;This is an important option for controlling what happens when a parent record is deleted.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s assume we have a table of customers and one of invoices, each invoice linked to a customer by a relation field in the invoices table, so the invoice is a &amp;lsquo;child record&amp;rsquo; of the customer. What would happen if a customer is deleted? This setting controls that and there are three options.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;disallow deletion (the default)
&lt;ul&gt;
&lt;li&gt;the user is prevented from deleting the parent record. They have to manually delete the child record before being allowed to delete the parent.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;This is the safest option and the default&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;cascade delete
&lt;ul&gt;
&lt;li&gt;the user is allowed to delete the parent and when the parent is deleted, &lt;strong&gt;child records are deleted as well&lt;/strong&gt;. The user is still shown a prompt asking if they&amp;rsquo;re sure they want to do this.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;make orphan
&lt;ul&gt;
&lt;li&gt;when the parent is deleted, the child record is retained, but un-linked from the parent. In our invoice/customer example, we would be left with an invoice not linked to any particular customer&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that this option is set on the &lt;em&gt;child&lt;/em&gt; relation field, not on the parent side. Therefore you can have different rules for different child tables. A good practice is to set this to &lt;em&gt;disallow deletion&lt;/em&gt; for any important information in the system, that you wouldn&amp;rsquo;t want to be lost (like invoices) and for other tables choose one of the other options appropriately.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;value-to-display&#34;&gt;Value to display&lt;/h2&gt;
&lt;p&gt;The field from the parent table that easily identified the record, to show in the child editing form. For example, for the &amp;lsquo;company&amp;rsquo; relation field in a contacts table, you might select &amp;lsquo;company name&amp;rsquo;.&lt;/p&gt;
&lt;h2 id=&#34;secondary-value-to-display&#34;&gt;Secondary value to display&lt;/h2&gt;
&lt;p&gt;For additional context, a secondary identifying field from the parent record can be chosen. For example, as well as the name of a company, you may want to show the city or country they&amp;rsquo;re in.&lt;/p&gt;
&lt;p&gt;This field doesn&amp;rsquo;t have to be directly from the parent table, it can also be any field in the &lt;strong&gt;view to use&lt;/strong&gt; selected (the below option), including a calculation, which opens up more display possibilities, e.g. concatenating the values from multiple fields together.&lt;/p&gt;
&lt;h2 id=&#34;view-to-use&#34;&gt;View to use&lt;/h2&gt;
&lt;p&gt;When the user is selecting a parent record to link to a particular child, they will be able to use this view to show a list of parent records to choose from. Therefore the view must be created from the parent table.&lt;/p&gt;
&lt;p&gt;They will be able to filter on any field in the view to search for a record.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Using pre-set &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/filters/&#34;&gt;view filters&lt;/a&gt; to narrow down the list of relevant records can be helpful, e.g. if only records of a certain category are required.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;use-only-given-values&#34;&gt;Use only given values&lt;/h2&gt;
&lt;p&gt;When this is un-ticked, allow the user to create a new parent record directly from the child record&amp;rsquo;s editing screen. Relation fields allow you to type the name of a parent record to find and select one. If no matches are found, a prompt will appear allowing the user to create one.&lt;/p&gt;
&lt;h2 id=&#34;show-navigation-link&#34;&gt;Show navigation link&lt;/h2&gt;
&lt;p&gt;When this is ticked (as it is by default), allow the user to navigate from a record containing this field to the one that the relation links to. For example, if a contacts table contains a relation to the organisations table, then when a user views a contact, allow them to navigate to the related organisation by clicking a navigation icon next to the field.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Tabs</title>
      <link>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/</link>
      <pubDate>Mon, 04 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/</guid>
      <description>
        
        
        &lt;p&gt;Tabs are one way of exposing relationships between tables, to allow the user to navigate the structure of an application. For example, in a companies table, a contacts tab may show all the people employed at that particular company.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The user interface can display more than two levels of structure on screen in other ways (e.g. showing a menu in a tab) and wherever the user is, they can navigate up or down the hierarchy of data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;adding-a-tab&#34;&gt;Adding a tab&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/adding-and-removing/#editing-a-table&#34;&gt;Edit the table&lt;/a&gt; you wish to add a tab to&lt;/li&gt;
&lt;li&gt;In the &amp;rsquo;tabs&amp;rsquo; panel, select a &amp;lsquo;child table&amp;rsquo; in the &lt;em&gt;Add a tab&lt;/em&gt; dropdown&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;tab-types&#34;&gt;Tab types&lt;/h2&gt;
&lt;p&gt;There are two types of tab, those which show a &lt;strong&gt;single record&lt;/strong&gt; and those which show &lt;strong&gt;multiple records&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The type used depends on the relation field in the child table used in the tab, which links to the main table. If it is &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/relation-field-options/#one-to-one-only&#34;&gt;one-to-one&lt;/a&gt;, then a single record is shown in the tab. If it&amp;rsquo;s &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/table-layouts/&#34;&gt;one to many&lt;/a&gt;, then a view appears embedded in the tab, with which the user can choose a record to edit.&lt;/p&gt;
&lt;p&gt;A one to one example may be showing a tab of specification information against an ingredient for example.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/tab-one-to-one.png&#34; alt=&#34;one to one tab&#34;&gt;&lt;/p&gt;
&lt;p&gt;A one to many may be a list of suppliers who supply that ingredient.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/tab-one-to-many.png&#34; alt=&#34;one to many tab&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;tab-options&#34;&gt;Tab options&lt;/h2&gt;
&lt;p&gt;Typically, these options are only needed to finnesse an application. They can be useful to look at once the core of the structure is built.&lt;/p&gt;
&lt;h3 id=&#34;tab-view&#34;&gt;Tab view&lt;/h3&gt;
&lt;p&gt;For one to many tabs, which &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;view&lt;/a&gt; to use to show items. By creating a specific view to use for the tab, you can control which fields are displayed in which order, add calculations, filter those which are shown etc.&lt;/p&gt;
&lt;p&gt;To use a view as a tab view, it must contain the row ID field of the parent table i.e. the table the tab is present in.&lt;/p&gt;
&lt;p&gt;If the view contains one or more charts, those charts will also be shown when opening the tab, filtered to show only data for the parent record containing the tab (in the same way that the records to display in the tab are filtered).&lt;/p&gt;
&lt;h3 id=&#34;populate-from-template&#34;&gt;Populate from template&lt;/h3&gt;
&lt;p&gt;Under a tab, a button allows the user to add records. For example in the contacts tab of an organisation, they would be able to add a new contact.&lt;/p&gt;
&lt;p&gt;However, in some situations you want to pre-populate the tab with records, rather than make the user create each one manually. An example might be order lines for a customer order in a telesales system. The order lines could be initially pre-populated with regular items the customer orders.&lt;/p&gt;
&lt;p&gt;One way of doing that is to use the &amp;lsquo;Populate from template&amp;rsquo; view, first creating a new view to use for this purpose. The view must contain the record ID field of the parent table (e.g. customer orders in our example). When the user clicks on the tab, if there are no records present yet, it will prompt to populate the tab. Each row from the view where the record ID matches that of the parent record (cutomer order) will be used to create a record in the tab.&lt;/p&gt;
&lt;p&gt;Any calculations in the view &lt;strong&gt;with the same name&lt;/strong&gt; as a field in the tab table will be used to populate values in the records.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Another way of auto-populating data is to use a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/#when-a-records-created-run-this-workflow&#34;&gt;workflow which runs on record creation&lt;/a&gt; or in the background. You can choose whichever method works best for a particular purpose.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;show-only-if-in-view&#34;&gt;Show only if in view&lt;/h3&gt;
&lt;p&gt;This option allows you to control tab visibility - whether the tab is visible on screen or not at any time depends on whether the main record appears in the view chosen. This works exactly the same way as &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#show-if-record-in-view&#34;&gt;field visibility&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;colour-from-view&#34;&gt;Colour from view&lt;/h3&gt;
&lt;p&gt;The colour of each tab can be chosen. For example, different steps of a process may each be represented by a tab. Once a step is complete, the tab may be coloured green.&lt;/p&gt;
&lt;p&gt;To set this up, create a view from the main (parent) table. It should contain a text calculation called &amp;lsquo;colour&amp;rsquo; which outputs the name of a colour e.g. green, or a blank value for no colour. The colour names are the same as those for &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/#flag-records-with-colour&#34;&gt;record flagging&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;name&#34;&gt;Name&lt;/h3&gt;
&lt;p&gt;By default the tab is named the same as the table used. However, you can override that here.&lt;/p&gt;
&lt;h3 id=&#34;use-inline-editing&#34;&gt;Use inline editing&lt;/h3&gt;
&lt;p&gt;Speed up intensive data entry by allowing each field in the tab view to be edited inline. Here&amp;rsquo;s an example using an order processing system.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/tab-inline-edit.png&#34; alt=&#34;tab inline editing&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;show-relation-fields&#34;&gt;Show relation fields&lt;/h3&gt;
&lt;p&gt;If this is un-ticked (which it is by default), any relation fields in the tab table will be hidden. This can be useful if you want to reduce the complexity exposed to the user. They can load all data including relations by navigating to the full record.&lt;/p&gt;
&lt;h3 id=&#34;choose-a-record-when-a-new-item-is-added&#34;&gt;Choose a record when a new item is added&lt;/h3&gt;
&lt;p&gt;Used when a tab shows a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/#a-more-complex-example&#34;&gt;join (also called a junction) table&lt;/a&gt;. To continue the example from that page, when adding a link between supplier and raw materials, if the raw materials table had a tab showing links, this option would cause the user to be immediately prompted for a supplier when adding a link.&lt;/p&gt;
&lt;h3 id=&#34;accept-emails-from-parent-table&#34;&gt;Accept emails from parent table&lt;/h3&gt;
&lt;p&gt;Redirect any incoming emails to the parent table to be stored in this tab. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/#accept-emails-to-this-address&#34;&gt;table options&lt;/a&gt; for details of receiving emails.&lt;/p&gt;
&lt;h2 id=&#34;multiple-tabs-for-the-same-table&#34;&gt;Multiple tabs for the same table&lt;/h2&gt;
&lt;p&gt;A final note about tabs. In a small number of cases, one table A may have two relations to the &lt;strong&gt;same&lt;/strong&gt; table B. For example, a record of a contract between two parties may have a relation to the customer and supplier, both of which are records in an organisations table.&lt;/p&gt;
&lt;p&gt;In this case, you may want to add two tabs to the organisations table, one to show contracts for which a particular organisation is a customer, another for which they are a supplier.&lt;/p&gt;
&lt;p&gt;You can do that - just add two tabs for the same table. The system will use the first relation it finds for the first tab, the second for the next.&lt;/p&gt;
&lt;p&gt;Another example is a recursive Bill Of Materials (BOM) system where a join table may link to a parent item and a child item.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: To grandchild records</title>
      <link>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/to-grandchild-records/</link>
      <pubDate>Mon, 04 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/to-grandchild-records/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/&#34;&gt;Tabs&lt;/a&gt; allow navigation from a parent record to a child, e.g. an organisation to a contact, order to order line, recipe to ingredient etc.&lt;/p&gt;
&lt;p&gt;Of course, that child record may itself have subsidiary records of its own, e.g. a contact may have a tab for their training records.&lt;/p&gt;
&lt;p&gt;When that&amp;rsquo;s the case, Agilebase exposes both tiers of data on screen so the user can jump from the top level, in this example the organisation, directly to a contact&amp;rsquo;s training records.&lt;/p&gt;
&lt;p&gt;This type of navigation manifests in different ways according to the setup.&lt;/p&gt;
&lt;p&gt;If a child links to the parent with a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/relation-field-options/#one-to-one-only&#34;&gt;one-to-one relation&lt;/a&gt; then links to &amp;lsquo;grandchildren&amp;rsquo; are displayed by a menu in a tab. Here&amp;rsquo;s a menu showing the various grandchild items under a product&amp;rsquo;s specification.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/tab-menu.png&#34; alt=&#34;tab menu&#34;&gt;&lt;/p&gt;
&lt;p&gt;If it&amp;rsquo;s a many-to-one, then grandchildren are represented by blocks at the end of the record.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/grandchild-blocks.png&#34; alt=&#34;grandchild blocks&#34;&gt;&lt;/p&gt;
&lt;p&gt;Finally, in the special case when a grandchild tab&amp;rsquo;s tab view contains the ID of both its immediate parent and the parent above that, then the grandchild contents are shown directly, underneath the child record. Here&amp;rsquo;s an example where there&amp;rsquo;s a three tier structure of&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;supplier approval -&amp;gt; risk assessment -&amp;gt; risk assessment scores.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/grandchild-table.png&#34; alt=&#34;grandchild rows&#34;&gt;&lt;/p&gt;
&lt;p&gt;When the user looks at a supplier approval record, the risk assessment summary and scores can both be seen at the same time.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Sensitive data</title>
      <link>https://docs.agilebase.co.uk/docs/tables/sensitive-data/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/sensitive-data/</guid>
      <description>
        
        
        &lt;p&gt;In a table&amp;rsquo;s &lt;em&gt;privacy and security&lt;/em&gt; panel, there are two options which are worth considering if the data is storing commercially sensitive information (plenty of information in most customer systems falls under this category!) or personal information as defined by EU General Data Protection Regulations (GDPR).&lt;/p&gt;
&lt;p&gt;When either option is ticked, two controls appear.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/privacy-and-security.png&#34; alt=&#34;Privacy and security&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;notify-administrators-on-export&#34;&gt;Notify administrators on export&lt;/h2&gt;
&lt;p&gt;Here you can enter a number. When a user exports more than that number of records at once to spreadsheet, all administrators (users with the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/#assigning-the-administrator-privilege&#34;&gt;administrator&lt;/a&gt; privilege) are notified by email.&lt;/p&gt;
&lt;h2 id=&#34;disallow-exports&#34;&gt;Disallow exports&lt;/h2&gt;
&lt;p&gt;This is also a number, representing a hard limit on the number of records which can be exported from this table at any one time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;See also &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/exporting/&#34;&gt;exporting&lt;/a&gt; for how to set up export privileges. Exports are disallowed by default.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When &lt;strong&gt;This table contains personal data, sensitive data or data about children&lt;/strong&gt; is ticked, a number of additional data entry boxes appear, to let you record the GDPR-relevant considerations.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: This is for informational purposes only and doesn&amp;rsquo;t by itself ensure compliance with the GDPR!. We recommend looking at the &lt;a href=&#34;https://ico.org.uk/for-organisations/guide-to-the-general-data-protection-regulation-gdpr/&#34;&gt;ICO website&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;potential-exfiltration-information&#34;&gt;Potential exfiltration information&lt;/h2&gt;
&lt;p&gt;When either option is ticked, some additional information is shown that can highlight opportunities for data to be exported.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Any API views which send data to third party systems&lt;/li&gt;
&lt;li&gt;Any roles which are set up to allow exporting and which have users with privileges to see the table data&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Special Field Types</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/</guid>
      <description>
        
        
        &lt;p&gt;These special types of fields are useful beyond basic data entry, for creating rich application functionality and user experiences.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Calculations</title>
      <link>https://docs.agilebase.co.uk/docs/views/calculations/</link>
      <pubDate>Wed, 13 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/views/calculations/</guid>
      <description>
        
        
        &lt;p&gt;The ability to add calculations to a view opens up a world of possibilities. Within the confines of the SQL language, there&amp;rsquo;s no limit to what you can do, and those confines contain a pretty large space.&lt;/p&gt;
&lt;p&gt;This is the only area of Agilebase which requires some &amp;lsquo;semi-programming&amp;rsquo; to use - using snippets of SQL. SQL is a standard, widely popular and easy to learn language and there are lots of resources available on the internet.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll start with some simple examples, then move on to some more advanced ones, but even then we won&amp;rsquo;t cover every capability so will point you to specific further resources and references.&lt;/p&gt;
&lt;p&gt;But first, what are the mechanics of creating a calculation and adding it to a view?&lt;/p&gt;
&lt;h2 id=&#34;adding-a-calculation&#34;&gt;Adding a calculation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Open the view you want to edit&lt;/li&gt;
&lt;li&gt;Toggle development mode on and click the big pencil at the top left of the screen&lt;/li&gt;
&lt;li&gt;Under &lt;em&gt;fields&lt;/em&gt;, from &lt;em&gt;Add Calculation&lt;/em&gt; choose a type (text, number etc.), give it a name and press &lt;em&gt;Add&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The calculation editing screen panel now open to the right and you can type in your calculation.&lt;/p&gt;
&lt;p&gt;Before doing that, we&amp;rsquo;ll quickly review the main areas of the calculation editing panel. There are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt; - you can rename the calculation at any time&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Type&lt;/strong&gt; - as opposed to a standard field, you can change the type of a calculation at any time, e.g. from text to numeric or vice versa&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Calculation definition (SQL)&lt;/strong&gt; - the actual contents of the calculation&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Comments or description&lt;/strong&gt; - a place for you to enter your own notes about the calculation, maybe as an explanation of how a particularly complex calculation works for example&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The other options available we will cover below.&lt;/p&gt;
&lt;p&gt;Now we can get to the fun stuff and think of a calculation.&lt;/p&gt;
&lt;h2 id=&#34;basic-examples&#34;&gt;Basic examples&lt;/h2&gt;
&lt;p&gt;Firstly, we can of course do maths. So in the calculation definition, you can enter things like&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 + 2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2 * 3&lt;/code&gt; (multiplication)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;10 / 2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;5 ^ 3&lt;/code&gt; (five to the power 3)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;referencing-fields&#34;&gt;Referencing fields&lt;/h2&gt;
&lt;p&gt;Calculations normally need to act on existing data. We can included references to other fields, including other calculations, in the view by writing out the field name surrounded by curly brackets.&lt;/p&gt;
&lt;p&gt;Some examples might be&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{net price} * 0.2&lt;/code&gt; (calculate VAT amount)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(({sale price} - {cost}) / {cost}) * 100&lt;/code&gt; (calculate the profit of an item as a percentage)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can reference not only other fields and calculations in the view, but also fields and calculations from any view or table joined to the view. The syntax for that is &lt;code&gt;{source name.field name}&lt;/code&gt;. Underneath the calculation editing space is a list of all fields that are available to be added, for reference. You can just copy and paste them into your calculation.&lt;/p&gt;
&lt;h2 id=&#34;special-functions&#34;&gt;Special functions&lt;/h2&gt;
&lt;p&gt;In the same way that you reference fields, you can also reference some special functions that output other information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ab_tile()&lt;/code&gt; - the name of the tile the user has open (not necessarily the same as the tile the workflow view is in)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ab_view()&lt;/code&gt; - the name of the view the user has open (again, not the name of the workflow view that is running)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ab_userid()&lt;/code&gt; - the currently logged in user, in the format &amp;lsquo;Forename Surname (username)&amp;rsquo; i.e. the same format used for logging record creation metadata etc.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ab_userroles()&lt;/code&gt; - a comma separated list of rolenames the logged in user belongs to&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;colouring&#34;&gt;Colouring&lt;/h2&gt;
&lt;p&gt;Text calculations can be coloured in the same way as text fields. Underneath the calculation definition and words, tick &lt;em&gt;colour words&lt;/em&gt;. If a calculation outputs one of the following words, they cell in the view be coloured.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/word-colours.png&#34; alt=&#34;Word Colours&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;best-practices&#34;&gt;Best practices&lt;/h2&gt;
&lt;p&gt;A few tips for working with calculations.&lt;/p&gt;
&lt;h3 id=&#34;centralise-calculations&#34;&gt;Centralise calculations&lt;/h3&gt;
&lt;p&gt;If a particular calculation is used in a number of different views, then it&amp;rsquo;s a good idea to create it once in a &amp;lsquo;utility&amp;rsquo; view, then &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/joins/#joining-to-a-view&#34;&gt;join to that view&lt;/a&gt; from any others that want to include it.&lt;/p&gt;
&lt;p&gt;To take a simple example, a VAT calculation &lt;code&gt;{net price} * 0.2&lt;/code&gt; may be created in a &amp;lsquo;vat calculation&amp;rsquo; view. Then any view wanting to display the VAT can just join to it and include the field. If any changes to the calculation need to be made in future, they then only need to be done in one place. The benefits of this increase as calculations become more complex.&lt;/p&gt;
&lt;h3 id=&#34;avoid-mixing-aggregates-and-non-aggregates&#34;&gt;Avoid mixing aggregates and non-aggregates&lt;/h3&gt;
&lt;p&gt;Avoid mixing an &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/calculations/examples/#aggregate-calculations&#34;&gt;aggregate&lt;/a&gt; and non-aggrete parts in a single calculation. E.g. calculations of the form &lt;code&gt;sum({field 1}) + {field 2}&lt;/code&gt; should be avoided. You may find they cause errors.&lt;/p&gt;
&lt;p&gt;The recommended way to create a calculation like this is to make the aggregate part in a separate view, then join to it, as described under &lt;a href=&#34;#centralise-calculations&#34;&gt;centralise calculations&lt;/a&gt; above.&lt;/p&gt;
&lt;h3 id=&#34;splitting-complex-calculations-into-parts&#34;&gt;Splitting complex calculations into parts&lt;/h3&gt;
&lt;p&gt;If a calculation is particularly complex, you can if you like split apart into multiple calculations, to improve readability. A final calculation can then reference the parts, like e.g.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;({really complex calculation 1} + {really complex calculation 2}) / {really complex calculation 3}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The rule not to mix aggregate parts and non-aggregate parts, as above, still holds.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Just be aware that if you update one of the composite parts, you then need to update any calculations that depend on it. The system won&amp;rsquo;t automatically update them to reference the new version. This is due to the way the database works under the hood - it doesn&amp;rsquo;t natively support referencing one calculation from another, so we add that layer in Agilebase functionality.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;troubleshooting-errors&#34;&gt;Troubleshooting errors&lt;/h3&gt;
&lt;p&gt;If there is an error in a view, it&amp;rsquo;s more than likely the culprit is a calculation, as they are one of the more complex facilities of Agilebase and the only one where SQL can be entered by the user, as opposed to be automatically generated. You may see messages like &lt;strong&gt;view broken&lt;/strong&gt; or errors when you try to change a view e.g. move a field.&lt;/p&gt;
&lt;p&gt;Errors can occur due to data changing. Division by zero errors are automatically handled by Agilebase (null is returned), but other types of calculation can also cause errors in certain circumstances. For example if a calculation squares a field, if someone enters a really large number into that field in a particular record, then an overflow error may occur.&lt;/p&gt;
&lt;p&gt;This can be resolved by temporarily filtering out the problem data, then the view can be edited to handle the issue, or perhaps a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/data-integrity-checks/&#34;&gt;data integrity check&lt;/a&gt; can be added to disallow problem data in future.&lt;/p&gt;
&lt;p&gt;If there is a persistent issue, one way of dealing with it is to temporarily delete all the calculation definitions - you can copy and paste them somewhere else for record-keeping, perhaps into each calculation&amp;rsquo;s notes entry. Then once the view is working again, add the calculation definitions back one by one until you find the problem.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Date Field Options</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-options/date-field-options/</link>
      <pubDate>Tue, 12 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-options/date-field-options/</guid>
      <description>
        
        
        &lt;h2 id=&#34;accuracy&#34;&gt;Accuracy&lt;/h2&gt;
&lt;p&gt;Whether to record a date as just a year, year and month, year month and day, or with a time: hours, hh:mm, hh:mm:ss.&lt;/p&gt;
&lt;h2 id=&#34;use-current-time-for-new-records&#34;&gt;Use current time for new records&lt;/h2&gt;
&lt;p&gt;If ticked, set the value of this field to the current time when a record is created&lt;/p&gt;
&lt;h2 id=&#34;date-format&#34;&gt;Date format&lt;/h2&gt;
&lt;p&gt;The format to display in views. Note this doesn&amp;rsquo;t affect data entry screens, which use the browser&amp;rsquo;s standard date picker, which may customise to the user&amp;rsquo;s region.&lt;/p&gt;
&lt;h2 id=&#34;min-years-age--max-years-age&#34;&gt;Min. years age / Max. years age&lt;/h2&gt;
&lt;p&gt;These two options specify the valid range of allowable dates for the field. By default values up to 10 years in the future or 100 years in the past are allowed.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Other types of date check can be added using the &lt;a href=&#34;&#34;&gt;Advanced field checks&lt;/a&gt; options for a table&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Separators</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/separators/</link>
      <pubDate>Thu, 07 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/separators/</guid>
      <description>
        
        
        &lt;p&gt;A separator field doesn&amp;rsquo;t actually store any data, but is used as a marker of the start of a block of fields. Create a separator  and move it to just before the field which should be the first in a block.&lt;/p&gt;
&lt;p&gt;Depending on the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/table-layouts/&#34;&gt;table layout&lt;/a&gt;, these blocks will be displayed in different ways, but in all cases will form a distinct group of fields.&lt;/p&gt;
&lt;p&gt;Inline help can be added for separators in the same way as for normal fields, by adding a field description. This help text will apply to the whole block of fields created by a separator.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a system with several&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/blocks-one-expanded.png&#34; alt=&#34;blocks&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Upwards Navigation</title>
      <link>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/upwards-navigation/</link>
      <pubDate>Mon, 04 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/upwards-navigation/</guid>
      <description>
        
        
        &lt;p&gt;Whenever a relation field is used in a table, the user has the option to navigate to the related record by clicking a link next to the relation.&lt;/p&gt;
&lt;p&gt;However its useful to know that if the relation is one of the &lt;strong&gt;first fields&lt;/strong&gt; in the table, i.e. at the top of the form, then it will be treated as having greater importance by the user interface. In this case, the relation will appear as a relation heading, making it clear the &amp;lsquo;parent-child&amp;rsquo; relationship i.e. that one record &amp;lsquo;belongs&amp;rsquo; to another.&lt;/p&gt;
&lt;p&gt;For example, in a contacts table, if the relation to a contact&amp;rsquo;s organisation is one of the first fields in the form, the organisation name will appear as a heading for the contact record. It will be a hyperlink so can be used to navigate to the parent organisation easily.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A record can have multiple &amp;lsquo;parents&amp;rsquo; of different types, e.g. a contact may belong to both an organisation and a site or department within that organisation.&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Built In Charting</title>
      <link>https://docs.agilebase.co.uk/docs/charting/built-in-charting/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/charting/built-in-charting/</guid>
      <description>
        
        
        &lt;p&gt;Charting is not strictly an administrator function, as any user can create charts and other data visualisations, such as maps and word clouds.&lt;/p&gt;
&lt;p&gt;However, it&amp;rsquo;s useful for administrators to know how the system works in outline, so they can support users and also because creating charts may be a key part of building an application.&lt;/p&gt;
&lt;p&gt;In Agilebase, charts &amp;lsquo;belong to&amp;rsquo; a view. Each view can have a collection of charts. Users can toggle between viewing data rows and looking at charts based on those rows. When a user filters data using the quick filter boxes at the top of the screen, the data or charts (whichever is shown) will update to match the filtered results.&lt;/p&gt;
&lt;h2 id=&#34;creating-a-chart&#34;&gt;Creating a chart&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;In the tiles interface, open the tile and view to use as a source of chart data&lt;/li&gt;
&lt;li&gt;Click the charts button at the top right of the screen&lt;/li&gt;
&lt;li&gt;Click the &lt;em&gt;add/edit chart or map&lt;/em&gt; button&lt;/li&gt;
&lt;li&gt;Follow each of the steps (1 - 3) on screen to build the chart&lt;/li&gt;
&lt;li&gt;In the last step, give a name to the chart and press &lt;em&gt;save&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When choosing a type of chart in step 3, small previews will be displayed based on some of the chart data. However some chart types may display a message rather than a preview. In this case, the chart data selected in step 1 is not applicable for this chart type.&lt;/p&gt;
&lt;p&gt;For example, if in step 1 we have a count of items per year:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/chart-1.png&#34; alt=&#34;Chart - step 1&#34;&gt;&lt;/p&gt;
&lt;p&gt;then the scatter diagram will work but the bubble chart won&amp;rsquo;t. For the bubble chart, &lt;strong&gt;two&lt;/strong&gt; y-axis measurements are required, one to specify the position of the bubble on the y-axis, plus another to determine the relative size of the bubble.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/chart-bubble.png&#34; alt=&#34;Chart - step 3&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;embedding-charts-in-forms&#34;&gt;Embedding charts in forms&lt;/h2&gt;
&lt;p&gt;Charts can be embedded into tables. When the user opens a record, the chart will automatically filter to show data pertaining to that record only.&lt;/p&gt;
&lt;p&gt;So for example if you have a chart of sales per month per customer, which you embed into a customer table, it will show as sales per month, only for the customer on screen.&lt;/p&gt;
&lt;p&gt;This is accomplished by using a view with chart(s) as a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/referenced-data/&#34;&gt;referenced data field&lt;/a&gt; - see that page for setup information.&lt;/p&gt;
&lt;h2 id=&#34;embedding-charts-in-tabs&#34;&gt;Embedding charts in tabs&lt;/h2&gt;
&lt;p&gt;When a tab contains many &amp;lsquo;child&amp;rsquo; records, e.g. an organisation may have a tab which contains financial data for the past 10 years, then charts can display above the rows of data when the tab&amp;rsquo;s opened.&lt;/p&gt;
&lt;p&gt;To accomplish this, simply add a chart to the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/#tab-view&#34;&gt;view used by the tab&lt;/a&gt;. When the tab is opened, the chart will automatically be filtered to only show data pertaining to the parent table, in a similar fashion to how charts embedded using cross-referenced panels are filtered, as above.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/endole-example.png&#34; alt=&#34;Endole example&#34; title=&#34;Example of a chart in a tab&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;subscribing-users-or-roles-to-charts&#34;&gt;Subscribing users or roles to charts&lt;/h2&gt;
&lt;p&gt;Users can be subscribed to charts (or subscribe themselves) to receive them by email.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In a view with some charts, open the charts&lt;/li&gt;
&lt;li&gt;Next to &amp;lsquo;Send these charts to me&amp;rsquo;, select a frequency, e.g. monthly.&lt;/li&gt;
&lt;li&gt;Under &amp;lsquo;Include data too&amp;rsquo;, select tabular data to include in the email too - various options will be displayed e.g. all new rows since the last email&lt;/li&gt;
&lt;li&gt;Next to &amp;lsquo;roles&amp;rsquo;, select a role to send the charts and data to. All users in the role will be subscribed. Multiple roles can be added&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;If the view has no charts, this function can be used to send tabular data only&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Business Intelligence</title>
      <link>https://docs.agilebase.co.uk/docs/charting/business-intelligence/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/charting/business-intelligence/</guid>
      <description>
        
        
        &lt;blockquote&gt;
&lt;p&gt;Before setting up a BI connection, please be aware of the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/charting#privacy-and-data-security&#34;&gt;data privacy and security&lt;/a&gt; considerations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Any tool which utilises &lt;a href=&#34;https://en.wikipedia.org/wiki/Open_Database_Connectivity&#34;&gt;ODBC&lt;/a&gt; can be used, such as Excel for example. Power BI is a common one.&lt;/p&gt;
&lt;h2 id=&#34;initial-setup&#34;&gt;Initial Setup&lt;/h2&gt;
&lt;p&gt;The first step is to &lt;a href=&#34;https://agilechilli.com/contact-us/&#34;&gt;contact us&lt;/a&gt; to request we prepare your account. This will also allow connections from Power BI or any other tool which can connect to ODBC).&lt;/p&gt;
&lt;p&gt;If you use Power BI, then the process is as follows&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install the PostgreSQL ODBC driver from &lt;a href=&#34;https://odbc.postgresql.org/&#34;&gt;https://odbc.postgresql.org/&lt;/a&gt;. Use the Downloads link and if running on Windows, use the newest driver from the &lt;strong&gt;msi&lt;/strong&gt; folder.&lt;/li&gt;
&lt;li&gt;Use your operating system&amp;rsquo;s control panel to set up the ODBC driver, using the login details we supply. Ensure the SSL mode is set to &amp;lsquo;require&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;From Power BI, add a connection using the PostgreSQL ODBC driver, &lt;em&gt;not&lt;/em&gt; the built-in Power BI PostgreSQL driver.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;sending-data-to-your-external-reporting-tool&#34;&gt;Sending data to your external reporting tool&lt;/h2&gt;
&lt;p&gt;A developer with DEVELOP privileges on a view&amp;rsquo;s parent table can set this up.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Before continuing, please also note that only users without any &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/#multi-tenanting&#34;&gt;multi-tenanting&lt;/a&gt; roles will be able to turn on external reporting.
That&amp;rsquo;s because data sent this way doesn&amp;rsquo;t take account of multi-tenanting. Rather all data is sent, whatever the tenant.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;In Agilebase, open the view you wish to report on. Ensure it has all the necessary fields and calculations in it which you want to report on. If not, add them before continuing.&lt;/li&gt;
&lt;li&gt;Click the charting icon to view the chart setup interface&lt;/li&gt;
&lt;li&gt;At the bottom of the screen, tick &amp;lsquo;send data to a shareable dashboard&amp;rsquo;. As this makes data available &lt;a href=&#34;charting#privacy-and-data-security&#34;&gt;outside of Agilebase&lt;/a&gt;, you will be asked to confirm you will treat the data in a way which maintains privacy and security before enabling the feature.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Within a few seconds, the data will then be visible to your external application.&lt;/p&gt;
&lt;h3 id=&#34;changes&#34;&gt;Changes&lt;/h3&gt;
&lt;p&gt;It&amp;rsquo;s easy for developers to make changes to views in Agilebase, for example adding / removing fields, changing calculations or just renaming a view.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;However, when the BI connection is active, bear in mind that certain changes could break it. The reason is that once data is set up to transfer to a separate system, the other system typically expects it to remain in the same format.&lt;/p&gt;
&lt;p&gt;That means that if you rename the view or move it, or rename/delete fields and calculations, you may afterwards need to check your charts in Superset / Power BI, to see if they need re-creating.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;daily-updates&#34;&gt;Daily updates&lt;/h3&gt;
&lt;p&gt;Once the view has been set up, external applications will see a new read-only snapshot of data once a day at a time you can specify on screen. If your data needs to be updated more often, you can add a workflow button to accomplish that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ensure that the view A is used for reporting only, in particular it doesn&amp;rsquo;t have any &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflow&lt;/a&gt; set up.&lt;/li&gt;
&lt;li&gt;From another view B, edit the view and go to the &amp;lsquo;workflow - edit records&amp;rsquo; panel&lt;/li&gt;
&lt;li&gt;Under &amp;lsquo;chain workflow&amp;rsquo;, select the reporting view A&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Then, when a user opens view B, they will see a button at the top of the screen with the button text set to the name of view A. Pressing it will refresh the view A data sent to external applications.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Calendar</title>
      <link>https://docs.agilebase.co.uk/docs/calendar/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/calendar/</guid>
      <description>
        
        
        &lt;p&gt;Any view with one or more date/time fields can have its data displayed in calendar form. If there are two date/time fields, the first will be the start time, the second the end time. If there&amp;rsquo;s only one, events will last 1 hour by default, unless the field is a date only, in which case they will be all day.&lt;/p&gt;
&lt;p&gt;Data can also sync to and from external calendars using the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Any user can add the calendar tile to their homepage, then select views containing dates to display in it. Data can be displayed in a number of formats, like standard month/week/day views but also timeline views for a gantt-style format, with each view in its own swim-lane.&lt;/p&gt;
&lt;h2 id=&#34;default-views&#34;&gt;Default views&lt;/h2&gt;
&lt;p&gt;Any views which are in a tile with the word &amp;lsquo;calendar&amp;rsquo; in the name will show by default when a user first opens the calendar tile.&lt;/p&gt;
&lt;h2 id=&#34;splitting-a-view-into-tracks&#34;&gt;Splitting a view into tracks&lt;/h2&gt;
&lt;p&gt;In a timeline grid display, each view will become a swim-lane or track down the left hand side of the screen. However it&amp;rsquo;s also possible to create multiple tracks from a single view, choosing a field to split on. Each distinct value of that field will become a separate track.&lt;/p&gt;
&lt;p&gt;For example, here&amp;rsquo;s a view of recipe development milestones split on the product name:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/calendar-timeline.png&#34; alt=&#34;calendar timeline&#34;&gt;&lt;/p&gt;
&lt;p&gt;To set this up, add a text calculation to the view called &amp;lsquo;calendar splitter&amp;rsquo;. The calculation should output the value to split on, in this case the product name.&lt;/p&gt;
&lt;h2 id=&#34;colouring-events&#34;&gt;Colouring events&lt;/h2&gt;
&lt;p&gt;By default, each view used in the calendar will be assigned a different colour.&lt;/p&gt;
&lt;p&gt;Alternatively, you can choose to colour individual events, for example based on whether they&amp;rsquo;re overdue or not.&lt;/p&gt;
&lt;p&gt;To do this, add a text field to the view which has the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/#colour-words&#34;&gt;colour words&lt;/a&gt; option set, or a calculation with the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/calculations/#colouring&#34;&gt;colour words&lt;/a&gt; option.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Changing Field Types</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-types/changing-field-types/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-types/changing-field-types/</guid>
      <description>
        
        
        &lt;p&gt;Once a field has been created, the type can&amp;rsquo;t be changed with the flick of a switch. However there is an easy to follow process to accomplish this.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Rename the field to &lt;code&gt;[fieldname] old&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add a new field &lt;code&gt;[fieldname]&lt;/code&gt;. This means that any calculations that reference the field won&amp;rsquo;t have to be changed and won&amp;rsquo;t break due to mis-matching field names&lt;/li&gt;
&lt;li&gt;Copy all values from one field to another. The easiest way is to use a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Try to delete the old field. If any views reference it, the delete will fail and a list of them will be shown&lt;/li&gt;
&lt;li&gt;Edit all those views
&lt;ul&gt;
&lt;li&gt;remove the old field and add the new, to all fields, filters etc.&lt;/li&gt;
&lt;li&gt;update all calculations that reference the field e.g. add a space to the end of all of them. That will refresh them to reference the new field rather than the old&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Finally, delete the old field&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Before starting, it will be worth ensuring that data won&amp;rsquo;t change during the process, for example by making the data read-only to all users, or requesting they don&amp;rsquo;t edit field values until finished.&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Data Integrity Checks</title>
      <link>https://docs.agilebase.co.uk/docs/tables/data-integrity-checks/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/data-integrity-checks/</guid>
      <description>
        
        
        &lt;p&gt;It can be important to ensure that certain rules are followed when data is entered, either manually by a user, by an incoming &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;API request&lt;/a&gt; or someone filling in a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-chaser/&#34;&gt;chaser&lt;/a&gt; response.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When designing applications, just be aware there is sometimes a trade-off between the ideal of data integrity and everyday concerns.&lt;/p&gt;
&lt;p&gt;For example, you may like to force users to always provide an email address for contacts but in a small minority of cases, they may not have that available.&lt;/p&gt;
&lt;p&gt;Agilebase has options for handling soft validation (highlighting errors or notifying someone) as well as the hard validation (disallowing invalid data entry) options discussed here. For example, you could&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;Create a view&lt;/a&gt;to show all records with errors, for later checking&lt;/li&gt;
&lt;li&gt;Set up a workflow or chaser to &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-chaser/&#34;&gt;chase someone&lt;/a&gt; when errors are found&lt;/li&gt;
&lt;li&gt;Use the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;API&lt;/a&gt; to send a message to your internal messaging system e.g. Slack&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;That said, these are the ways in which you can strictly enforce data integrity.&lt;/p&gt;
&lt;h2 id=&#34;at-an-individual-field-level&#34;&gt;At an individual field level&lt;/h2&gt;
&lt;p&gt;Basic rules can be applied with &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/&#34;&gt;field options&lt;/a&gt;. For example a field may be set as mandatory, or it must contain unique values (no duplicates).&lt;/p&gt;
&lt;h2 id=&#34;data-integrity-checks-advanced&#34;&gt;Data integrity checks (advanced)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/adding-and-removing/#editing-a-table&#34;&gt;Edit a table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Click _Data Integrity Checks&lt;/li&gt;
&lt;li&gt;Click &amp;lsquo;Add Single-Field Check&amp;rsquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here you can add more complex checks, such as the value must be longer or shorter than a certain length, be within a date range or match a &lt;a href=&#34;https://en.wikipedia.org/wiki/Regular_expression&#34;&gt;regular expression&lt;/a&gt;. The list of checks available is the same as that used in &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/filters/&#34;&gt;view filters&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/field-checks.png&#34; alt=&#34;Field checks&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;multi-field-unique-constraints&#34;&gt;Multi-field unique constraints&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/adding-and-removing/#editing-a-table&#34;&gt;Edit a table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Click _Data Integrity Checks&lt;/li&gt;
&lt;li&gt;Click &amp;lsquo;Add Multi-Field Unique Check&amp;rsquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Sometimes, fields must be unique &lt;strong&gt;in combination&lt;/strong&gt;. For example, imagine you have a system for recording customer complaints. One of the fields might be a customer&amp;rsquo;s reference number, another a relation to the customer record.&lt;/p&gt;
&lt;p&gt;You want to avoid duplicates being entered, so could make the customer reference number unique. However it could be that two different customers could use the same reference number independently, so that wouldn&amp;rsquo;t really work.&lt;/p&gt;
&lt;p&gt;The solution is to add a multi-field unique constraint on customer and customer reference number. That way, a reference number won&amp;rsquo;t be able to be re-used for a complaint from the same customer, but more than one customer is allowed to use the same reference.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Options</title>
      <link>https://docs.agilebase.co.uk/docs/tables/options/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/options/</guid>
      <description>
        
        
        &lt;p&gt;To access these options, &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/adding-and-removing/#editing-a-table&#34;&gt;edit a table&lt;/a&gt; and select &amp;rsquo;tags and options&#39;.&lt;/p&gt;
&lt;h2 id=&#34;allow-add&#34;&gt;Allow add&lt;/h2&gt;
&lt;p&gt;If this is ticked (it is by default), users can add records to the table. Anyone with develop privileges on the table can add tables regardless.&lt;/p&gt;
&lt;h3 id=&#34;only-from-within-tab&#34;&gt;Only from within tab&lt;/h3&gt;
&lt;p&gt;If this is ticked, users can add records but only when accessing this table&amp;rsquo;s form from within a tab of a parent record. This can help ensure that child records are always connected to a parent and aren&amp;rsquo;t created as &amp;lsquo;orphans&amp;rsquo;.&lt;/p&gt;
&lt;h2 id=&#34;allow-clone-and-merge&#34;&gt;Allow clone and merge&lt;/h2&gt;
&lt;p&gt;(Off by default). Show a clone/merge record button when a user is viewing a record.&lt;/p&gt;
&lt;p&gt;Cloning makes a simple copy of all data in the record. The contents of tabs are not cloned. A more advanced clone facility can be created with a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflow&lt;/a&gt; if desired.&lt;/p&gt;
&lt;p&gt;Merging allows the user to select another record to merge with this one. This is commonly use to resolve a situation where there are duplicate records. The contents of one are merged into the other, then the first deleted. A wizard will guide the user through selecting which data to keep from each record. Child records from the deleted record will be re-attached to the one remaining. So for example if Organisation 1 containing two contacts is merged with Organisation 2 containing 3, a single organisation with five contacts will result.&lt;/p&gt;
&lt;h2 id=&#34;allow-remove&#34;&gt;Allow remove&lt;/h2&gt;
&lt;p&gt;(On by default). Allow records to be deleted by people with EDIT privileges as well as people with develop privileges, who can always delete.&lt;/p&gt;
&lt;h2 id=&#34;allow-share&#34;&gt;Allow share&lt;/h2&gt;
&lt;p&gt;Showa button which allows links to individual records to be shared between users using email. Note - recipients still need a login and relevant privileges to see the record.&lt;/p&gt;
&lt;h2 id=&#34;data-entry-from-external-sources&#34;&gt;Data entry from external sources&lt;/h2&gt;
&lt;p&gt;The options in this section are for configuring the table to allow an API request from an external source to create and edit records. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;API use&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2 id=&#34;other-options&#34;&gt;Other options&lt;/h2&gt;
&lt;h3 id=&#34;records-lockable&#34;&gt;Records lockable&lt;/h3&gt;
&lt;p&gt;Records can be locked to prevent editing. You may like to do this based on criteria e.g. once a customer order has been sent, it should be locked against further changes.&lt;/p&gt;
&lt;p&gt;To actually lock the record, a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflow&lt;/a&gt; can be used.&lt;/p&gt;
&lt;p&gt;Locked records can be manually unlocked by someone with develop privileges on the table, but only one at a time.&lt;/p&gt;
&lt;h3 id=&#34;email-notifications&#34;&gt;Email notifications&lt;/h3&gt;
&lt;p&gt;When someone adds a comment to a record, when selecting recipients, they have the option to email those recipients, as well as adding the comment to the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;comment stream&lt;/a&gt;. Ticking this table option sets the default to send emails for any comment added to this table. Users can override this on an individual comment basis and recipients can override in their notification preferences.&lt;/p&gt;
&lt;h3 id=&#34;flag-records-with-colour&#34;&gt;Flag records with colour&lt;/h3&gt;
&lt;p&gt;Enter a field name here and add a field with the same name to a view, to flag records. The contents of the field must be one of the colour names as given on the screen. The field added to the view can be a calculation, specifically a hidden calculation. This will flag the view without showing the colour name on screen.&lt;/p&gt;
&lt;p&gt;This option can also be used to colour items in a junction chooser (see tab option: &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/#choose-a-record-when-a-new-item-is-added&#34;&gt;Choose a record when a new item is added&lt;/a&gt;). In the junction table, set this option, then in the view used as a relation picker (set in the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/relation-field-options/#view-to-use&#34;&gt;relation field options&lt;/a&gt;), add the colour calculation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It&amp;rsquo;s also possible to colour individual table fields or calculations in a view (as opposed to this option which flags the whole row). See the options for &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/#colour-words&#34;&gt;field colouring&lt;/a&gt; or &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/calculations/#colouring&#34;&gt;calculation colouring&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;accept-emails-to-this-address&#34;&gt;Accept emails to this address&lt;/h3&gt;
&lt;p&gt;The system can accept incoming emails and attach them to relevant records e.g. attaching an email from a customer to that customer&amp;rsquo;s record.&lt;/p&gt;
&lt;p&gt;A particular email address can be set up to receive emails. The system can be configured to either accept emails from anyone, or just from users. If just from users, then users can forward any emails they receive to the system to have them imported, or BCC the address when sending to people.&lt;/p&gt;
&lt;p&gt;The email text will be logged as a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/comment-feeds/&#34;&gt;comment&lt;/a&gt; against the record, with the full email attached if it is HTML formatted or includes attachments. The table must have a comments field.&lt;/p&gt;
&lt;p&gt;Please &lt;a href=&#34;https://agilechilli.com/contact-us/&#34;&gt;contact us&lt;/a&gt; if you&amp;rsquo;d like to set that up.&lt;/p&gt;
&lt;p&gt;Emails are matched by creating a view containing the email addresses of potential recipients. An incoming email is attached to the record from this view which matches the sender&amp;rsquo;s email address. If there is no match, it is added to a &amp;lsquo;holding bay&amp;rsquo; where users can view and manually attach emails to records.&lt;/p&gt;
&lt;h4 id=&#34;configuring-the-email-address-used&#34;&gt;Configuring the email address used&lt;/h4&gt;
&lt;p&gt;An email address of the form &lt;a href=&#34;mailto:viewname@accountname.domainname&#34;&gt;viewname@accountname.domainname&lt;/a&gt; will be set up, e.g. &lt;a href=&#34;mailto:contacts@mycompany.agilebase.co.uk&#34;&gt;contacts@mycompany.agilebase.co.uk&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;viewname&lt;/em&gt; determines the view which Agilebase queries to find the recipient email address. The comment will be added to the matching record in the view&amp;rsquo;s parent table, or a tab of the table, if &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/#accept-emails-from-parent-table&#34;&gt;Accept emails from parent table&lt;/a&gt; is enabled in a tab. If multiple tabs have this option enabled, then the tab with a name also matching &lt;em&gt;viewname&lt;/em&gt; is used&lt;/li&gt;
&lt;li&gt;&lt;em&gt;accountname&lt;/em&gt; determines the company account to look in&lt;/li&gt;
&lt;li&gt;&lt;em&gt;domainname&lt;/em&gt; is the domain name of the Agilebase server&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;information&#34;&gt;Information&lt;/h2&gt;
&lt;p&gt;After the options, some structural information is shown, such as which tables depend on this one i.e. have a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/basic-field-types/#relation&#34;&gt;relation&lt;/a&gt; to it, how many fields and views per tile there are. See also the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/usage-reporting/#the-dashboard&#34;&gt;usage dashboard&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Calculation Examples</title>
      <link>https://docs.agilebase.co.uk/docs/views/calculations/examples/</link>
      <pubDate>Tue, 19 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/views/calculations/examples/</guid>
      <description>
        
        
        &lt;p&gt;The database which underpins Agilebase is &lt;a href=&#34;https://www.postgresql.org&#34;&gt;PostgreSQL&lt;/a&gt; - &amp;lsquo;The World&amp;rsquo;s Most Advanced Open Source Relational Database&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;This page will just be an introduction to some of the things you can do with calculations.&lt;/p&gt;
&lt;p&gt;A comprehensive definition and reference for all of the functions possible can be found here: &lt;a href=&#34;https://www.postgresql.org/docs/current/functions.html&#34;&gt;https://www.postgresql.org/docs/current/functions.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;example-functions-for-each-type-of-field&#34;&gt;Example functions for each type of field&lt;/h2&gt;
&lt;p&gt;Here are some &amp;lsquo;starters for 10&amp;rsquo; that may be useful day to day.&lt;/p&gt;
&lt;h3 id=&#34;general-functions&#34;&gt;General functions&lt;/h3&gt;
&lt;p&gt;There are a couple of functions that are particularly useful to know about, to keep in your calculations toolkit. These are&lt;/p&gt;
&lt;h4 id=&#34;coalesce&#34;&gt;Coalesce&lt;/h4&gt;
&lt;p&gt;The coalesce function lets you deal sensibly with empty values, which we call &amp;rsquo;null&amp;rsquo; values. Normally, if any field you reference is null, then the result of the calculation is also null. Coalesce is a way to provide a default value. So for example, if a view of customer order lines has a quantity and a price field, but the quantity may be blank, then&lt;/p&gt;
&lt;p&gt;&lt;code&gt;coalesce({quantity}, 0) * {price}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;would calculate the line value, outputting zero if the quantity is not filled in.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Coalesce can be used with more than two arguments - the first non-null value it encounters, from left to right, will be output to be used in further calculation steps&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;case&#34;&gt;Case&lt;/h4&gt;
&lt;p&gt;A case statement can be used to add &amp;lsquo;if/then/else&amp;rsquo; logic. An example is&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;case
  when {due date} is null then &amp;#39;unknown&amp;#39;
  when {due date} &amp;lt; now() then &amp;#39;overdue&amp;#39;
  when {due date} &amp;lt; now() + interval &amp;#39;7 days&amp;#39; then &amp;#39;due soon&amp;#39;
  else &amp;#39;not due yet&amp;#39;
end
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(We&amp;rsquo;ll cover date calculations more below).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note the top clauses of a case statement are evaluated first, so put more specific things at the top if multiple lines may match.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;number-functions&#34;&gt;Number functions&lt;/h3&gt;
&lt;p&gt;Common mathematical functions can be found here: &lt;a href=&#34;https://www.postgresql.org/docs/current/functions-math.html&#34;&gt;https://www.postgresql.org/docs/current/functions-math.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;text-functions&#34;&gt;Text functions&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;{field 1} || &#39; &#39; || {field 2}&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Two vertical bars are used to join bits of text together (this seems an odd choice to use rather than something like an ampersand or + sign, but there you go, that&amp;rsquo;s what it is). A literal piece of text is surrounded by single quotes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;substring({text field} FROM 1 FOR 1)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Extracts the first letter (or other character e.g. number) from some text.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;regexp_replace({full name}, &#39;\\s.*&#39;, &#39;&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A simplistic way of extracting a person&amp;rsquo;s first name from a full name - strip out everything from the first space onwards.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;regexp_replace(
  {account owner},
  &amp;#39;.*\\((.*)\\).*&amp;#39;,
  &amp;#39;\\1&amp;#39;
)
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;A more complex example. Given an &amp;lsquo;account owner&amp;rsquo; value in the format &lt;strong&gt;Forename Surname (username)&lt;/strong&gt;, extract the username, i.e. everything between the brackets.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The last two are slightly more complex because they use a powerful text matching/search and replace facility called &lt;strong&gt;regular expressions&lt;/strong&gt;, or regexes for short. Again, this is a standard facility and there&amp;rsquo;s lots of documentation available on the &lt;a href=&#34;https://www.postgresql.org/docs/current/functions-matching.html#FUNCTIONS-POSIX-REGEXP&#34;&gt;PostgreSQL website&lt;/a&gt; and elsewhere if you&amp;rsquo;d like to learn more.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The only difference from standard to be aware of is that when entering a regex into a calculation in Agilebase, you must use two backslashes instead of one.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;like&lt;/code&gt; compares two elements of text and &lt;code&gt;ilike&lt;/code&gt; does so case-insensitively. A percentage sign means &amp;lsquo;match any text&amp;rsquo;. So for example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;case
  when {postcode} ilike &amp;#39;bs%&amp;#39; then &amp;#39;Bristol&amp;#39;
  else &amp;#39;elsewhere&amp;#39;
end
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Outputs &amp;lsquo;Bristol&amp;rsquo; if the postcode field starts with &amp;lsquo;BS&amp;rsquo; (or &amp;lsquo;bs&amp;rsquo;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;date-functions&#34;&gt;Date functions&lt;/h3&gt;
&lt;p&gt;The database has very strong support for working with dates and time - you can do many calculations on them. Here are a few examples.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{date field} + &#39;1 year&#39;::interval&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;adds a year on to the given date&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;You can do the same with months, week, days etc. and combinations like &amp;lsquo;1 week 1 day&amp;rsquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;date_part(&#39;year&#39;, {date field})&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;date_part(&#39;dow&#39;, {date field})&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;These two extract different parts of the date - the first just the year, the second the day of the week as a number 0 - 6. More info is available in the &lt;a href=&#34;https://www.postgresql.org/docs/current/static/functions-datetime.html#FUNCTIONS-DATETIME-EXTRACT%22&#34;&gt;PostgreSQL documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;date_part(&#39;days&#39;, ((date_trunc(&#39;month&#39;, now()) + &#39;1 month&#39;::interval) - now()))&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Works out how many days are left in the current month. This example introduces a couple more date functions:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;now()&lt;/code&gt; gives the current date and time&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date_trunc&lt;/code&gt; &amp;rsquo;truncates&amp;rsquo; a date to the month in this case (in other words rounding it down to the nearest month)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;to_char(&#39;19 May 2020&#39;::timestamp, &#39;Day&#39;)&lt;/code&gt; - outputs &amp;lsquo;Tuesday&amp;rsquo;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;to_char(&#39;19 May 2020&#39;::timestamp, &#39;Mon yyyy&#39;)&lt;/code&gt; - outputs &amp;lsquo;May 2020&amp;rsquo;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/functions-formatting.html&#34;&gt;to_char&lt;/a&gt; formats a date (it also works with numbers)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;date_part(&#39;weeks&#39;,{date field 1} - {date field 2})&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Counts the number of weeks between two dates&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;aggregate-calculations&#34;&gt;Aggregate calculations&lt;/h2&gt;
&lt;p&gt;All of the examples above work within one row, or record, of data. Aggregate calculations are different, the take many rows of data and condense them down into one result - one number, or piece of text, etc.&lt;/p&gt;
&lt;p&gt;They&amp;rsquo;re very useful for creating summaries of data, such as total sales per product, counts of complaints per month per category, total value of an order (summing individual order lines) etc.&lt;/p&gt;
&lt;h3 id=&#34;aggregates-of-child-rows&#34;&gt;Aggregates of child rows&lt;/h3&gt;
&lt;p&gt;To make an aggregate you have to have something to summarise by and something to aggregate. The easiest way of doing this is to create a view with a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/joins/#upwards-and-downwards-joins&#34;&gt;join down&lt;/a&gt; from a parent table to a child. You can then summarise, or group by each parent row and aggregate one (or more) of the fields in the child table.&lt;/p&gt;
&lt;p&gt;For example, if we have an invoices table and an invoice lines table, assuming there is a relation linking each invoice line to its parent invoice:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/creating-a-view/&#34;&gt;create a view&lt;/a&gt; from the invoices table - we&amp;rsquo;ll call it &amp;lsquo;invoice totals&amp;rsquo;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/joins/&#34;&gt;add a join&lt;/a&gt; down to invoice lines&lt;/li&gt;
&lt;li&gt;Add the calculation &lt;code&gt;sum({line total})&lt;/code&gt; to the view&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You should then have a view with just one row per invoice line, showing the invoice total. &lt;strong&gt;sum&lt;/strong&gt; is an example of an aggregate calculation. Another common example is &lt;strong&gt;count&lt;/strong&gt;. If you replaced &lt;code&gt;sum({line total})&lt;/code&gt; with &lt;code&gt;count(*)&lt;/code&gt;, that would count the number of invoice lines in the invoice, instead of totalling the values up.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note - the aggregate calculation groups by all non-aggregate fields in a view. For example, if you added the product name into ou invoice totals view, you&amp;rsquo;d get a total per product per invoice, rather than a total for each whole invoice.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;aggregates-without-child-rows&#34;&gt;Aggregates without child rows&lt;/h3&gt;
&lt;p&gt;There&amp;rsquo;s another way to create aggregates, which can be used without joining down to a child table or view.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In the tiles interface, open the view you wish to edit&lt;/li&gt;
&lt;li&gt;Click your user icon at the top right and select &lt;em&gt;admin - edit view&lt;/em&gt; from the menu&lt;/li&gt;
&lt;li&gt;Tick &lt;em&gt;Group by all non-aggregate fields&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Add any fields you wish to group by to the view. Remove any you don&amp;rsquo;t wish to group by &lt;strong&gt;including any hidden fields&lt;/strong&gt; such as the IDs of joined tables&lt;/li&gt;
&lt;li&gt;Add the aggregate calculation e.g. &lt;code&gt;sum({my field})&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;expanding-rows&#34;&gt;Expanding rows&lt;/h3&gt;
&lt;p&gt;Some functions do the opposite of an aggregate function - rather than condensing and summarising many rows into one, they split one row up into many. For example, if one of your fields is a comma separated list, you could split that up into many rows, one per item in the list.&lt;/p&gt;
&lt;p&gt;Say for example you import data from a form on a website which produces a comma separated list of products ordered.&lt;/p&gt;
&lt;p&gt;Adding the calculation&lt;/p&gt;
&lt;p&gt;&lt;code&gt;regexp_split_to_table({products ordered}, &#39;,&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;would produce one output row per product in the list. That could then be joined to other data in the system such as pricing.&lt;/p&gt;
&lt;h3 id=&#34;window-functions&#34;&gt;Window functions&lt;/h3&gt;
&lt;p&gt;Window functions are somewhat like aggregate functions in that they can act on many rows, not just one. However, they don&amp;rsquo;t condense down into a single row. An example would be calculating a rolling average or cumulative total as each row is shown.&lt;/p&gt;
&lt;p&gt;Effectively, they look at a &amp;lsquo;window&amp;rsquo;, also called a partition, of rows around the current row and calculate a result based on those. That could be for example&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the current row, the one before and the one after it&lt;/li&gt;
&lt;li&gt;every row up to the current row&lt;/li&gt;
&lt;li&gt;every row&lt;/li&gt;
&lt;li&gt;every row which is similar in some way e.g. has the same value for a &amp;lsquo;category&amp;rsquo; field&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As an example,&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{price} - avg({price}) over (partition by {category})&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;would calculate for each item, the difference from the average price of items with the same category.&lt;/p&gt;
&lt;p&gt;This again is much too large a topic to cover in an introductory page, there&amp;rsquo;s plenty of documentation here: &lt;a href=&#34;https://www.postgresql.org/docs/current/tutorial-window.html&#34;&gt;https://www.postgresql.org/docs/current/tutorial-window.html&lt;/a&gt;
and a video introduction to the concept here:&lt;/p&gt;

 &lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
   &lt;iframe src=&#34;https://www.youtube.com/embed/blHEnrYwySE&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;

&lt;h3 id=&#34;series-generation&#34;&gt;Series generation&lt;/h3&gt;
&lt;p&gt;Sometimes you need to &lt;strong&gt;generate&lt;/strong&gt; a set of rows, as opposed to having the data stored in the database. Here are some quick examples:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;generate_series(1,10)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;generates the numbers 1 to 10, each one in a different row&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;generate_series(now() - &#39;10 years&#39;::interval, now(), &#39;1 month&#39;::interval)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;generates one row per month, from 10 years ago up until this month&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;The functions above highlight just a few of the many possibilities. Please feel free to read up on PostgreSQL some more and if you come up with any neat calculations yourself in your everyday work, please do send them to &lt;a href=&#34;mailto:support@agilebase.co.uk&#34;&gt;support@agilebase.co.uk&lt;/a&gt; so we can add them to this page (with credit).&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Types of Join</title>
      <link>https://docs.agilebase.co.uk/docs/views/joins/types-of-join/</link>
      <pubDate>Fri, 15 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/views/joins/types-of-join/</guid>
      <description>
        
        
        &lt;p&gt;Here&amp;rsquo;s a Youtube video explaining the concept of joins and running through the various types.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/9yeOJ0ZMUYw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Just remember, when using third party resources to learn about joins (or other SQL features), you don&amp;rsquo;t need to write the SQL code in Agilebase, it&amp;rsquo;s generated for you behind the scenes.&lt;/p&gt;
&lt;h2 id=&#34;left-outer-and-inner-joins&#34;&gt;Left outer and inner joins&lt;/h2&gt;
&lt;p&gt;The left outer join is the default type used when a join is added to a view in Agilebase. It suits most cases, but can be changed after join creation if needed.&lt;/p&gt;
&lt;p&gt;A left outer join type will ensure that every row from the left source (table or view) is visible in output, whether or not the data links to a row on the right side. Conversely, when an inner join&amp;rsquo;s used, data from the left will be hidden unless it links to data on the right.&lt;/p&gt;
&lt;p&gt;That may sound rather abstract: working with an example, we can see what it means in practice.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s take the common and straightforward example of linking contacts to organisations. We start by creating a view from the contacts table, so that&amp;rsquo;s on the left side. We then join from contacts to an organisations table, on the right. This join looks as follows:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/example-join.png&#34; alt=&#34;example join&#34;&gt;&lt;/p&gt;
&lt;p&gt;That gives us a view where we can add fields from the organisation table into the view of contacts data. The output may look something like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/view-contacts.png&#34; alt=&#34;contacts view&#34;&gt;&lt;/p&gt;
&lt;p&gt;Each row representing a contact, has the contact details (name, email address etc.) and from the organisations table, you can see the name and website of the organisation they belong to.&lt;/p&gt;
&lt;p&gt;But wait a minute, what&amp;rsquo;s that contact with blank spaces for the organisation name and website? That represents a &lt;strong&gt;contact which is not yet linked to an organisation&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I guess to be nit-picky, it could represent a contact joined to an organisation without a name or website address added, but here we&amp;rsquo;ll assume all organisations have those details filled in.&lt;/p&gt;
&lt;p&gt;When the join type is &lt;strong&gt;left outer&lt;/strong&gt;, then this row will be shown, as seen. However, if it&amp;rsquo;s changed to an &lt;strong&gt;inner&lt;/strong&gt; join, then it will be hidden.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s why left outer is the safest type to use by default. Otherwise with an inner, if a user adds a new contact, fills in all their basic details but doesn&amp;rsquo;t link her or him to an organisation (perhaps they don&amp;rsquo;t know the organisation or it doesn&amp;rsquo;t exist in the system yet), then they won&amp;rsquo;t be able to see that contact in the view. And if they can&amp;rsquo;t see it, then they can&amp;rsquo;t click on it to load it - it will have vanished for good (well, until the join is changed back to a left outer).&lt;/p&gt;
&lt;p&gt;Sometimes of course, inner joins are very useful - but it makes sense that there must be a conscious decision to change a join to that type.&lt;/p&gt;
&lt;h2 id=&#34;right-outer-and-full-outer&#34;&gt;Right outer and full outer&lt;/h2&gt;
&lt;p&gt;You may think, if there&amp;rsquo;s a left outer, is there also a right outer? There is, it means all data from the right side is always visible, whether or not there&amp;rsquo;s a match on the left. So in our contacts/organisations example, all organisations would be visible, whether or not any contacts belonged to them.&lt;/p&gt;
&lt;p&gt;Practically, this isn&amp;rsquo;t used much, as a right outer join is just the same as a left outer join started from the other table. There&amp;rsquo;s no difference in the data visible, but using a left outer works better in Agilebase because you can be guaranteed that clicking on a row will load a record (with a right outer, if there&amp;rsquo;s no data on the left side, then no record can be loaded when the row&amp;rsquo;s clicked).&lt;/p&gt;
&lt;p&gt;You may also hear of a full outer join - this again has a very small number of useful cases, but you can &lt;a href=&#34;https://stackoverflow.com/questions/2094793/when-is-a-good-situation-to-use-a-full-outer-join&#34;&gt;read about them online&lt;/a&gt; if interested.&lt;/p&gt;
&lt;h2 id=&#34;venn-diagram&#34;&gt;Venn diagram&lt;/h2&gt;
&lt;p&gt;Joins are often represented visually with Venn diagrams. Here&amp;rsquo;s one, showing that for a left outer join, all the data from the left side is visible, whether or not a matching row exists on the right, and for an inner join, data from the left is excluded without a match. The results of right outer and full outer are also visualised.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/joins-venn.png&#34; alt=&#34;Joins Venn diagram&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;cross-join&#34;&gt;Cross join&lt;/h2&gt;
&lt;p&gt;There&amp;rsquo;s one final type to consider that can be used in Agilebase. Strictly speaking, it isn&amp;rsquo;t a join at all, but it does bring together data from left and right sides in a particular way, so we&amp;rsquo;ll think of it as a join here and it&amp;rsquo;s treated as such in Agilebase.&lt;/p&gt;
&lt;p&gt;If you have a mathematical background, it may help to know that it produces a cartesian product, or cross product, of all rows in the left and right sides.&lt;/p&gt;
&lt;p&gt;However if you don&amp;rsquo;t, not to worry, it can be easily explained without maths. Basically, every combination of each row on the left with each row on the right is output. So if you have three rows, A, B and C on the left and another three X, Y and Z on the right, then you would get as output: data from&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Row A with row X&lt;/li&gt;
&lt;li&gt;Row A with row Y&lt;/li&gt;
&lt;li&gt;Row A with row Z&lt;/li&gt;
&lt;li&gt;Row B with row X&lt;/li&gt;
&lt;li&gt;Row B with row Y&lt;/li&gt;
&lt;li&gt;Row B with row Z&lt;/li&gt;
&lt;li&gt;Row C with row X&lt;/li&gt;
&lt;li&gt;Row C with row Y&lt;/li&gt;
&lt;li&gt;Row C with row Z&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;You can see that you need to be careful when creating cross joins that results won&amp;rsquo;t balloon up into massive numbers of rows that are hard to deal with. For example, if two tables, each with a hundred thousand rows in, are joined by cross join, then 100,000 x 100,000 = 10,000,000,000 (ten billion) rows would output.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once again, potential uses may be most easily explained by a real world example.&lt;/p&gt;
&lt;p&gt;Cross joins can be used when reporting, to find data that&amp;rsquo;s &lt;strong&gt;not&lt;/strong&gt; there (to get a bit Zen). For example, say we have two tables&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;customers&lt;/li&gt;
&lt;li&gt;products&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We may want to create output representing the combination of every customer with every product - we could then further join this to sales data to find which products a customer isn&amp;rsquo;t buying, or which products are being bought by most and fewest customers.&lt;/p&gt;
&lt;p&gt;Firstly, we need all combinations. Create a cross join between customers and products, in a &amp;lsquo;customer products&amp;rsquo; view.&lt;/p&gt;
&lt;p&gt;The next step is similar to our reporting example of &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/joins/#joining-on-multiple-fields&#34;&gt;joining on multiple fields&lt;/a&gt;. Create a calculation &amp;lsquo;customer product&amp;rsquo; which concatenates together customer ID and product ID. Create the same calculation in a view of sales (each sale of a product to a customer). Then join this sales view into our customer products view and bingo, we can display the total sales, whether zero or more, of each product to each customer.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you haven&amp;rsquo;t yet read up on &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/calculations/&#34;&gt;calculations&lt;/a&gt;, you may need to do that in order to accomplish everything above&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;adding-a-cross-join&#34;&gt;Adding a cross join&lt;/h3&gt;
&lt;p&gt;Adding a cross join is a little different to &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/joins/#adding-a-join&#34;&gt;adding a normal join&lt;/a&gt;. The left and right fields don&amp;rsquo;t matter (as we want to apply any exclusion rules, we just want every combination of rows possible).&lt;/p&gt;
&lt;p&gt;So follow the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/joins/#complex-joins&#34;&gt;normal process for a complex join&lt;/a&gt;, but just select the left and right tables (or views), leave the fields at their default values.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Filters</title>
      <link>https://docs.agilebase.co.uk/docs/views/filters/</link>
      <pubDate>Wed, 13 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/views/filters/</guid>
      <description>
        
        
        &lt;p&gt;Filters can be applied permanently to a view, allowing an administrator to specify the subset of records that should be displayed. This is often for convenience and to create more useful systems. For example, if you have a database of suppliers, you may want to create views showing those which are approved, those which aren&amp;rsquo;t, those which are local etc. Each view would have a different set of filters applied.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Remember people can apply additional &amp;lsquo;ad-hoc&amp;rsquo; or temporary filters to a view at any time using the filter boxes at the top of the screen, so it may not be necessary to create filtered views for every eventuality.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A filter can act on any field or calculation in the view, as well as on any in joined tables or views.&lt;/p&gt;
&lt;p&gt;Multiple filters act like they have AND between them, i.e. they are applied additively. If you wish to apply a filters with OR between them, or if you wish to apply a filter on the reult of the comparison of fields, then simply create the relevant &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/calculations/&#34;&gt;calculation&lt;/a&gt;. For example, if you added two filters to a suppliers view&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;status equals approved&lt;/strong&gt; and &lt;strong&gt;status equals pending&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;then you would get no records showing - a status can&amp;rsquo;t be both one thing and another. However if you created a boolean calculation &amp;lsquo;pending or approved&amp;rsquo;, with definition&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{status} like &#39;approved&#39; or {status} like &#39;pending&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;you could then add a filter on that calculation&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pending or approved equals true&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;adding-a-filter&#34;&gt;Adding a filter&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Open the view you want to edit&lt;/li&gt;
&lt;li&gt;Toggle development mode on and click the big pencil at the top left of the screen&lt;/li&gt;
&lt;li&gt;Under &lt;em&gt;filters&lt;/em&gt;, choose a type, give it a name and press &lt;em&gt;Add&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There are 26 types of filter to choose from, from the simple &amp;rsquo;equals&amp;rsquo; and &amp;rsquo;not equal to&amp;rsquo;, to more complex pattern matching using &lt;a href=&#34;https://www.postgresql.org/docs/current/functions-matching.html#FUNCTIONS-POSIX-REGEXP&#34;&gt;regular expressions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some filters apply to multiple data types, others only to specific types. For example, &amp;rsquo;newer than X days ago&amp;rsquo; only applies to date fields.&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;ve added a filter, you&amp;rsquo;ll be able to type in a description for it. If no description is entered, the system will automatically generate one, which you&amp;rsquo;ll be able to see.&lt;/p&gt;
&lt;p&gt;This description is shown to users as help in particular circumstances, e.g. when the view is used as a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-chaser/&#34;&gt;chaser&lt;/a&gt;, so it&amp;rsquo;s a good idea to check it makes sense.&lt;/p&gt;
&lt;h3 id=&#34;including-blank-values&#34;&gt;Including blank values&lt;/h3&gt;
&lt;p&gt;Once a filter has been created, when you hover over it you&amp;rsquo;ll see an option to tick &amp;lsquo;or is blank&amp;rsquo;. This is useful to ensure blank values aren&amp;rsquo;t excluded by your filter, which they typically would be otherwise.&lt;/p&gt;
&lt;p&gt;For example, imaging you&amp;rsquo;re setting up an &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-email/&#34;&gt;email notification workflow&lt;/a&gt; to send a notification to people once a week of any outstanding tasks. You&amp;rsquo;d likely need two filters, the first to find any tasks with an &amp;lsquo;outstanding&amp;rsquo; status and the second to only include tasks for which no notifications have been sent within the last 7 days.&lt;/p&gt;
&lt;p&gt;For that second filter, you would set it up as&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&#39;last notified&#39; is more than 7 days ago
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, as it stands, that would exclude any tasks which have &lt;strong&gt;never&lt;/strong&gt; had a notification sent for them, i.e. where the last notified field is blank.&lt;/p&gt;
&lt;p&gt;To include those, just tick &amp;lsquo;or is blank&amp;rsquo; after creating the filter.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
