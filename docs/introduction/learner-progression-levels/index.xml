<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Learner Progression Levels on Agilebase docs</title>
    <link>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/</link>
    <description>Recent content in Learner Progression Levels on Agilebase docs</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 27 Nov 2023 10:15:18 +0000</lastBuildDate>
    <atom:link href="https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Citizen Developer Level 1</title>
      <link>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/citizen-developer-level-1/</link>
      <pubDate>Tue, 12 Sep 2023 13:00:00 +0100</pubDate>
      <guid>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/citizen-developer-level-1/</guid>
      <description>Introduction This is the start of the Agilebase journey. At this level you can create your own customisations, using no coding.&#xA;An Agilebase citizen developer can create &amp;lsquo;personal copies&amp;rsquo; of any view and edit those copies&#xA;remove or add fields, excepting any that are marked &amp;lsquo;confidential&amp;rsquo; (only higher level developers can access those fields) rearrange fields change field sorting add filters or remove filters (except on &amp;lsquo;confidential&amp;rsquo; fields) add and remove charts A confidential field is one that has a visibility rule, or is used for multi-tenanting.</description>
    </item>
    <item>
      <title>Citizen Developer Level 2</title>
      <link>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/citizen-developer-level-2/</link>
      <pubDate>Tue, 12 Sep 2023 13:00:00 +0100</pubDate>
      <guid>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/citizen-developer-level-2/</guid>
      <description>Introduction You are now well on your way through the Agilebase journey.&#xA;This level is suggested or &amp;lsquo;unlocked&amp;rsquo; once a citizen developer has carried out a certain number of citizen development functions and has therefore started to learn how no code development works in a safe environment.&#xA;However to activate the level, it must be manually assigned by a Software Architect level user, as it allows changes to the system which can affect other users.</description>
    </item>
    <item>
      <title>Citizen Developer Level 3</title>
      <link>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/citizen-developer-level-3/</link>
      <pubDate>Tue, 03 Oct 2023 13:00:00 +0100</pubDate>
      <guid>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/citizen-developer-level-3/</guid>
      <description>Introduction A Software Architect (see below) can, at their discretion, assign a citizen developer 3 &amp;lsquo;develop&amp;rsquo; privileges on a table (or tables).&#xA;That allows them to&#xA;add fields to those table, excluding referenced fields remove fields that they themselves have added (not others) edit the basic properties of any field in those tables, e.g. the list of options in a dropdown box Additionally, actions not related to having develop privileges on a particular table are</description>
    </item>
    <item>
      <title>Junior Software Architect</title>
      <link>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/junior-software-architect/</link>
      <pubDate>Tue, 03 Oct 2023 13:00:00 +0100</pubDate>
      <guid>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/junior-software-architect/</guid>
      <description>Introduction A junior software architect can use practically all of the application building functionality of Agilebase. For example&#xA;Create workflows (including chasers, document generation) Set up APIs Add complex joins to views Create, edit and delete roles Assign privileges to roles or users up to the &amp;rsquo;edit&amp;rsquo; level Remove fields, views etc. created by anyone Edit the advanced properties of fields and views, including field visibility rules (confidentiality rules) for example Their only limitations are to do with managing the organisation as a whole, including other users.</description>
    </item>
    <item>
      <title>Software Architect</title>
      <link>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/software-architect/</link>
      <pubDate>Tue, 03 Oct 2023 13:00:00 +0100</pubDate>
      <guid>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/software-architect/</guid>
      <description>Introduction As well as building and disassembling applications, software architects can set company-wide settings and manage the account as a whole. They can&#xA;Add and remove users Edit company level settings (e.g. whether to enforce 2FA) Change table sensitive and personal data settings (GDPR) View and controls users&amp;rsquo; learner progression levels Assign privileges Don&amp;rsquo;t know where to start? If your company has just started building using Agilebase and you are reading this, then you&amp;rsquo;re probably feeling that you&amp;rsquo;ve been thrown in to the deep end!</description>
    </item>
  </channel>
</rss>
