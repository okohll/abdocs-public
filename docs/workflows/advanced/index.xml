<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>agileBase docs – Advanced information on Workflows</title>
    <link>https://docs.agilebase.co.uk/docs/workflows/advanced/</link>
    <description>Recent content in Advanced information on Workflows on agileBase docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 24 Apr 2020 16:40:00 +0100</lastBuildDate>
    
	  <atom:link href="https://docs.agilebase.co.uk/docs/workflows/advanced/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Chaining Workflows</title>
      <link>https://docs.agilebase.co.uk/docs/workflows/advanced/chaining-workflows/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/workflows/advanced/chaining-workflows/</guid>
      <description>
        
        
        &lt;h2 id=&#34;how-to-chain-workflows&#34;&gt;How to chain Workflows&lt;/h2&gt;
&lt;p&gt;To set the next workflow in a chain, simply set the appropriate view in the Chain workflow section of the &lt;em&gt;workflow&lt;/em&gt; page of the &lt;em&gt;manage&lt;/em&gt; tab. The next workflow in the chain will run as soon as the previous finishes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/workflow-chain.png&#34; alt=&#34;Configuring the PULL API&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;auto-connect-new-records-to-records-created-in-previous-chained-workflow-steps&#34;&gt;Auto-connect new records to records created in previous chained workflow steps&lt;/h2&gt;
&lt;p&gt;This option is available when using a workflow that creates new records. Say for example a workflow consists of two steps&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create an organisation&lt;/li&gt;
&lt;li&gt;Create a contact belonging to that organisation (assume there&amp;rsquo;s a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/basic-field-types/#relation&#34;&gt;relation field&lt;/a&gt; linking contacts to organisations)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When &amp;lsquo;auto-connect new records&amp;rsquo; is ticked on the workflow for step 2, the contact will automatically be linked to the organisation previously created by setting the relation field appropriately.&lt;/p&gt;
&lt;p&gt;This mechanism works no matter how many steps there are in a workflow - any records created are remembered and can be used to set values in subsequent steps. So for example&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create an organisation&lt;/li&gt;
&lt;li&gt;Create a site for the organisation, linked to it&lt;/li&gt;
&lt;li&gt;Create a contact linked to both site and organisation&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;would work too, so long as &amp;lsquo;auto-connect new records&amp;rsquo; is ticked for workflow steps 2 and 3.&lt;/p&gt;
&lt;h2 id=&#34;workflow-buttons-and-chained-workflows&#34;&gt;Workflow buttons and chained workflows&lt;/h2&gt;
&lt;p&gt;When a record is kicked off from a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/advanced/workflow-buttons/&#34;&gt;manual workflow button&lt;/a&gt;, it will only run on the single record the user has open on the screen, i.e. the record that the workflow button is in.&lt;/p&gt;
&lt;p&gt;If the workflow has further steps chained from it, you&amp;rsquo;ll most likely want those to only run on that record too.&lt;/p&gt;
&lt;p&gt;For example, imagine a workflow is made up of two chained steps&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;generate a document e.g. an invoice&lt;/li&gt;
&lt;li&gt;send that document to a recipient&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The workflow view may contain many records which could theoretically have a document generated for them. When the button is pressed to run step 1, it will only run on the single record on screen.&lt;/p&gt;
&lt;p&gt;agileBase will then pass the ID of that record through to the next workflow step to act as a filter. i.e. &amp;lsquo;send that document to a receipient&amp;rsquo; will only send the individual document which has just been created.&lt;/p&gt;
&lt;p&gt;This mechanism works until any workflow step creates a new record. When that happens, it&amp;rsquo;s unclear whether subsequent steps should run on the original record or the newly created one, so the ID won&amp;rsquo;t be passed through to following steps and you&amp;rsquo;ll have to manage things manually, e.g. using flagging as below.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This behaviour can be manually disabled by un-ticking the option &lt;em&gt;Make subsequent workflow steps act on the same record as this one&lt;/em&gt;, which will then cause the next chained workflow to always act on all records in its view.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;using-hidden-flagging-fields&#34;&gt;Using hidden &amp;ldquo;flagging&amp;rdquo; fields&lt;/h2&gt;
&lt;p&gt;It is sometimes necessary to &lt;strong&gt;find&lt;/strong&gt; the source record when chaining workflows.&lt;/p&gt;
&lt;p&gt;A trick to allow you to find the appropriate record is to use and set a flag field in the source table.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use an Update Workflow to set the flag to True&lt;/li&gt;
&lt;li&gt;Other workflows can join to this table and filter by &lt;em&gt;flag=true&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Finally, remember to set the flag to false as the last step in the chain, so that it is not inadvertently included in the next run.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;visualising-linked-workflows&#34;&gt;Visualising linked workflows&lt;/h2&gt;
&lt;p&gt;We’ve added one more thing to the system to make working with these multi-step workflows easier. When you click on a workflow step in the admin interface, it will colour all preceding steps (if any) in green, fading to lighter green the further back they go. Similarly all future chained steps are marked in blue, fading to light blue the further forward they are in the chain.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/workflow-recursive.png&#34; alt=&#34;Configuring the PULL API&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Recursive Workflows</title>
      <link>https://docs.agilebase.co.uk/docs/workflows/advanced/recursive-workflows/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/workflows/advanced/recursive-workflows/</guid>
      <description>
        
        
        &lt;p&gt;Recursion is a rather heavyweight feature of the workflow capabilities of the agileBase platform.&lt;/p&gt;
&lt;p&gt;If you’re interested in a bit of maths and want to know what that means, there’s a great &lt;a href=&#34;https://www.khanacademy.org/computing/computer-science/algorithms/recursive-algorithms/a/recursion&#34;&gt;tutorial about the concept at the Khan Academy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If not, never mind, the takeaway is it allows an administrator to set up workflows that weren’t possible before, particularly where you have networks of people or things. For example, if your CRM links people who know each other, you could create a list of all people 1 step removed, 2 steps etc.&lt;/p&gt;
&lt;p&gt;More generally, any calculation with a repetitive step that depends on the results of the previous repetition is recursive. For example, solving sudokus or to some extent crosswords. In fact, we have a sudoku solver as one of our demos.&lt;/p&gt;
&lt;h2 id=&#34;worked-example--an-ingredients-declaration&#34;&gt;Worked example – an ingredients declaration&lt;/h2&gt;
&lt;p&gt;Here’s an example that may be a useful pattern for reference. We have a recipe with quantities of each ingredient. However, an ingredient may itself also be a recipe containing other ingredients. We wish to calculate an ‘ingredients declaration’ which has a list of all ‘raw ingredients’ at the end of the chain i.e. those with no recipe and their percentages in the initial recipe.&lt;/p&gt;
&lt;p&gt;This can (and has) been done with a some linked workflows including a couple of recursive steps. Here’s the logic (not including technical implementation details).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Step 1&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Firstly, with for our main recipe (let’s call it Tom Yum Soup), look at all the direct ingredients and make a copy list, we’ll call it the &lt;em&gt;exploded ingredients&lt;/em&gt;. After this step it will just be exactly the same ingredients as the main list, but later on we’ll recurse and add ingredients of ingredients.&lt;/p&gt;
&lt;p&gt;In agileBase parlance, a workflow will copy all the items from an &lt;em&gt;ingredient lines&lt;/em&gt; table to an &lt;em&gt;exploded ingredient lines&lt;/em&gt; table. Each exploded ingredient line will have&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a link to the main recipe, i.e. Tom Yum Soup&lt;/li&gt;
&lt;li&gt;a link to it’s corresponding ingredient line e.g. 10 grams of chilli paste&lt;/li&gt;
&lt;li&gt;a link to the ‘parent exploded line’, which will just be empty in this first step&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Step 2&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Go through each of the exploded ingredient lines. For each one, if the ingredient is itself a recipe, add lines for each of it’s ingredients, setting&lt;/p&gt;
&lt;p&gt;main recipe = the same main recipe as the existing exploded line, i.e. Tom Yum Soup
link to parent ingredient line = the line we’re looking at e.g. 10 grams chilli paste
link to ingredient line = e.g. 7 grams crushed chillies
Now recurse and do step 2 again, for any of the new exploded ingredient lines that are themselves recipes. Repeat 2 as many times as are necessary until there are no new lines which are recipes. &lt;strong&gt;This is the key step – after this you’ll have a complete list of raw ingredients.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To make agileBase do that, simply tick the &lt;em&gt;recursive&lt;/em&gt; checkbox in the view’s workflow section. It will repeat the step until the view contains no records.&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Step 3&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The only thing left is to fill in the percentages. This involves a similar logic – bootstrap by first filling in percentages copied from the direct ingredients of the main recipe, then in a new workflow calculate the percentage of sub-ingredients by multiplying the proportion of the main ingredient by the percentage in the sub-ingredient. So for example if our Tom Yum is 2% chilli paste, which contains 70% crushed chillies, the percentage of crushed chillies in the Tom Yum is 0.02 x 70 = 1.4%.&lt;/p&gt;
&lt;p&gt;When implementing, there are a couple of other details to take into consideration, e.g. how to mark each exploded line as ‘processed’ so you don’t keep on re-calculating them. We do that with a counter. You also have to deal with the mechanics of things like what to do if a recipe changes e.g. an ingredient is deleted – another recursive workflow will go through and delete all exploded lines including sub-ingredients.&lt;/p&gt;
&lt;p&gt;If you’d like to see a full implementation details for this example, please let us know and we can take you through it on our demo system.&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Step 4&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Finally, the ingredient declaration to e.g. go on a label can be calculated by joining together the names of all the raw ingredients i.e. the exploded ingredients that aren’t themselves recipes, along with their percentages.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Running on record creation or load</title>
      <link>https://docs.agilebase.co.uk/docs/workflows/advanced/workflow-on-create/</link>
      <pubDate>Tue, 31 Aug 2021 16:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/workflows/advanced/workflow-on-create/</guid>
      <description>
        
        
        &lt;p&gt;This can be set up in the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/#when-a-records-created-run-this-workflow&#34;&gt;table options&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Workflows Buttons</title>
      <link>https://docs.agilebase.co.uk/docs/workflows/advanced/workflow-buttons/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/workflows/advanced/workflow-buttons/</guid>
      <description>
        
        
        &lt;p&gt;Some workflows need to be run on an adhoc basis, initiated by a user.
In these instances it can be useful to assign the Workflow to run behind a Button.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;N.b. In both cases below it is necessary for the Workflow to marked as Manual.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;workflow-buttons-on-a-form&#34;&gt;Workflow Buttons on a Form&lt;/h2&gt;
&lt;p&gt;To add the Workflow button to a Table&amp;rsquo;s form simply create a new field of type Cross Reference with the workflow as the source.
When the Workflow is run, it will be filtered by the Id of the record. (You may wish read up about &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/advanced/chaining-workflows/&#34;&gt;Chaining Workflows&lt;/a&gt; )
It is often necessary to put some thought in to the visibility of the button - it can be confusing to the user that a button is present when it does nothing due to filters they cann not know about.&lt;/p&gt;
&lt;h2 id=&#34;workflow-buttons-on-views&#34;&gt;Workflow Buttons on Views&lt;/h2&gt;
&lt;p&gt;Some Manual workflows are more appropriately run on a number of records. As such the ability to run them is likely to be associated to a list presented in a view.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create the workflow view&lt;/li&gt;
&lt;li&gt;Find or create a view we&amp;rsquo;ll call &amp;lsquo;display view&amp;rsquo;, which displays an appropriate list of records - most likely this will show contain the same filters as the workflow view, so it shows the same records to the user.&lt;/li&gt;
&lt;li&gt;In the display view, use the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/advanced/chaining-workflows/&#34;&gt;Chain Workflows&lt;/a&gt; functionality. Choose the workflow view.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When the user opens the display view, a workflow button will appear at the top of the screen. Pressing this will run the workflow.&lt;/p&gt;
&lt;p&gt;On completion, the user will be shown the number of records that were affected by the workflow run e.g. created or updated, along with an option to see the any log messages, which can be useful to check for errors.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
