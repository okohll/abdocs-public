<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>agileBase docs – Docs</title>
    <link>https://docs.agilebase.co.uk/docs/</link>
    <description>Recent content in Docs on agileBase docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 18 Apr 2020 16:57:55 +0100</lastBuildDate>
    
	  <atom:link href="https://docs.agilebase.co.uk/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Quickstart: Creating Tiles</title>
      <link>https://docs.agilebase.co.uk/quickstart/tiles/</link>
      <pubDate>Sat, 18 Apr 2020 16:57:55 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/quickstart/tiles/</guid>
      <description>
        
        
        &lt;p&gt;The first thing we&amp;rsquo;ll do is create a &amp;lsquo;CRM&amp;rsquo; tile which will act as the entry point to our simple application.&lt;/p&gt;
&lt;p&gt;Follow the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/#creating-a-tile&#34;&gt;creating a tile&lt;/a&gt; section to do so.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Introduction: What is low code / no code?</title>
      <link>https://docs.agilebase.co.uk/introduction/what-is-no-code/</link>
      <pubDate>Sat, 18 Apr 2020 16:57:55 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/introduction/what-is-no-code/</guid>
      <description>
        
        
        &lt;p&gt;Over the last two years low code / no code software has appeared to burst onto the scene from nowhere. The truth however is a bit less spectacular. Low code / no code platforms have been in development under the radar for at least a decade. What has changed now is the promise has become a reality.&lt;/p&gt;
&lt;p&gt;Low code / no code promised to give users the power to produce bespoke systems, rather than have to rely on developers. For the last forty years off the shelf software was the only real alternative to bespoke development but over that time it gained a reputation for being inflexible and bloated.&lt;/p&gt;
&lt;p&gt;Low code / no code has matured into a viable alternative. A few platforms have proved they are fast, robust and powerful.&lt;/p&gt;
&lt;p&gt;Business teams can build solutions that actually work, that are the right size for them, that reflect their language and that can be adapted in real time as the business evolves. Even on really small budgets.&lt;/p&gt;
&lt;p&gt;Low code / no code platforms come in many flavours and have been designed to tackle different problems.&lt;/p&gt;
&lt;p&gt;agileBase has been specifically designed to build back offices for ambitious businesses.&lt;/p&gt;
&lt;p&gt;You can start small with a quick prototype, build this over the years into a full blown &lt;a href=&#34;https://en.wikipedia.org/wiki/Enterprise_resource_planning&#34;&gt;ERP&lt;/a&gt; system and even use it to act as the hub for all your software via its built in &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;API Creator&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Introduction: What is a back office system?</title>
      <link>https://docs.agilebase.co.uk/introduction/what-is-a-back-office-system/</link>
      <pubDate>Mon, 22 Jun 2020 09:57:55 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/introduction/what-is-a-back-office-system/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Back-office_software&#34;&gt;Back-office software&lt;/a&gt; solutions evolved with the emergence of cloud-based software as a service (SaaS) as a way of distinguishing them from front-office software, (which typically refers to software used for processes related to things like marketing, sales, interaction tracking, project management and other customer-facing activities).&lt;/p&gt;
&lt;p&gt;Whilst agileBase is widely used as front-office platform our unique strength is in our ability to support not only this front end but also the back-office.&lt;/p&gt;
&lt;p&gt;Because of the power and flexibility of agileBase there are a really wide range of business processes that can be successfully managed with the platform across all sectors, manufacturing and service related items.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supplier Approval&lt;/li&gt;
&lt;li&gt;New Product Development (NPD)&lt;/li&gt;
&lt;li&gt;Project Management&lt;/li&gt;
&lt;li&gt;Customer Support&lt;/li&gt;
&lt;li&gt;Continuous Improvement Management&lt;/li&gt;
&lt;li&gt;HR&lt;/li&gt;
&lt;li&gt;Staff Training&lt;/li&gt;
&lt;li&gt;Project Portfolio Management&lt;/li&gt;
&lt;li&gt;Order Processing&lt;/li&gt;
&lt;li&gt;Billing&lt;/li&gt;
&lt;li&gt;Interaction Tracking&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SaaS platforms give organisations a way to simplify and streamline back-office management functions, particularly for companies with multiple locations.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 2FA setup</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/2fa-setup/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/2fa-setup/</guid>
      <description>
        
        
        &lt;h2 id=&#34;what-is-two-factor-authentication&#34;&gt;What is two factor authentication?&lt;/h2&gt;
&lt;p&gt;Simply put, it helps to keep your company’s data more secure, to stop outsiders stealing it, editing or even deleting it.&lt;/p&gt;
&lt;p&gt;When someone logs in from a new device or location, the system will prompt them for a code sent to or generated by their phone, to prove their identity.&lt;/p&gt;
&lt;p&gt;If you’d like to dive into more detail, check out this video from authy.com: &lt;a href=&#34;https://www.youtube.com/watch?v=ds_TANz4n3U&amp;amp;feature=youtu.be&#34;&gt;https://www.youtube.com/watch?v=ds_TANz4n3U&amp;amp;feature=youtu.be&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-long-does-this-take-to-set-up&#34;&gt;How long does this take to set up?&lt;/h2&gt;
&lt;p&gt;No more than a minute or two. It’s a really simple set up process. Here&amp;rsquo;s a 60 second video showing how to do it.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/lGqp6oDVUF4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;This example shows an iPhone but it’s the same process with an Android phone - just install the Authenticator app from the Google Play store.&lt;/p&gt;
&lt;p&gt;Setup only needs to be done once. From then on you don’t need to do anything apart from open the app when asked. The app will automatically generate and display a code without any need for you to do anything.&lt;/p&gt;
&lt;p&gt;To kick off the process&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click your user icon at the top right of the screen&lt;/li&gt;
&lt;li&gt;Select &amp;lsquo;edit profile&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Tick &amp;lsquo;enable two factor authentication&amp;rsquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;what-if-i-cant-use-a-smartphone&#34;&gt;What if I can’t use a smartphone?&lt;/h2&gt;
&lt;p&gt;If you don’t use a smartphone at work, that’s no problem. You can use an app on your computer - in fact many people find that more convenient than using a phone. Please ask your system administrator how to set things up and they’ll give you a hand.&lt;/p&gt;
&lt;h2 id=&#34;when-should-i-set-this-up&#34;&gt;When should I set this up?&lt;/h2&gt;
&lt;p&gt;Now!&lt;/p&gt;
&lt;p&gt;It’s never a bad time to upgrade your data security and privacy protection measures. If you’ve not already set up 2FA, agileBase will prompt you to do so once a week.&lt;/p&gt;
&lt;p&gt;However, you can do so at any time: click your user icon at the top right of the screen, select &amp;lsquo;edit profile&amp;rsquo; and tick &amp;lsquo;enable two factor authentication&amp;rsquo;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Quickstart: Adding tables</title>
      <link>https://docs.agilebase.co.uk/quickstart/tables/</link>
      <pubDate>Sat, 18 Apr 2020 16:57:55 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/quickstart/tables/</guid>
      <description>
        
        
        &lt;p&gt;Now we will create three tables to store our data, called&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;organisations&lt;/li&gt;
&lt;li&gt;sites&lt;/li&gt;
&lt;li&gt;contacts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This demonstrates that you can use tables to link related data (we&amp;rsquo;ll get to the links in a bit).&lt;/p&gt;
&lt;p&gt;Organisations will contain company names and basic details&lt;/p&gt;
&lt;p&gt;Sites will contain a list of addresses, because we may want allow an organisation to have more than one address&lt;/p&gt;
&lt;p&gt;Contacts will contain a list of people, each linked to an organisation and optionally a site.&lt;/p&gt;
&lt;p&gt;Separating the data into three tables lets us create these &amp;lsquo;one-to-many&amp;rsquo; relationships, where one organisation can have many sites and contacts.&lt;/p&gt;
&lt;p&gt;Don&amp;rsquo;t worry about the relationships between tables at this stage, the first thing to do is just to create those three tables and leave them empty for now.&lt;/p&gt;
&lt;p&gt;Use the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/adding-and-removing/&#34;&gt;tables&lt;/a&gt; page for instructions on creating a table.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Community Users</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/community-users/</link>
      <pubDate>Fri, 05 Nov 2021 12:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/community-users/</guid>
      <description>
        
        
        &lt;p&gt;agileBase is primarily a platform for building back office systems for employees (or members of the organisation) to use.&lt;/p&gt;
&lt;p&gt;However, it&amp;rsquo;s common to allow access to people outside the organisation to perform limited data entry tasks. For example, you may wish your suppliers to be able to upload certificates of conformances to items they sell you, or you may have a large workforce of contractors who you require to fill in timesheets.&lt;/p&gt;
&lt;p&gt;It may be that you don&amp;rsquo;t wish to supply each person a full agileBase license because&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;there will be a large number of them, so there&amp;rsquo;ll be management and cost issues&lt;/li&gt;
&lt;li&gt;you wish to restrict what they can do in the system further than can be accomplished with roles and privileges&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Community Users mechanism allows this.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Community Users have limited access (described below), with subscriptions which are significantly less costly and must be purchased in bulk. Once a block of community users is purchased, you can set up and remove as many as you need within the upper limit of that block.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;validity&#34;&gt;Validity&lt;/h2&gt;
&lt;p&gt;For a Community User subscription to apply, a person must be one of&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a &lt;em&gt;supplier&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;a &lt;em&gt;contractor&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;or a &lt;em&gt;member of the public&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So this mechanism is not applicable to employees of the company (or a parent company or subsidiary).&lt;/p&gt;
&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;
&lt;h3 id=&#34;configuring-a-community-of-users&#34;&gt;Configuring a community of users&lt;/h3&gt;
&lt;p&gt;To set up a new community of a certain type, a role must be created for them. The role privileges will determine which tables they have access to.&lt;/p&gt;
&lt;p&gt;Each community user must be a member of that single role only - no additional roles or privileges can be applied.&lt;/p&gt;
&lt;p&gt;Different communities of users can be created by creating different roles. A separate block of subscriptions must be purchased for each role created. Therefore you can have multiple communities, for example one for members of the public and another for contractors, or two different types of contractor.&lt;/p&gt;
&lt;p&gt;When setting up the role, tick the &amp;lsquo;members are community users&amp;rsquo; tickbox. Then create a user and assign them to that role.&lt;/p&gt;
&lt;h2 id=&#34;functional-restrictions&#34;&gt;Functional Restrictions&lt;/h2&gt;
&lt;p&gt;The following restrictions appropriate to users of an outside community are applied.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a community users role can be set to allow VIEW access to up to 10 tables, plus EDIT privileges on up to 3 additional tables&lt;/li&gt;
&lt;li&gt;for the 3 tables which allow editing, community users can only see and edit records they themselves have created. All records from read-only tables can be seen.
&lt;ul&gt;
&lt;li&gt;for example, a user may have read-only access to a list of companies. Against each company, they can add and edit timesheet records&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;community users only see comments added by themselves or specifically sent to them (comments are commonly used for internal company discussions)&lt;/li&gt;
&lt;li&gt;a community user can have up to 6 tiles on their homepage&lt;/li&gt;
&lt;li&gt;the homepage is fixed for community users, they can&amp;rsquo;t add or remove tiles&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further, community users are unable to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;export data&lt;/li&gt;
&lt;li&gt;create charts&lt;/li&gt;
&lt;li&gt;unlock locked fields or records&lt;/li&gt;
&lt;li&gt;bulk edit&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Together, all of these measures will help protect data in the organisation whilst simplifying the user interface, allowing people from outside to be able to usefully carry out work, without having to go through the expense of creating or purchasing dedicated applications for them.&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Introduction: Why use agileBase?</title>
      <link>https://docs.agilebase.co.uk/introduction/why-use-agilebase/</link>
      <pubDate>Mon, 22 Jun 2020 09:57:55 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/introduction/why-use-agilebase/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/platform.jpg&#34; alt=&#34;agileBase banner&#34;&gt;&lt;/p&gt;
&lt;p&gt;agileBase has been created with some important aims in mind&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;to create software that people find enjoyable to use, which manifests in many ways, most obviously the attractive and colourful user interface, but also because it can match user&amp;rsquo;s requirements exactly&lt;/li&gt;
&lt;li&gt;to support the full ambitions of business owners. It&amp;rsquo;s simple to get started but the platform has a very high &lt;em&gt;technical ceiling&lt;/em&gt; - there&amp;rsquo;s not much you can&amp;rsquo;t accomplish&lt;/li&gt;
&lt;li&gt;to make the most out of an organisation workforce&amp;rsquo;s perhaps un-tapped skills and experience, allowing people to take full ownership of their own areas of their business&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Policies</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/policies/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/policies/</guid>
      <description>
        
        
        &lt;h2 id=&#34;backups&#34;&gt;Backups&lt;/h2&gt;
&lt;p&gt;Data backups are performed across the stack of technology, from server down to databases and file storage.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Database backups are taken daily and hosted in the European Union by Amazon. Older backups transition to &lt;a href=&#34;https://aws.amazon.com/glacier/&#34;&gt;Amazon Glacier&lt;/a&gt; and are kept for 200 days - this allows a balance between the practical necessity of allowing rollbacks to a certain point in time, whilst not storing data for an unnecessarily long period, to comply with the GDPR.
By policy, backups under 100 days old are read-only and un-deletable, so will always be available in the case of attacks like ransomware.
These backups are also encrypted so that Amazon has no access to the data within then.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/warm-standby.html&#34;&gt;Continuous archiving &lt;/a&gt; of the database is also enabled, to transfer data to a &amp;lsquo;hot standby&amp;rsquo; server using streaming replication, allowing immediate failover should the primary database fail for any reason.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;agileBase content (uploaded files, custom templates etc.) also have snapshots taken daily, kept for 200 days in a separate EU location.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In addition to these content-only backups, snapshots of the totality of each key server in the infrastructure (including configuration), are run daily using the Linode backup service &lt;a href=&#34;https://www.linode.com/products/backups/&#34;&gt;https://www.linode.com/products/backups/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The backup and recovery process is monitored and tested regularly.&lt;/p&gt;
&lt;h3 id=&#34;retrieval&#34;&gt;Retrieval&lt;/h3&gt;
&lt;p&gt;There may be a charge for retrieval of customer data from backup, to cover our costs. The data will be restored to a separate instance of agileBase available at a different URL, which a customer can look at to compare data. If necessary, data can then be extracted from one and loaded into the other.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Please be aware that depending on needs, this may be a complex process due to the fact that other data in the live system may have changed since the backup. A simple overwrite of existing data may not be the best option.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;privacy-policy&#34;&gt;Privacy policy&lt;/h2&gt;
&lt;p&gt;agileBase Ltd is funded directly by the customers we provide services to, we do not have any other business model, particularly we do not resell any data.&lt;/p&gt;
&lt;p&gt;Our privacy policy is available here: &lt;a href=&#34;https://agilechilli.com/help-centre/agilebase/privacy-policy/&#34;&gt;https://agilechilli.com/help-centre/agilebase/privacy-policy/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;gdpr-policy&#34;&gt;GDPR Policy&lt;/h2&gt;
&lt;p&gt;An overview of our GDPR policy is available &lt;a href=&#34;https://docs.agilebase.co.uk/gdpr-overview.pdf&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/gdpr-overview.pdf&#34;&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/gdpr-compliance-cycle.png&#34; alt=&#34;GDPR Compliance Cycle&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;data-protection-and-disaster-recovery&#34;&gt;Data Protection and Disaster Recovery&lt;/h2&gt;
&lt;p&gt;Full details of our processes and plans are available to customers and relevant parties on request.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Relational Database Concepts</title>
      <link>https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/</guid>
      <description>
        
        
        &lt;p&gt;Before diving into the details of building applications, starting with tables, let&amp;rsquo;s take a step back and learn some background information about databases, including what a table is. If you&amp;rsquo;re familiar with these concepts, feel free to skip this section.&lt;/p&gt;
&lt;p&gt;When building back office software with agileBase, a large amount of what we&amp;rsquo;ll be doing is building database structures, to store user-entered data. agileBase takes care of creating the user interface to allow users to use these structures automatically, e.g. to search for data, add and edit it.&lt;/p&gt;
&lt;p&gt;You will find many articles explaining relational databases if you look for them on the internet. Most will introduce SQL, the language used to work with databases. It&amp;rsquo;s not necessary to learn that as agileBase generates it automatically behind the scenes, but the higher level concepts are useful to grasp.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a YouTube video with a good introduction.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/NvrpuBAMddw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;If you prefer reading, here are a couple of examples.&lt;/p&gt;
&lt;h2 id=&#34;simple-example---what-is-a-relation&#34;&gt;Simple example - what is a relation?&lt;/h2&gt;
&lt;p&gt;Imagine we want a place to store records of suppliers to our business. This could be the start of a supplier management system to compare companies based on quality, accreditation levels and price for example, or to carry out supplier approval processes.&lt;/p&gt;
&lt;p&gt;To do this we need just one table &amp;lsquo;suppliers&amp;rsquo; which would have fields in such as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;company name&lt;/li&gt;
&lt;li&gt;a few address fields&lt;/li&gt;
&lt;li&gt;phone number&lt;/li&gt;
&lt;li&gt;website&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;etc.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s just like creating a spreadsheet with column headings across the top for those fields. You can then add a row for each supplier you record.&lt;/p&gt;
&lt;p&gt;Now, if we communicate with our suppliers, we may want to store the contact details of a few key people at each supplier.&lt;/p&gt;
&lt;p&gt;Typically, a naive spreadsheet user would add a few more columns (fields in database parlance), things like Contact Name 1, Phone 1, Email 1, Contact Name 2, Phone 2, Email 2. As you can imagine if there are more than one or two contacts, it would become pretty cumbersome and difficult to maintain.&lt;/p&gt;
&lt;p&gt;With our database we can easily do a lot better and create a separate table of contacts that links to the suppliers table - in fact it &lt;strong&gt;relates&lt;/strong&gt; to it. That&amp;rsquo;s why relational databases are so called, just because they&amp;rsquo;re very good at dealing with relations between tables.&lt;/p&gt;
&lt;p&gt;So we have our contact table, maybe with fields&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contact name&lt;/li&gt;
&lt;li&gt;Role&lt;/li&gt;
&lt;li&gt;Direct Line number&lt;/li&gt;
&lt;li&gt;Email address&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;etc.&lt;/p&gt;
&lt;p&gt;To connect them we add another field of a special type, called a &lt;em&gt;relation&lt;/em&gt;. It can be called Company, but rather than storing the company name again (we already have stored the company name in the suppliers table), it will be a link to a particular company. Don&amp;rsquo;t worry about how that works behind the scenes, just know that the Company relation links to a supplier.&lt;/p&gt;
&lt;p&gt;So now we have&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/join.png&#34; alt=&#34;join&#34;&gt;&lt;/p&gt;
&lt;p&gt;We can now add as many contacts as we like to a supplier. And if we decide to store some more data about each contact, maybe a link to their LinkedIn profile for example, we can add that field to the contacts table and it will automatically be there for all contacts (as opposed to our naive spreadsheet example).&lt;/p&gt;
&lt;h2 id=&#34;a-more-complex-example&#34;&gt;A more complex example&lt;/h2&gt;
&lt;p&gt;That&amp;rsquo;s a good start. Moving on, there&amp;rsquo;s one more type of relation it&amp;rsquo;s useful to understand - the &amp;lsquo;many to many&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;Our link between contacts and suppliers above is called a &amp;lsquo;one to many&amp;rsquo; (or sometimes many to one) relationship. The reason is simply that one supplier can have many contacts attached.&lt;/p&gt;
&lt;p&gt;What happens if we think about a more complex case? Suppose our suppliers supply us with raw materials, for example ingredients and packaging. We may want to record which materials each supplier supplies.&lt;/p&gt;
&lt;p&gt;We could set it up as above, where we have a raw materials table. A raw material has a relation field linking it to a supplier, so one supplier can supply many materials.&lt;/p&gt;
&lt;p&gt;However, what happens if a particular raw material is supplied by more than one company? You may have a primary supplier, then various fallbacks for example.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;d have to create a new raw material record for each supplier. That would be ok if our raw material record consisted of nothing more than a name and maybe a price, but there could be dozens or hundreds of fields added as we build up our system - to store nutritional information, chemical properties, allergens, etc. etc. That would mean lots of duplication to keep track of. And if we want to later build recipes which use our raw materials, we&amp;rsquo;d probably just want a recipe to refer to &amp;lsquo;flour&amp;rsquo;, not &amp;lsquo;flour from Supplier X&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;The solution is to create a &lt;strong&gt;many to many&lt;/strong&gt; relation, where one supplier can provide many raw materials but also a single raw material can be linked to many different suppliers.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s no new field type to get to know, we just use the standard one to many relation we&amp;rsquo;ve already learned about in a clever new way - we use two of them, plus a join table. The structure looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/junction-table.png&#34; alt=&#34;junction table&#34;&gt;&lt;/p&gt;
&lt;p&gt;The table in the middle, Links, is called a join table, or junction table.&lt;/p&gt;
&lt;p&gt;It has a normal relation field linking it to suppliers, and also one linking to raw materials. By adding a record to the links table, we can join any raw material to any supplier. A supplier can then have lots of raw materials, but an raw material can also have lots of suppliers.&lt;/p&gt;
&lt;p&gt;The video above also explains this type of relation if you&amp;rsquo;ve not already watched it.&lt;/p&gt;
&lt;h3 id=&#34;when-to-use-the-many-to-many&#34;&gt;When to use the many to many&lt;/h3&gt;
&lt;p&gt;You may have a niggling thought at the back of your mind: how do I know whether it&amp;rsquo;s best to use a simple one to many relation, or a more complex many to many setup? Surely I could use many to many for contacts and suppliers too? A single contact may be associated with more than one supplier, for example if they&amp;rsquo;re a contractor, or if they move jobs.&lt;/p&gt;
&lt;p&gt;The answer to that just comes down to your judgement. Although agileBase creates a friendly, easy to use interface on top of the data structure, the many to many does add complexity. So it&amp;rsquo;s a bit of a trade-off. However the advantage of a no-code system like agileBase is that you can rapidly try out ideas and see which one works best. As time goes on you&amp;rsquo;ll get a sense of what works best in which situation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you do want to learn more about this topic, it&amp;rsquo;s called &amp;lsquo;database normalisation&amp;rsquo; and there&amp;rsquo;s plenty written about it!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;I hope that gives you a bit of background about what a table is, what a relation is and how they work together.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A table is a store of data about a single concept e.g. a company or contact&lt;/li&gt;
&lt;li&gt;A relation field links tables together e.g. a contact belongs to a company&lt;/li&gt;
&lt;li&gt;Many to many relations (created with a join table) are sometimes useful. They allow us to link many records of one table to many of another.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That&amp;rsquo;s pretty much all of the most important information you&amp;rsquo;ll need to know about data structures. The rest of the documentation will show you how to create applications practically. Have fun!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Roles</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/</guid>
      <description>
        
        
        &lt;p&gt;The primary purpose of roles is to apply privileges to groups of users, rather than applying them individually. That makes managing large numbers of users easier and also more secure as it&amp;rsquo;s easy to see which privileges each type of user has and which they don&amp;rsquo;t.&lt;/p&gt;
&lt;p&gt;Roles have some other important uses, such as multi-tenanting, described below.&lt;/p&gt;
&lt;h2 id=&#34;creating-a-role&#34;&gt;Creating a role&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Expand the &lt;em&gt;Administration&lt;/em&gt; menu in the lefthand sidebar&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;roles&lt;/em&gt;. You&amp;rsquo;ll see a list of existing roles&lt;/li&gt;
&lt;li&gt;Click the plus button in the toolbar at the top&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You should now see an editing screen with the details of the role you just created. You can give it a name and there are a few options:
&lt;img src=&#34;https://docs.agilebase.co.uk/role-details.png&#34; alt=&#34;Role details&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Allow Export&lt;/strong&gt;&lt;br&gt;
Referrs to exporting to spreadsheet - see &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/exporting-to-spreadsheet/&#34;&gt;spreadsheet exports&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Allow global editing&lt;/strong&gt;
Users with &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/&#34;&gt;edit privileges&lt;/a&gt; on a particular table, when added to this role, will be able to perform global edits on the data.&lt;/p&gt;
&lt;p&gt;To perform a global edit, the user should&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;filter the view (by typing into the filter boxes at the top of each column) to narrow down the rows to those which should be edited&lt;/li&gt;
&lt;li&gt;double click on a column header in a view, to edit the data in that field. The field must be from the view&amp;rsquo;s parent table.&lt;/li&gt;
&lt;li&gt;click the &amp;lsquo;edit filtered&amp;rsquo; button which appears&lt;/li&gt;
&lt;li&gt;type in the value you want to apply and follow through the prompts&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;User Visibility&lt;/strong&gt; and &lt;strong&gt;Restrict Data Access&lt;/strong&gt;&lt;br&gt;
These are used to set up &lt;a href=&#34;#multi-tenanting&#34;&gt;multi-tenanting&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;members&#34;&gt;Members&lt;/h3&gt;
&lt;p&gt;Tick each user to add them to the role. Users will gain all the privileges defined by the role.&lt;/p&gt;
&lt;h3 id=&#34;privileges&#34;&gt;Privileges&lt;/h3&gt;
&lt;p&gt;Select the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/&#34;&gt;table privileges&lt;/a&gt; which will apply to members.&lt;/p&gt;
&lt;p&gt;Privileges are additive - if a user is a member of multiple roles, they gain all the privileges from each of those roles added together.&lt;/p&gt;
&lt;h2 id=&#34;multi-tenanting&#34;&gt;Multi-tenanting&lt;/h2&gt;
&lt;p&gt;Multi-tenanting is the ability to separate users into groups who can’t see each other’s data. This can be used for example to allow different sets of companies, clubs, or membership groups (or whatever the organisational group is) to use the same system features whilst remaining separate from each other.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Multi-tenanting is a powerful feature that can be used not just for customers to segragate data amongst their users.&lt;/p&gt;
&lt;p&gt;Partners can also use this facility if building software to widely market. In that case, each customer they sign up can very quickly be set up with their own private dataset, whilst the partner retains the ability to add features which will automatically apply to everyone.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To set up multi-tenanting:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;first &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/&#34;&gt;add a text field&lt;/a&gt; to all tables in the system for which you want data to be segragated. The field must be named the same in every table, for example&amp;rsquo;s sake here let&amp;rsquo;s assume it&amp;rsquo;s called &amp;lsquo;account name&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;Then create one role for each set of users who you want to segregate. We&amp;rsquo;ll assume there&amp;rsquo;s one called &amp;lsquo;Customer A&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;In the role details screen for the Customer A role, tick &lt;em&gt;user visibility&lt;/em&gt;. That means that users in this role won&amp;rsquo;t see users in other roles with the same option ticked. In other words, users from Customer A won&amp;rsquo;t be able to select Customer B or Customer C users when doing things like adding comments or assigning users to records.&lt;/li&gt;
&lt;li&gt;Under &lt;em&gt;restrict data access&lt;/em&gt; in the role details, enter &lt;code&gt;account name = Customer A&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finally, ensure the account name field is present in all views based on the table. When creating a view, any fields used for multi-tenanting will automatically be added but you may need to retro-fit any existing views.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This has two effects -&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;When a user assigned to the Customer A role creates a new record in one of the multi-tenanting tables, the account name field will automatically be populated with the value Customer A (as entered under &lt;em&gt;restrict data access&lt;/em&gt;). The field will be invisible to them - they won&amp;rsquo;t be able to see or edit the value.&lt;/li&gt;
&lt;li&gt;When looking at records in a view, a filter will be automatically applied so the user only sees records where account name = Customer A.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Users who &lt;strong&gt;aren&amp;rsquo;t&lt;/strong&gt; a member of the role will see the account name field in the data editing form and in views. This can be useful for allowing e.g. group managers to see all data.&lt;/p&gt;
&lt;p&gt;If any multi-tenanting roles are set up, then views which &lt;strong&gt;don&amp;rsquo;t&lt;/strong&gt; contain a multi-tenanting field will be marked in red in the administration interface, as a warning. If a multi-tenanting user loads one of these views, they will see all records. Typically, practically all views will need the multi-tenanting field to be present.&lt;/p&gt;
&lt;h3 id=&#34;complex-multi-tenanting&#34;&gt;Complex multi-tenanting&lt;/h3&gt;
&lt;h4 id=&#34;multi-level&#34;&gt;Multi-level&lt;/h4&gt;
&lt;p&gt;Users may be a member of more than one multi-tenanting role. For example you may use two multi-tenanting fields/roles, one for a company and another for a division. Members of a company role will be able to see data from all divisions in their company and members of both a company and a division role will only be able to see data for a single division.&lt;/p&gt;
&lt;h4 id=&#34;multi-account-via-multiple-roles&#34;&gt;Multi-account (via multiple roles)&lt;/h4&gt;
&lt;p&gt;It&amp;rsquo;s also possible for a user to be a member of multiple roles, all of which are set to multi-tenant on the same field, with different values. E.g. if a user is a member of Company A and Company B roles as in our example above, they will see data from those two companies when viewing records, but not Company C.&lt;/p&gt;
&lt;p&gt;This works best when the user has read-only privileges on the data, e.g. for a manager reporting on those two companies. They can view records but not add new records, as the system is unable to determine the value of the account name field to use.&lt;/p&gt;
&lt;h4 id=&#34;multi-account-via-_contains_-filtering&#34;&gt;Multi-account (via &lt;em&gt;contains&lt;/em&gt; filtering)&lt;/h4&gt;
&lt;p&gt;It&amp;rsquo;s also possible to define a role filter under &lt;em&gt;restrict data access&lt;/em&gt; with a &amp;lsquo;contains&amp;rsquo; rather than an &amp;lsquo;=&amp;rsquo; filter. You can then use a naming convension for your account name values to allow members of this role to see multiple accounts. As above, users of this role will need to be read-only on the data.&lt;/p&gt;
&lt;h4 id=&#34;api-setup&#34;&gt;API setup&lt;/h4&gt;
&lt;p&gt;In a multi-tenanting account, it&amp;rsquo;s possible to create new tenants, with users, by API, as opposed to the manual actions of an administrator. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/creating-user-accounts/&#34;&gt;Creating user accounts with the API&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;role-properties&#34;&gt;Role properties&lt;/h2&gt;
&lt;h3 id=&#34;brand-name-and-domain&#34;&gt;Brand name and domain&lt;/h3&gt;
&lt;p&gt;These two options allow system emails (password reset notification etc.) to come from a domain name of your choice and be branded with a particular &amp;lsquo;app&amp;rsquo; name. This can be useful if you&amp;rsquo;re creating a public-facing app using agileBase, rather than applications for your own staff.&lt;/p&gt;
&lt;p&gt;To allow the domain name to work, you&amp;rsquo;ll need to contact us to set it up - our server will need to be authorised to send email from your domain.&lt;/p&gt;
&lt;h3 id=&#34;custom-menus&#34;&gt;Custom menus&lt;/h3&gt;
&lt;p&gt;It’s possible to add custom menu items into the user menu (the one at the top right that appears if you click your user icon). That means if your company has specific help pages or process documentation relevant to your organisation or application, you can make them available from within agileBase.&lt;/p&gt;
&lt;p&gt;Each custom menu has a title, description and URL, which will be opened in a new tab when the menu item’s chosen.&lt;/p&gt;
&lt;p&gt;Simply add these into the &lt;strong&gt;menu title&lt;/strong&gt;, &lt;strong&gt;menu description&lt;/strong&gt; and &lt;strong&gt;menu URL&lt;/strong&gt; properties of a role. Assigning that role to a user will add the menu item to their profile menu.&lt;/p&gt;
&lt;p&gt;To add multiple menu items to a user or users, assign multiple roles, each with one menu item defined.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Quickstart: Adding some fields</title>
      <link>https://docs.agilebase.co.uk/quickstart/fields/</link>
      <pubDate>Sat, 18 Apr 2020 16:57:55 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/quickstart/fields/</guid>
      <description>
        
        
        &lt;p&gt;Now we have out three tables - organisations, sites and contacts, lets add some relevant fields to each.&lt;/p&gt;
&lt;p&gt;For example, in the organisations table, a text field &amp;lsquo;organisation name&amp;rsquo; would be an obvious starter. You could also add things like &amp;lsquo;website&amp;rsquo; and perhaps a number field to record annual turnover, should you be interested in that.&lt;/p&gt;
&lt;p&gt;Sites should include a few address fields and contacts can include a full name (or separate forename and surname fields) along with various fields for email address and other contact details.&lt;/p&gt;
&lt;p&gt;To add a field to a table, follow the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/&#34;&gt;fields&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Once the basic fields are added, here&amp;rsquo;s a key step: linking the tables together, so that the system knows that a contact belongs to an organisation &amp;amp; site and a site belongs to an organisation.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In the sites table, add a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/basic-field-types/#relation&#34;&gt;relation&lt;/a&gt; field, linking to the organisations table. For the display field, choose the &amp;lsquo;organisation name&amp;rsquo; or your equivalent.&lt;/li&gt;
&lt;li&gt;In the contacts table, add a relation field linking to the organisations table in a similar way&lt;/li&gt;
&lt;li&gt;Also in the contacts table, ad a relation field linking to the sites table. Use postcode or zip code as the display field.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Finally and optionally, we can add some tabs to the organisation table, so that the user can add view and edit sites and contacts when looking at an organisation:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In the organisations table, &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/&#34;&gt;add a tab&lt;/a&gt;. When selecting a table to use for the tab, choose sites&lt;/li&gt;
&lt;li&gt;Again in the organisations table, add another tab for contacts&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Privileges</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/</guid>
      <description>
        
        
        &lt;p&gt;In agileBase, there are three privilege levels, as well as a special ‘administrator’ privilege.&lt;/p&gt;
&lt;p&gt;The three privileges take effect per table, i.e. a user/role can have certain privileges on one table and different ones on another.&lt;/p&gt;
&lt;p&gt;Privileges are additive - if a user is a member of multiple roles, they gain all the privileges from each of those roles added together, plus any they may have individually assigned.&lt;/p&gt;
&lt;h2 id=&#34;privilege-levels&#34;&gt;Privilege levels&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;View&lt;/strong&gt;: ability to see data in a table&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Edit&lt;/strong&gt;: ability to create, edit and delete data in a table (create and delete subject to various table options)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Manage&lt;/strong&gt;: the privilege that allows you to use the &amp;lsquo;application building&amp;rsquo; features of agileBase, relating to a table. Namely the ability to
&lt;ul&gt;
&lt;li&gt;modify the structure, i.e. create/delete fields, tabs, change options etc.&lt;/li&gt;
&lt;li&gt;create, edit and delete views from the table, including creating charts, maps and word clouds.&lt;/li&gt;
&lt;li&gt;upload or create printout templates for views&lt;/li&gt;
&lt;li&gt;view usage statistics about a table&lt;/li&gt;
&lt;li&gt;Manage also allows some extended user features
&lt;ul&gt;
&lt;li&gt;delete any user&amp;rsquo;s comments from a table&lt;/li&gt;
&lt;li&gt;unlock locked records to allow editing (one at a time)&lt;/li&gt;
&lt;li&gt;override table options which would normally disallow adding/removing records from a table&lt;/li&gt;
&lt;li&gt;override options which would normally disallow exporting data to a spreadsheet&lt;/li&gt;
&lt;li&gt;import data from spreadsheet&lt;/li&gt;
&lt;li&gt;override options which would normally disallow global editing of data in the table&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally the &lt;strong&gt;administrator&lt;/strong&gt; privilege allows full permissions over the complete system. An administrator can create/remove users, roles, tables etc., as well as assign table privileges to any user, including themselves.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The administrator privilege is the only one that allows the user to add new tables.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Two Factor Authentication is required for any user with manage or administrator privileges&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;assigning-table-privileges&#34;&gt;Assigning table privileges&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Table privileges can be assigned to one or more users or roles from that table&amp;rsquo;s editing screen.&lt;/li&gt;
&lt;li&gt;From a user or role editing screen, privileges on one or more tables can be assigned&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The two methods are equivalent, whichever is the most convenient for a given purpose can be used.&lt;/p&gt;
&lt;p&gt;Managing privileges by role rather than by individual user is recommended. That makes managing large numbers of users easier and also more secure as it&amp;rsquo;s easy to see which privileges each type of user has and which they don&amp;rsquo;t.&lt;/p&gt;
&lt;p&gt;To assign one or more role or user privileges to a table:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Expand the &lt;em&gt;Build Tables&lt;/em&gt; section in the lefthand navigation&lt;/li&gt;
&lt;li&gt;Click a table&lt;/li&gt;
&lt;li&gt;Click the pencil (edit) icon in the top toolbar (or click a record to load the editing screen)&lt;/li&gt;
&lt;li&gt;Click the &lt;em&gt;manage&lt;/em&gt; tab at the bottom of the screen&lt;/li&gt;
&lt;li&gt;Open the &lt;em&gt;roles&lt;/em&gt; or &lt;em&gt;users&lt;/em&gt; section, then select or un-select any privileges required&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To assign one or more table privileges to a particular role or user:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Expand the &lt;em&gt;Administration&lt;/em&gt; section of the lefthand navigation&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;roles&lt;/em&gt; or &lt;em&gt;users&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Select the role or user to assign privileges to, then select or un-select any privileges required&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;assigning-the-administrator-privilege&#34;&gt;Assigning the administrator privilege&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Expand the &lt;em&gt;Administration&lt;/em&gt; section&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;users&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Select the user to make an administrator&lt;/li&gt;
&lt;li&gt;Open the &lt;em&gt;roles&lt;/em&gt; section&lt;/li&gt;
&lt;li&gt;Tick the role marked &lt;strong&gt;Grants administrative privileges&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;related-to-privileges&#34;&gt;Related to privileges&lt;/h2&gt;
&lt;p&gt;Database systems often have the concept of row level privileges. The equivalent in agileBase is the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/#multi-tenanting&#34;&gt;multi-tenanting&lt;/a&gt; system.&lt;/p&gt;
&lt;p&gt;Individual fields in a table can be locked or hidden, see the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#show-if-record-in-view&#34;&gt;field options&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Quickstart: Creating a view</title>
      <link>https://docs.agilebase.co.uk/quickstart/views/</link>
      <pubDate>Sat, 18 Apr 2020 16:57:55 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/quickstart/views/</guid>
      <description>
        
        
        &lt;p&gt;The last step is to add some views so users can add and edit data in our tables.&lt;/p&gt;
&lt;p&gt;From each of the three tables, &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/creating-a-view/&#34;&gt;create a view&lt;/a&gt; and place it in the CRM tile.&lt;/p&gt;
&lt;p&gt;We don&amp;rsquo;t need to do anything complex with the view or even edit any options. The simple act of creating it will allow users to see and edit all of the data.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s it. Enter the user interface (as opposed to the admin interface) and you&amp;rsquo;ll be able to add organisation, site and contact details to your heart&amp;rsquo;s content. Of course, to do anything really interesting with this data you will likely want to create extra tables to suit your own needs - maybe to add sales opportunities or invoices for example.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll leave that as an exercise for the reader, but please do get in touch for help and advice on your journey.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Introduction: Who can use it?</title>
      <link>https://docs.agilebase.co.uk/introduction/who-can-use-it/</link>
      <pubDate>Mon, 22 Jun 2020 09:57:55 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/introduction/who-can-use-it/</guid>
      <description>
        
        
        &lt;p&gt;Firstly, no formal programming experience is necessary.&lt;/p&gt;
&lt;p&gt;Often, people who are interested in building applications tend to be those who have created spreadsheets to run business processes but have become aware of the limitations and want to move to the next level.&lt;/p&gt;
&lt;p&gt;Following training, anyone with the requisite interest, ability and ambition can progress from making simple changes and additions to existing applications, to building complex applications&lt;/p&gt;
&lt;h2 id=&#34;citizen-developers&#34;&gt;Citizen Developers&lt;/h2&gt;
&lt;p&gt;People working within an organisation at any level can be trained in the technology and thought patterns necessary to build useful applications. Companies can therefore make the most of the abilities of their staff, that may currently be un-tapped.&lt;/p&gt;
&lt;h2 id=&#34;partners&#34;&gt;Partners&lt;/h2&gt;
&lt;p&gt;We are also building a network of partners who can act as consultants to organisations, kick-starting the application building process within an organisation and taking ownership of any large scale application(s).&lt;/p&gt;
&lt;p&gt;Partners can also use the platform to build their own multi-tenanted apps. These are applications which many different customers can log into and use. Each company&amp;rsquo;s data is of course separated from others, but the application itself is shared.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Adding and removing</title>
      <link>https://docs.agilebase.co.uk/docs/tables/adding-and-removing/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/adding-and-removing/</guid>
      <description>
        
        
        &lt;p&gt;A table is a store of data of a particular type e.g. a company, contact, product or invoice. Tables are the fundamental building blocks of an agileBase application.&lt;/p&gt;
&lt;h2 id=&#34;adding-a-table&#34;&gt;Adding a table&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Expand the &lt;em&gt;Build Tables&lt;/em&gt; menu in the lefthand sidebar&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;create a new table&lt;/em&gt; at the bottom of the list of existing tables&lt;/li&gt;
&lt;li&gt;Name the table&lt;/li&gt;
&lt;li&gt;If necessary, click the pencil icon in the toolbar to see the details of the table you just created.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;TODO: image&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can change the table&amp;rsquo;s name and add a longer description under &lt;strong&gt;Purpose&lt;/strong&gt;. This description will be used as help text in the user interface.&lt;/p&gt;
&lt;h3 id=&#34;naming-tables&#34;&gt;Naming tables&lt;/h3&gt;
&lt;p&gt;When naming a table, it&amp;rsquo;s best to use a plural form. Also avoid filler endings like &amp;lsquo;info&amp;rsquo; or &amp;lsquo;details&amp;rsquo;. So rather than &amp;lsquo;company info&amp;rsquo;, you might call a table &amp;lsquo;companies&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;The reason for this is that the user interface will automatically convert plural names into singular forms where appropriate. So for example if there&amp;rsquo;s a plus button on the screen to allow the user to add a new record in the table, it will automatically recognise the table and title the button Add Company.&lt;/p&gt;
&lt;p&gt;If you build a large system with lots of tables, you may find it a good idea to prefix table names using a numbering/lettering system e.g.
&lt;code&gt;a) table 1&lt;/code&gt;
&lt;code&gt;b) table 2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In the administrator interface, tables are listed alphabetically, so you can arrange the tables into a logical order with this method.&lt;/p&gt;
&lt;p&gt;The user interface will strip out any prefixes when displaying names to users, if they end with a closing bracket &lt;code&gt;)&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;removing-a-table&#34;&gt;Removing a table&lt;/h2&gt;
&lt;p&gt;Before removing a table, you first need to remove all views and fields.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not necessary to remove actual data records from the table first.&lt;/p&gt;
&lt;p&gt;A list of existing views is visible in the &lt;em&gt;manage&lt;/em&gt; tab of the table, at the top right. Visit each view and delete it.&lt;/p&gt;
&lt;p&gt;Then next to the table&amp;rsquo;s manage tab is the &lt;em&gt;fields&lt;/em&gt; tab. Delete all the existing fields from here.&lt;/p&gt;
&lt;p&gt;When deleting views and fields, you may find you have to first delete other views or fields they depend on. In complex systems there can be chains of objects that need to be deleted in order.&lt;/p&gt;
&lt;p&gt;Deleting is a destructive process so is not highly automated on purpose, to avoid accidental deletion. However at each stage you&amp;rsquo;ll be shown any dependencies which have to be removed first, so you can follow through the chain.&lt;/p&gt;
&lt;p&gt;Once all views and fields have been deleted, you may need to reload the table by choosing it from the list under &lt;em&gt;Build Tables&lt;/em&gt;. In the &lt;em&gt;manage&lt;/em&gt; tab, the &lt;em&gt;Delete Table&lt;/em&gt; button should now be enabled and you can click it to perform the final step of the deletion.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Exporting</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/exporting/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/exporting/</guid>
      <description>
        
        
        &lt;p&gt;Exporting to spreadsheet is only one way of getting data out of agileBase, but it is the most commonly used amongst everyday users. For less ad-hoc data transfers, such as integrations with third party systems involving incoming and/or outgoing data, the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;API&lt;/a&gt; can be used.&lt;/p&gt;
&lt;h2 id=&#34;allowing-exports&#34;&gt;Allowing exports&lt;/h2&gt;
&lt;p&gt;In order for a user to be allowed to export to spreadsheet, a number of critieria have to be matched, to suitably protect your organisation&amp;rsquo;s data.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The user must have &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/#two-factor-authentication&#34;&gt;Two Factor Authentication&lt;/a&gt; enabled&lt;/li&gt;
&lt;li&gt;The view to export from must have exporting enabled (it&amp;rsquo;s enabled by default). To do this
&lt;ul&gt;
&lt;li&gt;in the tiles interface, open the view in question, click your user icon at the top right and select &lt;em&gt;admin - edit view&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;tick &lt;em&gt;allow exports&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The user must also be a member of a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/&#34;&gt;role&lt;/a&gt; that allows exporting (disabled by default). To allow exporting for a role,
&lt;ul&gt;
&lt;li&gt;in the admin interface, expand the &lt;em&gt;Administration&lt;/em&gt; menu in the lefthand sidebar&lt;/li&gt;
&lt;li&gt;click &lt;em&gt;roles&lt;/em&gt; and select the role you want&lt;/li&gt;
&lt;li&gt;tick &lt;em&gt;allow exports&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A user with &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/&#34;&gt;manage privileges&lt;/a&gt; on the view&amp;rsquo;s parent table can bypass criteria 2 and 3. This privilege is not commonly applied to normal users.&lt;/p&gt;
&lt;h2 id=&#34;exporting&#34;&gt;Exporting&lt;/h2&gt;
&lt;p&gt;A user with the ability to export can do so by opening the view, clicking the print icon to the left and selecting &lt;em&gt;export to spreadsheet&lt;/em&gt; from the options at the top of the screen.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the user &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/filters/&#34;&gt;filters&lt;/a&gt; the data on screen before doing this, only the filtered data will be exported.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The resulting spreadsheet will be in Microsoft Excel format. The first sheet will be some metadata about the export, such as a timestamp, the name of the exporter and any filters applied. The second sheet will be the actual data.&lt;/p&gt;
&lt;p&gt;Column A in the data sheet will be hidden. It holds the internal row ID of each record. This is useful for matching purposes if you&amp;rsquo;re going to be modifying then re-importing the data.&lt;/p&gt;
&lt;h3 id=&#34;charts&#34;&gt;Charts&lt;/h3&gt;
&lt;p&gt;If the view has &lt;a href=&#34;https://docs.agilebase.co.uk/docs/charting/&#34;&gt;charts&lt;/a&gt; attached, one sheet per chart will also be included in the spreadsheet. The contents will be the chart data, not the chart visualisation itself, but the visualisation can easily be re-created in the spreadsheet from the data if necessary.&lt;/p&gt;
&lt;h2 id=&#34;limits-and-notifications&#34;&gt;Limits and notifications&lt;/h2&gt;
&lt;p&gt;An administrator can log whether each table contains commercially sensitive data (ticked by default) and/or personal data (see &lt;a href=&#34;https://gdpr-info.eu/art-4-gdpr/)&#34;&gt;https://gdpr-info.eu/art-4-gdpr/)&lt;/a&gt;. If either of these options is ticked for a view&amp;rsquo;s parent table, you’ll have additional options for&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;notifying all administrators if an export of more than a certain number of rows is done&lt;/li&gt;
&lt;li&gt;setting a hard limit to completely disallow exports of more than a certain number of rows&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To configure these options, see &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/&#34;&gt;tables&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You may also want to set an export prompt message to show people when they request an export, to remind people of their data protection obligations under the GDPR for example. This can be done in the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/advanced-usage/company-settings/#export-message&#34;&gt;company settings&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Introduction: Scaling potential</title>
      <link>https://docs.agilebase.co.uk/introduction/scaling-potential/</link>
      <pubDate>Mon, 22 Jun 2020 09:57:55 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/introduction/scaling-potential/</guid>
      <description>
        
        
        &lt;p&gt;Using agileBase you can start small (perhaps in one team or department) and build apps iteratively to encompass a constantly widening range of business requirements. Many back office and CRM systems don&amp;rsquo;t typically store high volumes of data, but as systems grow its not uncommon to add transactional apps such as customer order processing for example, which can experience high throughput.&lt;/p&gt;
&lt;p&gt;agileBase supports all three stages of an organisation&amp;rsquo;s lifecycle - startup, scaling and growth. As a startup, development speed and flexibility are key, during scaling efficiency becomes important and as a large organisation, control, robustness and trust come to the fore. We&amp;rsquo;ll explain how each of these is covered.&lt;/p&gt;
&lt;h2 id=&#34;database---postgresql&#34;&gt;Database - PostgreSQL&lt;/h2&gt;
&lt;p&gt;Firstly, at a technical level, agileBase is well covered to support large volumes of data and numbers of transactions per second (TPS) whilst remaining highly responsive for users.&lt;/p&gt;
&lt;p&gt;The underlying database used to store data is &lt;a href=&#34;https://www.postgresql.org&#34;&gt;PostgreSQL&lt;/a&gt;, &amp;ldquo;the world&amp;rsquo;s most advanced open source database&amp;rdquo;. It has a strong reputation for reliability, feature robustness, and performance.&lt;/p&gt;
&lt;p&gt;Our monitoring systems ensure reliable performance under load. Customers routinely build apps which store and process tens of millions of data rows. Should there be a need to expand to larger amounts, there&amp;rsquo;s always the option to upgrade a customer database to larger servers or distributed &amp;lsquo;hyperscale&amp;rsquo; systems, such as &lt;a href=&#34;https://www.citusdata.com/&#34;&gt;Citus Data&lt;/a&gt;, which works with PostgreSQL.&lt;/p&gt;
&lt;h2 id=&#34;engine---api-creator&#34;&gt;Engine - API Creator&lt;/h2&gt;
&lt;p&gt;Typically, higher data processing volumes occur not when users are entering data, but when third party systems are connected via the API, which can feed in or extract data from high-volume sources such as websites or financial systems. The &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;API Creator&lt;/a&gt; allows this to be done easily.&lt;/p&gt;
&lt;h2 id=&#34;adoption&#34;&gt;Adoption&lt;/h2&gt;
&lt;p&gt;As agileBase use migrates from one group of people to another throughout an organisation, a project manager or architect&amp;rsquo;s concern moves from the &amp;lsquo;is it technically possible?&amp;rsquo; question, to &amp;lsquo;is it going to be successful?&amp;rsquo;&lt;/p&gt;
&lt;p&gt;Over and over again we find that successful software implementations occur when users are happy. Frequently, agileBase users evangelise the system to their colleagues and help grow the internal user base. There are a couple of reasons for this. Firstly, the user interface is friendly - not only easy to use but attractive and colourful. It sounds simple but it makes a world of difference.&lt;/p&gt;
&lt;p&gt;The user interface is also consistent from app to app - whatever the function of the app, the same look &amp;amp; feel &amp;amp; layouts are used, reducing training requirements and letting users support each other.&lt;/p&gt;
&lt;p&gt;Secondly, as agileBase is a low code / no code platform, users can be involved from the very beginning. If a project is managed well, their input will be quickly actioned in a working prototype - people then feel they have a stake in the final application, resulting in engagement and buy-in.&lt;/p&gt;
&lt;p&gt;To aid adoption by new users, agileBase allows an administrator to &lt;a href=&#34;https://docs.agilebase.co.uk/docs/adding-help/&#34;&gt;enter help content&lt;/a&gt; and links into many different places of the user interface, down to the individual field level. We highly recommend some time is spent doing this as applications are built.&lt;/p&gt;
&lt;h2 id=&#34;partners&#34;&gt;Partners&lt;/h2&gt;
&lt;p&gt;We have a growing network of partners, with lots of experience and skills in consultancy, project management and development using agileBase. Larger projects and companies may well want to take advantage of this range of abilities, e.g. to run planning, development workshops and training events.&lt;/p&gt;
&lt;h2 id=&#34;security-privacy-and-control&#34;&gt;Security, privacy and control&lt;/h2&gt;
&lt;p&gt;As systems grow, it&amp;rsquo;s important that a level of control is exercised over who accesses which data, how and when, particularly when sensitive personal information is stored, or core data central to the running of a company.&lt;/p&gt;
&lt;p&gt;In a low code / low code environment such as agileBase&amp;rsquo;s, an additional factor is controlling the evolution of the system. Too centralised and innovation can slow, too relaxed and it can run out of control.&lt;/p&gt;
&lt;p&gt;All of these factors are taken into consideration when we design the administrative features that help decision makers set the rules and monitoring for application development. The &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/&#34;&gt;Security and Compliance&lt;/a&gt; section of the documentation covers many of these. This is also an area of ongoing research and development - our &lt;a href=&#34;https://blog.agilebase.co.uk/2019/12/10/agilebase-platform-vision-2020-from-startup-to-scale-up-without-screwing-up/&#34;&gt;roadmap blog post&lt;/a&gt; details some of the current thinking.&lt;/p&gt;
&lt;h2 id=&#34;cost&#34;&gt;Cost&lt;/h2&gt;
&lt;p&gt;An easily understandable, fair and transparent pricing policy means that annual costs can be reliably estimated for any future growth scenario, in fact multiple scenarios can be planned - nothing is hidden! See the &lt;a href=&#34;https://todo.com&#34;&gt;costing&lt;/a&gt; section for more details.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Common Options</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-options/common-options/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-options/common-options/</guid>
      <description>
        
        
        &lt;h2 id=&#34;capitalise-field-name&#34;&gt;Capitalise field name&lt;/h2&gt;
&lt;p&gt;By default agileBase displays field names in Title Case. Un-ticking this option disables that, which can be useful for special cases like e.g. &amp;lsquo;pH&amp;rsquo; or &amp;lsquo;Length (m)&amp;rsquo;, which would otherwise show as &amp;lsquo;PH&amp;rsquo; and &amp;lsquo;Length (M)&amp;rsquo;.&lt;/p&gt;
&lt;h2 id=&#34;icon&#34;&gt;Icon&lt;/h2&gt;
&lt;p&gt;Rather than displaying a field name, show an icon, chosen from &lt;a href=&#34;https://fontawesome.com/icons&#34;&gt;https://fontawesome.com/icons&lt;/a&gt;. For example, to show a phone icon for a phone number field, you could enter &lt;code&gt;phone&lt;/code&gt;, for an email field &lt;code&gt;envelope&lt;/code&gt; or a twitter handle &lt;code&gt;twitter&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;show-if-record-in-view&#34;&gt;Show if record in view&lt;/h2&gt;
&lt;p&gt;Allow a field to be hidden or shown based on conditions. The conditions are specified by creating a view and adding filters. That view is then selected in this field option.&lt;/p&gt;
&lt;p&gt;If a record appears in the view, the field will be visible, otherwise it won&amp;rsquo;t display to users.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As the conditions are created in a view, this mechanism is really powerful. You can create simple or very complex critera, including all of the filter options in a view, for example basing a filter on a calculation and combining multiple filters.&lt;/p&gt;
&lt;p&gt;So you could make a field appear only when a particular point is reached in a process, or a status is changed elsewhere in a form, or perhaps it should only be visible to people who are &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/&#34;&gt;members of a certain role&lt;/a&gt;. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/filters/&#34;&gt;view filters&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Two special options are available&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;show always - the default state&lt;/li&gt;
&lt;li&gt;show never - useful for hiding fields used for internal purposes, e.g. which help the internal workings of a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;lock-when-value-set&#34;&gt;Lock when value set&lt;/h2&gt;
&lt;p&gt;If the field is blank, allow a value to be entered, however as soon as it has a value, lock to prevent further editing. The user can manually unlock, but will be prompted for a reason for doing so, which will be logged against the field as a comment.&lt;/p&gt;
&lt;p&gt;This can be used to prevent accidental editing of important fields which should not usually be changed, for example a product&amp;rsquo;s stock code.&lt;/p&gt;
&lt;h2 id=&#34;unlock-if-record-in-view&#34;&gt;Unlock if record in view&lt;/h2&gt;
&lt;p&gt;If &lt;strong&gt;Lock when value set&lt;/strong&gt; is ticked, unlock on certain criteria. Works the same way as &lt;a href=&#34;#show-if-record-in-view&#34;&gt;Show if record in view&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;required&#34;&gt;Required&lt;/h2&gt;
&lt;p&gt;If ticked, prompt the user for a value when they try to leave a record without one. Note we can&amp;rsquo;t force the value, as the user could refresh the browser as a workaround.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For dropdown fields with the default value set to &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/#lists-of-users&#34;&gt;Lists of users&lt;/a&gt;, this has the special effect of defaulting the field to the ID of the currently logged in user.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;prominent&#34;&gt;Prominent&lt;/h2&gt;
&lt;p&gt;Prominently highlight the field on the screen, e.g. if it&amp;rsquo;s one that is important to fill out, without actually requiring a value to be supplied.&lt;/p&gt;
&lt;h2 id=&#34;set-from-previous-referenced-field&#34;&gt;Set from previous referenced field&lt;/h2&gt;
&lt;p&gt;Provides a way to calculate a default option for a field. Tick this option and place a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/referenced-data/&#34;&gt;referenced field&lt;/a&gt; just before this field. The value of this field will be set from whatever value the referenced field outputs.&lt;/p&gt;
&lt;p&gt;If the referenced field&amp;rsquo;s view has more than one field, the last one will be used, or if any have the same name as this field then that one will be.&lt;/p&gt;
&lt;p&gt;To have a value set only at a certain point in a process, this option can be combined with the &lt;a href=&#34;#show-if-record-in-view&#34;&gt;Show if record in view&lt;/a&gt; option. When the field becomes visible, the value will be set.&lt;/p&gt;
&lt;p&gt;Setting the value of a relation field is a special case because you need to set both the actual relation value, which is the numeric ID of the record you wish to relate to, and the display value i.e. what the user should see. The way to do this is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add a field or calculation with the same name as the display field for the relation. For example in a contact record, if you have a relation field &amp;lsquo;Company&amp;rsquo; with its display field set to &amp;lsquo;Company Name&amp;rsquo;, then you could create a calculation called Company Name and set it to output the name of the relevant company.&lt;/li&gt;
&lt;li&gt;Add the internal row ID for the company to the referenced field&amp;rsquo;s view. This should be the &lt;strong&gt;last&lt;/strong&gt; field in the view&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that another way of setting a value on record creation is to use a workflow set to &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/#when-a-records-created-run-this-workflow &#34;&gt;run on record creation&lt;/a&gt;. If you need to set the value on record creation, using a workflow is the best way - it will seem slightly quicker to the user. However if you need to be able to wait a while before automatically setting the value of a field, perhaps until another field has been filled in, then using this referenced field option is the way to go.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;unique&#34;&gt;Unique&lt;/h2&gt;
&lt;p&gt;Disallow any duplicate values from being entered. No records in the table can have the same value as each other.&lt;/p&gt;
&lt;h2 id=&#34;change-causes-record-refresh&#34;&gt;Change causes record refresh&lt;/h2&gt;
&lt;p&gt;Through the use of some field options like &lt;a href=&#34;#show-if-record-in-view&#34;&gt;Show if record in view&lt;/a&gt; above, the screen can change based on what&amp;rsquo;s entered into a form. This option can work as a switch to refresh the configuration of the screen if it does change as someone enters new data.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For example, if there is a table to store sales opportunities, one field may be the status. If the status changes to &lt;code&gt;won&lt;/code&gt; or &lt;code&gt;lost&lt;/code&gt;, then you may wish to show some extra fields like &amp;lsquo;date won&amp;rsquo; or &amp;lsquo;reason why lost&amp;rsquo; for example. To allow this, tick the &amp;lsquo;change causes record refresh&amp;rsquo; option on the status field. Then whenever the status changes, these fields will automatically appear if relevant.&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Reporting</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/usage-reporting/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/usage-reporting/</guid>
      <description>
        
        
        &lt;p&gt;Log data reporting provides a rich view of system usage.&lt;/p&gt;
&lt;h2 id=&#34;enhanced-audit-trail&#34;&gt;Enhanced audit trail&lt;/h2&gt;
&lt;p&gt;For organisations who have activated the enhanced audit trail, all logs are stored in user-accessible tables which are just like any other tables in the system, the only difference being the data is read only. This means an administrator can use the full power of the built in agileBase reporting features, to create views, add calculations, charts etc., even export via the API.&lt;/p&gt;
&lt;p&gt;So for example, you could analyse how many changes were made per month by each user, count the volume of logins from various locations or see what the most common fields are to search on. All actions listed on the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/&#34;&gt;usage monitoring&lt;/a&gt; page are available to query.&lt;/p&gt;
&lt;p&gt;Data is also retained for an extended period, see &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/#retention-periods&#34;&gt;retention periods&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If interested in activating this feature, please &lt;a href=&#34;https://agilechilli.com/contact-us/&#34;&gt;get in touch&lt;/a&gt;. There will be a small recurring charge added to your bill.&lt;/p&gt;
&lt;h3 id=&#34;data-stored&#34;&gt;Data stored&lt;/h3&gt;
&lt;h4 id=&#34;logins&#34;&gt;Logins&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Username&lt;/li&gt;
&lt;li&gt;Date and time&lt;/li&gt;
&lt;li&gt;IP Address&lt;/li&gt;
&lt;li&gt;Country&lt;/li&gt;
&lt;li&gt;Internet Service Provider organisation name and location&lt;/li&gt;
&lt;li&gt;Client web browser (both summary and exact version details)&lt;/li&gt;
&lt;li&gt;Client operating system&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;data-changes-record-creation--update--delete&#34;&gt;Data changes (record creation / update / delete)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Username (in the case of an API call, will be &amp;lsquo;Public API [IP address]&amp;rsquo;. In the case of a system workflow, &amp;lsquo;System&amp;rsquo;)&lt;/li&gt;
&lt;li&gt;Date and time&lt;/li&gt;
&lt;li&gt;Action (e.g. update or delete)&lt;/li&gt;
&lt;li&gt;Table&lt;/li&gt;
&lt;li&gt;Field (if a single field is updated)&lt;/li&gt;
&lt;li&gt;Row ID - internal identifier of the record updated&lt;/li&gt;
&lt;li&gt;Saved data&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;view-access&#34;&gt;View access&lt;/h4&gt;
&lt;p&gt;This covers any time a view is opened or filtered, either by a user, or an API call&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Username (in the case of an API call, will be &amp;lsquo;Public API [IP address]&#39;)&lt;/li&gt;
&lt;li&gt;Date and time&lt;/li&gt;
&lt;li&gt;Tile and view name&lt;/li&gt;
&lt;li&gt;Details - any filters and row limit applied&lt;/li&gt;
&lt;li&gt;Rows - the number of records returned to the user or API&lt;/li&gt;
&lt;li&gt;Processing time - the total server-side processing time in milliseconds needed to retrieve the data, and if for an API, transform it into JSON format&lt;/li&gt;
&lt;li&gt;Of which Q time &lt;strong&gt;(API calls only)&lt;/strong&gt; - to achieve a fair level of load balancing, agileBase operates a separate API request queue for each customer. If a request arrives and the system is still busy processing a previous request, the new one gets held in a queue. This field shows how much of the total processing time, in ms was spent waiting for previous requests to complete&lt;/li&gt;
&lt;li&gt;Bytes &lt;strong&gt;(API calls only)&lt;/strong&gt; - the number of bytes of JSON data returned via the API&lt;/li&gt;
&lt;li&gt;Count - if many similar requests or API calls (to a particular view) reach the server in quick succession, they will be amalgamated together into one log line. The count then shows the number of requests the log line refers to, otherwise it will be 1. If more than one, then the &lt;em&gt;rows&lt;/em&gt;, &lt;em&gt;processing time&lt;/em&gt;, &lt;em&gt;of which q time&lt;/em&gt; and &lt;em&gt;bytes&lt;/em&gt; will represent the totals for all requests&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;table-schema-changes&#34;&gt;Table schema changes&lt;/h4&gt;
&lt;p&gt;These are changes made to a table structure by someone with &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/&#34;&gt;manage&lt;/a&gt; privileges, such as adding or removing a field.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Date and time&lt;/li&gt;
&lt;li&gt;Username&lt;/li&gt;
&lt;li&gt;Table name&lt;/li&gt;
&lt;li&gt;Action e.g. &amp;lsquo;add field&amp;rsquo;, &amp;lsquo;remove field&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Details - e.g. the name of the field&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;view-schema-changes&#34;&gt;View schema changes&lt;/h4&gt;
&lt;p&gt;Changes made to a view structure, such as adding fields, filters, calculations or charts&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Date and time&lt;/li&gt;
&lt;li&gt;Username&lt;/li&gt;
&lt;li&gt;Tile and view name&lt;/li&gt;
&lt;li&gt;Action&lt;/li&gt;
&lt;li&gt;Details - additional data related to the action, e.g. if adding a field, the field name&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;authentication-changes&#34;&gt;Authentication changes&lt;/h2&gt;
&lt;p&gt;A log of administrative actions such as assigning a user to a role, assigning privileges, or user actions such as requesting a password reset&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Date and time&lt;/li&gt;
&lt;li&gt;Username (of the user making the change)&lt;/li&gt;
&lt;li&gt;Action - e.g. add privilege&lt;/li&gt;
&lt;li&gt;Table name - only if the action relates to a particular table, e.g. assigning a role to a table&lt;/li&gt;
&lt;li&gt;Details - additional data related to the action, e.g. if adding a role to the table, the role name&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;standard-reporting&#34;&gt;Standard reporting&lt;/h2&gt;
&lt;p&gt;Built in reports are available in a number of areas, whether using the enhanced audit trail or standard logging.&lt;/p&gt;
&lt;h3 id=&#34;the-dashboard&#34;&gt;The dashboard&lt;/h3&gt;
&lt;p&gt;From the tiles interface, click the bird icon at the top left, then select &lt;em&gt;usage dashboard&lt;/em&gt;. The dashboard contains system reports including usage data.&lt;/p&gt;
&lt;h4 id=&#34;trends&#34;&gt;Trends&lt;/h4&gt;
&lt;p&gt;An overall usage treemap is displayed at the top. Each view is a section of the screen. Large areas represent views that get a lot of use, smaller areas those that don’t. Colours give immediate feedback on whether usage has been increasing (blue) or decreasing (grey) this month. Hovering over an area shows more stats including the top users.&lt;/p&gt;
&lt;p&gt;Underneath that a series of sparkline charts show long term trends, across selected operational, tactical and strategic metrics, all geared to showing utilisation over a 12 month period.&lt;/p&gt;
&lt;p&gt;Raw data can be downloaded to spreadsheet using the links beneath each sparkline. Note only the most recent 200,000 records can be downloaded in this way.&lt;/p&gt;
&lt;h4 id=&#34;capacity&#34;&gt;Capacity&lt;/h4&gt;
&lt;p&gt;As well as actual usage, the dashboard shows total capacity i.e. how many users, records, tables etc. are present in the system, along with purchased capacity (if relevant). These elements affect billing.&lt;/p&gt;
&lt;h4 id=&#34;workflows&#34;&gt;Workflows&lt;/h4&gt;
&lt;p&gt;A convenience view of all workflows which carry out automated data modifications, see &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflows&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;database-graph&#34;&gt;Database graph&lt;/h4&gt;
&lt;p&gt;Finally, for background on what the data structure looks like and how tables are connected, the database graph shows relations between tables is visual form. This can provide a fuller understaning of the system.&lt;/p&gt;
&lt;h3 id=&#34;table-and-view-usage&#34;&gt;Table and view usage&lt;/h3&gt;
&lt;p&gt;A quick overview of who is viewing data is shown in the administration interface for both tables and views.&lt;/p&gt;
&lt;p&gt;For a table&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open a table, under the &lt;em&gt;Build Tables&lt;/em&gt; section of the lefthand navigation&lt;/li&gt;
&lt;li&gt;Go the the manage tab and click the &lt;em&gt;Usage&lt;/em&gt; icon&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The report shows the number of times each user has viewed data from the table, per view. All views which contain any data from the table are included.&lt;/p&gt;
&lt;p&gt;For a view&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open a view from the lefthand navigation&lt;/li&gt;
&lt;li&gt;Go to the manage tab and click the &lt;em&gt;Usage&lt;/em&gt; icon&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Similar data is show as for tables, but limited to the selected view.&lt;/p&gt;
&lt;h2 id=&#34;individual-record-histories&#34;&gt;Individual record histories&lt;/h2&gt;
&lt;p&gt;Any user can see the complete history of changes to an individual record, up to the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/#retention-periods&#34;&gt;retention period&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When editing a record, scroll to the bottom of the screen and click &lt;em&gt;history&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;To view the precise time of a change, hover over a date.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Table layouts</title>
      <link>https://docs.agilebase.co.uk/docs/tables/table-layouts/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/table-layouts/</guid>
      <description>
        
        
        &lt;p&gt;For each table, agileBase will automatically build a data entry form for users to view, add and edit records with.&lt;/p&gt;
&lt;p&gt;The layout of this form can be controlled by selecting a layout option and adding separators to create blocks i.e. groups of fields which go together. This will create a more pleasant and usable system.&lt;/p&gt;
&lt;h2 id=&#34;layout&#34;&gt;Layout&lt;/h2&gt;
&lt;p&gt;The layout option is the main control. There are three options&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;single column&lt;/strong&gt; - a simple vertical list of fields&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;blocks in two columns&lt;/strong&gt; - makes the best use of screen space for large forms. Also allows tabs
&lt;ul&gt;
&lt;li&gt;All fields before the first separator are displayed in a section at the top of the screen, in two columns&lt;/li&gt;
&lt;li&gt;After that, each separator added creates a new block of fields. Blocks are arranged in two &amp;lsquo;newspaper&amp;rsquo; style columns which are displayed below the top section&lt;/li&gt;
&lt;li&gt;If the table has tabs, they are displayed below the top section&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;process flow&lt;/strong&gt; - blocks of fields are arranged vertically one after each other, works well when there the data entry form maps to a set process&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here&amp;rsquo;s what the same data entry form looks like in each of the three configurations&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/layout-single.png&#34; alt=&#34;single column layout&#34;&gt; &amp;ldquo;single column&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/layout-two-columns.png&#34; alt=&#34;two column layout&#34;&gt; &amp;ldquo;two columns&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/layout-process.png&#34; alt=&#34;process flow layout&#34;&gt; &amp;ldquo;process flow&amp;rdquo;&lt;/p&gt;
&lt;p&gt;and here&amp;rsquo;s an example of &lt;strong&gt;2. blocks in two columns&lt;/strong&gt; with tabs.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/layout-tabs.png&#34; alt=&#34;form with tabs&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;separators&#34;&gt;Separators&lt;/h2&gt;
&lt;p&gt;To form a block, click on the &lt;em&gt;fields&lt;/em&gt; tab of a table and add a field of type &amp;lsquo;separator&amp;rsquo; - see the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/separators/&#34;&gt;fields reference&lt;/a&gt;. Move it to where the start of the block should be i.e. before the first field in the block.&lt;/p&gt;
&lt;h2 id=&#34;record-titles&#34;&gt;Record titles&lt;/h2&gt;
&lt;p&gt;In the screenshots above, you can see that each record has a heading, or title. drawn from the data.&lt;/p&gt;
&lt;p&gt;To set one or more fields to include in the title, use the field option &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/#use-as-record-title&#34;&gt;use as record title&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;see-also&#34;&gt;See also&lt;/h2&gt;
&lt;p&gt;When a relation field is near the top of the form, it&amp;rsquo;s also moved to the record title level to become a title link, allowing navigation upwards to the &amp;lsquo;parent&amp;rsquo; record. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/&#34;&gt;hierarchy navigation&lt;/a&gt; for info about upwards, and downwards, navigation.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Logging in from an app</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/app_login/</link>
      <pubDate>Sun, 20 Jun 2021 09:20:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/app_login/</guid>
      <description>
        
        
        &lt;p&gt;It&amp;rsquo;s possible for a developer to create a third party application, for example a phone or tablet app, that communicates with agileBase via the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations&#34;&gt;API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now to use the API, you don&amp;rsquo;t need to authenticate as a user, as long as the app has the correct Authorization key(s), it can read and write data to agileBase.&lt;/p&gt;
&lt;p&gt;However, in some cases the app may need to confirm that someone has a valid agileBase account before allowing them to use the app. This may or may not be necessary depending on the use case, for example depending on whether the app is free to use for anyone, or must be limited to paying customers.&lt;/p&gt;
&lt;p&gt;To validate a user, the app must redirect them to the agileBase login page, let them log in and confirm that was successful. Therefore, a HTTP client is necessary - this can be a &amp;lsquo;web view component&amp;rsquo; or a programmatic client such as the &lt;a href=&#34;https://hc.apache.org/&#34;&gt;Apache HTTP Client&lt;/a&gt; for &lt;a href=&#34;https://en.wikipedia.org/wiki/Java_%28programming_language%29&#34;&gt;Java&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this example, we&amp;rsquo;ll use the &lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/react-native-webview&#34;&gt;Native Web View&lt;/a&gt; but the principle is the same for any programming language or library.&lt;/p&gt;
&lt;h2 id=&#34;general-principle&#34;&gt;General Principle&lt;/h2&gt;
&lt;p&gt;The application must reproduce the same login process as a human would, using a HTTP client. Importantly, the HTTP client must support cookies, as the login process depends on them, in particular setting a &lt;code&gt;JSESSIONID&lt;/code&gt; cookie.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make a request to load the page &lt;a href=&#34;https://appserver.gtportalbase.com/agileBase/AppController.servlet?return=user_details&#34;&gt;https://appserver.gtportalbase.com/agileBase/AppController.servlet?return=user_details&lt;/a&gt;. This will return the login page and set the cookie value.&lt;/li&gt;
&lt;li&gt;Submit the login form using the user&amp;rsquo;s username and password. If using a programattic process i.e. making the calls from code rather than using a web view, this means making a form POST to &lt;code&gt;/agileBase/j_security_check&lt;/code&gt; with the parameters &lt;code&gt;j_username&lt;/code&gt; and &lt;code&gt;j_password&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Detect whether the login&amp;rsquo;s successful. If not, the standard agileBase login failure page will be returned&lt;/li&gt;
&lt;li&gt;If successful, a HTML page will be returned containing three hidden input fields, &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;forename&lt;/code&gt;, &lt;code&gt;surname&lt;/code&gt; containing relevant details for the logged in user. If being called from a React Native Web View, the page will also post back messages to React using this JavaScript:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if (window.ReactNativeWebView) {
    window.ReactNativeWebView.postMessage(&amp;quot;username:&amp;quot; + username);
    window.ReactNativeWebView.postMessage(&amp;quot;forename:&amp;quot; + forename);
    window.ReactNativeWebView.postMessage(&amp;quot;surname:&amp;quot; + surname);
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s a full example of a login.js page using the React Native Web View. NB this is an example taken from a full application, so you will need to modify it / strip it back to suit your needs, before it can be run.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;//Node imports
import React, {useEffect, useRef, useState} from &#39;react&#39;;
import {View, StatusBar, Image, ImageBackground, ScrollView} from &#39;react-native&#39;;

//Local imports
import {styles} from &#39;../../../styles/loginStyles&#39;;
import {Images, Colors, Constants, Language} from &#39;../../../common&#39;;
import {useNetInfo} from &amp;quot;@react-native-community/netinfo&amp;quot;;
import { WebView } from &#39;react-native-webview&#39;;
import {useDispatch, useSelector} from &#39;react-redux&#39;;
import {updateUserData} from &#39;../../../redux/actions/commonAction&#39;;
import commonFunctions from &#39;../../../common/commonFunctions&#39;;
import SplashScreen from &#39;react-native-splash-screen&#39;
const {fontSize, fontFamily, Window} = Constants;

const LoginScreen = (props) =&amp;gt; {
    const dispatch = useDispatch();
    const {user_data} = useSelector(state =&amp;gt; state);
    const netInfo = useNetInfo();

    useEffect(function () {
        SplashScreen.hide();
        console.log(&#39;netInfo==============&#39;, netInfo)
        if(netInfo?.isInternetReachable || netInfo?.details != null){
            checkUser();
        }
    }, [netInfo, user_data]);

    const checkUser = () =&amp;gt; {
        if(user_data &amp;amp;&amp;amp; user_data?.forename &amp;amp;&amp;amp; user_data?.surname &amp;amp;&amp;amp; user_data?.username){
            goToNextPage();
        }
        console.log(&#39;user_data&#39;, user_data)
    }

    const goToNextPage = async () =&amp;gt; {
        await commonFunctions.removeTimeStamp();
        navigateToNextPage();
    }

    const onResponseFromWebView = (event) =&amp;gt; {
        const eventData = event.nativeEvent.data;
        console.log(&#39;eventData&#39;, eventData);
        if (eventData.includes(&#39;username&#39;)) {
            dispatch(updateUserData({username: eventData.split(&#39;username:&#39;)[1]}));
        } else if (eventData.includes(&#39;forename&#39;)) {
            dispatch(updateUserData({forename: eventData.split(&#39;forename:&#39;)[1]}));
        } else if (eventData.includes(&#39;surname&#39;)) {
            dispatch(updateUserData({surname: eventData.split(&#39;surname:&#39;)[1]}));
        }
    }

    const navigateToNextPage = () =&amp;gt; {
        if (netInfo?.isInternetReachable) {
            return props.navigation.navigate(&#39;Loading&#39;);
        }
        return props.navigation.navigate(&#39;MyApplicationPage&#39;);
    }

    return (
        &amp;lt;View style={styles.container}&amp;gt;
            &amp;lt;StatusBar backgroundColor={Colors.black} barStyle={&#39;dark-content&#39;}/&amp;gt;
            {(netInfo?.isInternetReachable &amp;amp;&amp;amp; !user_data?.surname) ?
                &amp;lt;WebView
                    source={{uri: &#39;https://appserver.gtportalbase.com/agileBase/AppController.servlet?return=user_details&#39;}}
                    onMessage={onResponseFromWebView}
                    textZoom={100}
                    sharedCookiesEnabled={true}
                /&amp;gt; :
                &amp;lt;View style={styles.loadingImage}&amp;gt;
                    &amp;lt;Image source={Images.logo}/&amp;gt;
                &amp;lt;/View&amp;gt;
            }
        &amp;lt;/View&amp;gt;
    );
};

export default LoginScreen;
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Introduction: Costing structure</title>
      <link>https://docs.agilebase.co.uk/introduction/costing-structure/</link>
      <pubDate>Mon, 22 Jun 2020 09:57:55 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/introduction/costing-structure/</guid>
      <description>
        
        
        &lt;p&gt;A large variety of applications can be built using the agileBase platform. Customers can start small (perhaps in one team or department, or a new startup business) and build apps iteratively to encompass a constantly widening range of business requirements.&lt;/p&gt;
&lt;p&gt;Our costing structure has been developed to ensure fairness and affordability however far along an organisation is in their growth.&lt;/p&gt;
&lt;p&gt;Costing is controlled by five factors&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Users - the number of people who can log in&lt;/li&gt;
&lt;li&gt;Tables - a measure of the size of an application - how many capabilities does it cover?&lt;/li&gt;
&lt;li&gt;Document storage - used if a company uploads or generates documents, images or videos&lt;/li&gt;
&lt;li&gt;Quantity of data - the number of records stored in a system&lt;/li&gt;
&lt;li&gt;Optional API charges - when integrating with third party software&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each element has a sliding scale - the larger the number of units, the lower the per-unit cost, to allow large scale use while remaining affordable.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Creating a view</title>
      <link>https://docs.agilebase.co.uk/docs/views/creating-a-view/</link>
      <pubDate>Wed, 13 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/views/creating-a-view/</guid>
      <description>
        
        
        &lt;p&gt;In agileBase, a view &amp;lsquo;belongs to&amp;rsquo; a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/&#34;&gt;table&lt;/a&gt;. We&amp;rsquo;ll see what that means in more detail below, but for now, just choose a table to show data from to users. In examples on this section of the documentation we&amp;rsquo;ll assume we pick a contacts table.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll also assume we already have some tables and some &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;tiles&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;to-create-a-view&#34;&gt;To create a view&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Expand the &lt;em&gt;Build Tables&lt;/em&gt; menu in the lefthand sidebar&lt;/li&gt;
&lt;li&gt;Click the table you want to create a view from&lt;/li&gt;
&lt;li&gt;If necessary, click the pencil icon in the toolbar to edit the table and click the &lt;em&gt;manage&lt;/em&gt; tab at the bottom of the screen&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;Create new view&amp;rsquo; button at the top right. You&amp;rsquo;ll be prompted for a name.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;There is an option &lt;strong&gt;Populate the view with fields from this table&lt;/strong&gt; next to the &lt;em&gt;Create new view&lt;/em&gt; button. This is a convenience feature, which is ticked by default. When it&amp;rsquo;s ticked, the view created will contain all fields from the table - you can then remove any you don&amp;rsquo;t need. When un-ticked, the view will start with no fields so you can add just those you wish.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;organising-into-a-navigation-structure&#34;&gt;Organising into a navigation structure&lt;/h2&gt;
&lt;p&gt;On creating a view, its manage tab will appear. One of the first things it&amp;rsquo;s useful to do is put the field in a tile - use the &lt;em&gt;Tile&lt;/em&gt; dropdown option to do so.&lt;/p&gt;
&lt;p&gt;Within a tile, the view can be added to a menu by editing the view name. Simply prefix the view name with a menu name and a dash. So for example, naming a view &lt;code&gt;contacts - all contacts&lt;/code&gt; will create a &amp;lsquo;contacts&amp;rsquo; menu containing the view &amp;lsquo;all contacts&amp;rsquo; visible to users.&lt;/p&gt;
&lt;p&gt;Entering a view &lt;em&gt;Purpose&lt;/em&gt; in the space underneath the name will provide help text for the view. This will be displayed in the menu underneath the view name. Here&amp;rsquo;s a screenshot of a sample menu, each with purpose completed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/menu.png&#34; alt=&#34;menu&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;using-a-view&#34;&gt;Using a view&lt;/h2&gt;
&lt;p&gt;Once the view is created, how can someone use it? We won&amp;rsquo;t work through every possibility here as this documentation is for administrators rather than users, but here are some of the most important points in brief you may like to be aware of in order to support apps you build.&lt;/p&gt;
&lt;h3 id=&#34;finding-data&#34;&gt;Finding data&lt;/h3&gt;
&lt;p&gt;By default a search box appears under each column heading (the system can also be configured in a simplified way with a single search box to cover all fields).&lt;/p&gt;
&lt;p&gt;The help icon (?) to the left of the search boxes details the types of search that can be performed. There are many, allowing for e.g. date-based searches, &lt;em&gt;and&lt;/em&gt; and &lt;em&gt;or&lt;/em&gt; searching, finding empty values etc. Helper features pop up for some field types, like date range pickers for example.&lt;/p&gt;
&lt;h3 id=&#34;seeing-summary-stats&#34;&gt;Seeing summary stats&lt;/h3&gt;
&lt;p&gt;Hovering over a column shows summary statistics, like a total and average (of all filtered records) for numeric fields, or a breakdown of dropdown/tags fields.&lt;/p&gt;
&lt;h3 id=&#34;loading-a-record&#34;&gt;Loading a record&lt;/h3&gt;
&lt;p&gt;Once a record has been found, click a row in the view to load that record for viewing or editing. The record loaded comes from the table that the view belongs to (as referenced at the start of this page), even though the view may contain fields from other tables as well.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s also possible to use &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/options/#inline-editing&#34;&gt;inline editing&lt;/a&gt; to edit the contents of fields directly in the view.&lt;/p&gt;
&lt;p&gt;Pressing the plus button to the left of the view contents will create a new record in the view&amp;rsquo;s parent table.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Basic Field Types</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-types/basic-field-types/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-types/basic-field-types/</guid>
      <description>
        
        
        &lt;p&gt;These are the core types of fields by which data can be entered by users (or other sources such as the API or a workflow).&lt;/p&gt;
&lt;h2 id=&#34;text&#34;&gt;Text&lt;/h2&gt;
&lt;p&gt;Text fields are the most commonly used. Depending on &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/&#34;&gt;field options&lt;/a&gt;, text can be entered into a standard data entry control, a large box allowing rich formatting (bold, italic etc.), chosen from a dropdown of options or added as tags.&lt;/p&gt;
&lt;h2 id=&#34;number&#34;&gt;Number&lt;/h2&gt;
&lt;p&gt;When adding a number field, select a &lt;em&gt;precision&lt;/em&gt; from the dropdown. If &lt;code&gt;0&lt;/code&gt; is chosen, then it will be a whole number (integer) field. If any other value is chosen, it will be a decimal field. The decimal precision can be changed at any time in the field options, but a whole number can&amp;rsquo;t be converted to a decimal or vice versa via field options.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/advanced-usage/build-patterns/#switching-a-field-from-one-type-to-another&#34;&gt;changing field types&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;date&#34;&gt;Date&lt;/h2&gt;
&lt;p&gt;Represents a date or date/time, of any precision from year to second.&lt;/p&gt;
&lt;h2 id=&#34;auto-generated-number-sequence&#34;&gt;Auto-generated number sequence&lt;/h2&gt;
&lt;p&gt;The value of this field will be generated automatically, incremented by one each time a record is created.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sequence numbers are never rolled back, even on the deletion of a record, so they can&amp;rsquo;t be used if a gapless assignment of numbers is required. To accomplish that, calculate a value with a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#set-from-previous-referenced-field&#34;&gt;cross-referenced field&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;relation&#34;&gt;Relation&lt;/h2&gt;
&lt;p&gt;Adding a relation creates a link from one table to another. For example, a contacts table may contain a relation linking to an organisations table, to allow a person to belong to an organisation. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/&#34;&gt;relational database concepts&lt;/a&gt; for further info.&lt;/p&gt;
&lt;h2 id=&#34;checkbox&#34;&gt;Checkbox&lt;/h2&gt;
&lt;p&gt;Represents a boolean (true or false) value.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Text Field Options</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/</guid>
      <description>
        
        
        &lt;h2 id=&#34;colour-words&#34;&gt;Colour words&lt;/h2&gt;
&lt;p&gt;When this field is included in a view, highlight it with a colour if the content is one of a number of words. The most up-to-date values to be highlighted are shown in the administrator interface, but as of the latest update of this page, they are&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/word-colours.png&#34; alt=&#34;Word Colours&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Text calculations can also be coloured based on the same words - see the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/calculations/#colouring&#34;&gt;calculation options&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;use-dropdown&#34;&gt;Use dropdown&lt;/h2&gt;
&lt;p&gt;Rather than a simple text entry field, display a dropdown of choices from which one can be selected. If there are only a few values, then the user interface may display options in &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio&#34;&gt;radio button&lt;/a&gt; style, but the behaviour is exactly the same.&lt;/p&gt;
&lt;p&gt;Options can be provided with the &lt;a href=&#34;#default-value&#34;&gt;default value&lt;/a&gt; setting as above. If no options are specified, then the list of options will be automatically generated from the set of unique values &lt;strong&gt;already entered&lt;/strong&gt; into records. In this way, a set of values will gradually grow as people enter new data.&lt;/p&gt;
&lt;p&gt;See also the &lt;a href=&#34;#use-only-given-values&#34;&gt;Use only given values&lt;/a&gt; option below to enforce the use of provided values only.&lt;/p&gt;
&lt;h2 id=&#34;use-tags&#34;&gt;Use tags&lt;/h2&gt;
&lt;p&gt;Similar to Use dropdown, but rather than only letting the user select one value, multiple values can be chosen at once.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An example use may be selecting countries of origin for an ingredient, where it may come from different countries (perhaps via different suppliers).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The list of available options is specified in exactly the same way as for dropdowns above.&lt;/p&gt;
&lt;h2 id=&#34;use-only-given-values&#34;&gt;Use only given values&lt;/h2&gt;
&lt;p&gt;If a dropdown or tags list is used as above, ticking this option enforces the use of one of the provided values.&lt;/p&gt;
&lt;p&gt;If it&amp;rsquo;s un-ticked, then an &amp;lsquo;add new entry&amp;rsquo; option will be available for users to manually add values which aren&amp;rsquo;t yet in the list. Added values will be visible to all.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In some circumstances, it can be useful to leave this un-ticked and let options grow organically, until a certain point. Administrators can then rationalise and &amp;lsquo;hard-code&amp;rsquo; values from the most commonly entered. In other situations, it may be best to specify available options right from the start.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;default-value&#34;&gt;Default value&lt;/h2&gt;
&lt;p&gt;For basic text fields, this simply provides a default value, which the field will have when a record&amp;rsquo;s created. If not provided, the field will be blank.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Field defaults can also be calculated, with a simple or arbitratily complex calculation. To do that, instead use the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#set-from-previous-referenced-field&#34;&gt;Set from previous referenced field&lt;/a&gt; option.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;specifying-dropdown-lists-and-tags-fields&#34;&gt;Specifying dropdown lists and tags fields&lt;/h3&gt;
&lt;p&gt;If either &lt;a href=&#34;#use-dropdown&#34;&gt;Use dropdown&lt;/a&gt; or &lt;a href=&#34;#use-tags&#34;&gt;Use tags&lt;/a&gt; is selected, the default value option provides a &lt;strong&gt;list&lt;/strong&gt; of options with which to populate the dropdown, or a set of tags to choose from. Enter each option here separated by commas.&lt;/p&gt;
&lt;p&gt;If the list &lt;strong&gt;starts with&lt;/strong&gt; a comma, that means the field should be blank by default when a record is created. If not, then the default will be the first value in the comma separated list.&lt;/p&gt;
&lt;p&gt;In the dropdown/tags list, the options will be ordered alphabetically, not shown in the order they&amp;rsquo;re entered in. If you wish to give the values a particular order, you can prefix them with a number or letter followed by a closing bracket like so: &lt;code&gt;1) cold, 2) warm, 3) hot&lt;/code&gt;. The number prefixes won&amp;rsquo;t show to the user.&lt;/p&gt;
&lt;h4 id=&#34;lists-of-users&#34;&gt;Lists of users&lt;/h4&gt;
&lt;p&gt;Also for dropdown lists and tags fields, agileBase can generate dropdown contents based on a list of users and/or roles in the system. To do that, select &lt;code&gt;users&lt;/code&gt; or &lt;code&gt;users and roles&lt;/code&gt; from the &amp;lsquo;fill with&amp;rsquo; selector just below the default value input. The standard user ID format throughout the system is used, &amp;lsquo;Forename Surname (username)&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;Only users/roles which have privileges to view the data in this particular table will be shown in the list. That can keep things manageable if a system has hundreds or more users.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An example use would be assigning an account manager to a customer, selecting from a list of staff members (who are users).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When a user is selected in this way, more options for use are opened up, such as automatically emailing the selected person when there&amp;rsquo;s a status change or something is overdue for example. agileBase can look up the user&amp;rsquo;s email address to accomplish this, See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-email/&#34;&gt;email workflows&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;When using &amp;lsquo;fill with users&amp;rsquo;, the list of users to appear in the dropdown can further be narrowed down by role if required. To do that, enter the text&lt;/p&gt;
&lt;p&gt;&lt;code&gt;_users|role1,role2,role3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;i.e. &lt;code&gt;_users&lt;/code&gt; followed by a vertical bar and then a comma separated list of role names. Only users which appear in one or more of the named roles will appear.&lt;/p&gt;
&lt;p&gt;If you want a field to auto-populate with the ID of the currently logged in user, enable both this option and the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#required&#34;&gt;required&lt;/a&gt; field option.&lt;/p&gt;
&lt;h2 id=&#34;text-case&#34;&gt;Text case&lt;/h2&gt;
&lt;p&gt;Convert people&amp;rsquo;s input into the required case as it&amp;rsquo;s entered - choose from&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;lowercase&lt;/li&gt;
&lt;li&gt;UPPERCASE&lt;/li&gt;
&lt;li&gt;Title Case&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;size&#34;&gt;Size&lt;/h2&gt;
&lt;p&gt;If &amp;lsquo;short&amp;rsquo; is chosen, a standard single line input box is displayed.&lt;/p&gt;
&lt;p&gt;If &amp;lsquo;large&amp;rsquo; is chosen, a multi-line text entry box is shown. This option also lets people format the text entered, such as using &lt;strong&gt;bold&lt;/strong&gt;, &lt;em&gt;italics&lt;/em&gt; or bullet points. For data security reasons, only certain formatting is allowed.&lt;/p&gt;
&lt;h2 id=&#34;use-as-record-title&#34;&gt;Use as record title&lt;/h2&gt;
&lt;p&gt;The user interface has the ability to highlight the importance of certain fields by showing their contents in large font at the top of the record data. For example, a Company Name field may be the record title for an organisation record.&lt;/p&gt;
&lt;p&gt;This option can be selected for multiple fields in a table. In that case, the first field will be the main title, others will appear as subtitles.&lt;/p&gt;
&lt;h3 id=&#34;preventing-duplicates&#34;&gt;Preventing duplicates&lt;/h3&gt;
&lt;p&gt;Enabling the &amp;lsquo;use as record title&amp;rsquo; option also has the effect of enabling duplicate detection. The system will detect when a value is entered that is close to an existing value in the system. Any &amp;lsquo;close&amp;rsquo; values that are found are displayed as links to the relevant records.&lt;/p&gt;
&lt;p&gt;This can be useful when e.g. entering company names. Although a field can be marked &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#unique&#34;&gt;unique&lt;/a&gt; to prevent exact duplicates, that won&amp;rsquo;t pick up near matches, which this duplicate detection will. For example, &amp;lsquo;The Universoty Of Bristol&amp;rsquo; and &amp;lsquo;University Of Bristol (UOB)&amp;rsquo; will be detected as close matches, or &amp;lsquo;agileBase&amp;rsquo; and &amp;lsquo;agileBase Ltd&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;The system uses &lt;a href=&#34;https://www.postgresql.org/docs/current/pgtrgm.html&#34;&gt;trigram matching&lt;/a&gt; to detect similar values.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Relation Field Options</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-options/relation-field-options/</link>
      <pubDate>Tue, 12 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-options/relation-field-options/</guid>
      <description>
        
        
        &lt;p&gt;Relations between tables are the &amp;lsquo;glue&amp;rsquo; that holds together an application build using agileBase. If you&amp;rsquo;d like to learn more about this fundamental concept, please check out the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/&#34;&gt;relational database concepts&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Some of the options for a relation field determine the nature of the links between tables, which can have a great effect on how an app works, so it&amp;rsquo;s very useful to know about them.&lt;/p&gt;
&lt;h2 id=&#34;one-to-one-only&#34;&gt;One to one only&lt;/h2&gt;
&lt;p&gt;By default, a relation is a &amp;lsquo;many to one&amp;rsquo;. For example if a relation field in a contacts table links to an organisation, that organisation can have many contacts linked. If an ingredient links to a recipe, that recipe can have many ingredients. One customer can have many orders - examples are numerous.&lt;/p&gt;
&lt;p&gt;If a relation is marked as &amp;lsquo;one to one only&amp;rsquo;, then that behaviour is changed so that only one &amp;lsquo;child&amp;rsquo; record of this type is allowed for a particular &amp;lsquo;parent&amp;rsquo; record.&lt;/p&gt;
&lt;p&gt;When is this useful?&lt;/p&gt;
&lt;p&gt;Take the case of an ingredient record. You may want to record nutritional information, chemical composition and allergens for example. With each type of date stored in a separate table, linked by a one-to-one relation, these can be separated out on the screen into &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/&#34;&gt;tabs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The advantages of doing that, as opposed to just adding all the fields into different blocks in a single table are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The user interface becomes clearer to navigate, especially if you have dozens of fields in each section&lt;/li&gt;
&lt;li&gt;Different privileges can easily be assigned to different tables. For example, you may want only certain people to be able to update allergen information, with others able to view but not edit the data.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;do-not-use-session-record-for-new-items&#34;&gt;Do not use session record for new items&lt;/h2&gt;
&lt;p&gt;This is ticked by default. When un-ticked, this means that when you add a new record, the relation field will automatically be populated with a link to the last &amp;lsquo;parent&amp;rsquo; item you were looking at. For example, if you edit an organisation, then move away somewhere else in the system, finally load a contacts screen and create a new contact, that contact will link to the organisation you were editing (assuming there&amp;rsquo;s a relation field linking contacts and organisations).&lt;/p&gt;
&lt;h2 id=&#34;on-parent-delete&#34;&gt;On parent delete&lt;/h2&gt;
&lt;p&gt;This is an important option for controlling what happens when a parent record is deleted.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s assume we have a table of customers and one of invoices, each invoice linked to a customer by a relation field in the invoices table, so the invoice is a &amp;lsquo;child record&amp;rsquo; of the customer. What would happen if a customer is deleted? This setting controls that and there are three options.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;disallow deletion (the default)
&lt;ul&gt;
&lt;li&gt;the user is prevented from deleting the parent record. They have to manually delete the child record before being allowed to delete the parent.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;This is the safest option and the default&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;cascade delete
&lt;ul&gt;
&lt;li&gt;the user is allowed to delete the parent and when the parent is deleted, &lt;strong&gt;child records are deleted as well&lt;/strong&gt;. The user is still shown a prompt asking if they&amp;rsquo;re sure they want to do this.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;make orphan
&lt;ul&gt;
&lt;li&gt;when the parent is deleted, the child record is retained, but un-linked from the parent. In our invoice/customer example, we would be left with an invoice not linked to any particular customer&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that this option is set on the &lt;em&gt;child&lt;/em&gt; relation field, not on the parent side. Therefore you can have different rules for different child tables. A good practice is to set this to &lt;em&gt;disallow deletion&lt;/em&gt; for any important information in the system, that you wouldn&amp;rsquo;t want to be lost (like invoices) and for other tables choose one of the other options appropriately.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;value-to-display&#34;&gt;Value to display&lt;/h2&gt;
&lt;p&gt;The field from the parent table that easily identified the record, to show in the child editing form. For example, for the &amp;lsquo;company&amp;rsquo; relation field in a contacts table, you might select &amp;lsquo;company name&amp;rsquo;.&lt;/p&gt;
&lt;h2 id=&#34;secondary-value-to-display&#34;&gt;Secondary value to display&lt;/h2&gt;
&lt;p&gt;For additional context, a secondary identifying field from the parent record can be chosen. For example, as well as the name of a company, you may want to show the city or country they&amp;rsquo;re in.&lt;/p&gt;
&lt;p&gt;This field doesn&amp;rsquo;t have to be directly from the parent table, it can also be any field in the &lt;strong&gt;view to use&lt;/strong&gt; selected (the below option), including a calculation, which opens up more display possibilities, e.g. concatenating the values from multiple fields together.&lt;/p&gt;
&lt;h2 id=&#34;view-to-use&#34;&gt;View to use&lt;/h2&gt;
&lt;p&gt;When the user is selecting a parent record to link to a particular child, they will be able to use this view to show a list of parent records to choose from. Therefore the view must be created from the parent table.&lt;/p&gt;
&lt;p&gt;They will be able to filter on any field in the view to search for a record.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Using pre-set &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/filters/&#34;&gt;view filters&lt;/a&gt; to narrow down the list of relevant records can be helpful, e.g. if only records of a certain category are required.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;use-only-given-values&#34;&gt;Use only given values&lt;/h2&gt;
&lt;p&gt;When this is un-ticked, allow the user to create a new parent record directly from the child record&amp;rsquo;s editing screen. Relation fields allow you to type the name of a parent record to find and select one. If no matches are found, a prompt will appear allowing the user to create one.&lt;/p&gt;
&lt;h2 id=&#34;show-navigation-link&#34;&gt;Show navigation link&lt;/h2&gt;
&lt;p&gt;When this is ticked (as it is by default), allow the user to navigate from a record containing this field to the one that the relation links to. For example, if a contacts table contains a relation to the organisations table, then when a user views a contact, allow them to navigate to the related organisation by clicking a navigation icon next to the field.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Tabs</title>
      <link>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/</link>
      <pubDate>Mon, 04 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/</guid>
      <description>
        
        
        &lt;p&gt;Tabs are one way of exposing relationships between tables, to allow the user to navigate the structure of an application. For example, in a companies table, a contacts tab may show all the people employed at that particular company.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The user interface can display more than two levels of structure on screen in other ways (e.g. showing a menu in a tab) and wherever the user is, they can navigate up or down the hierarchy of data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;adding-a-tab&#34;&gt;Adding a tab&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Expand the &lt;em&gt;Build Tables&lt;/em&gt; menu in the lefthand sidebar&lt;/li&gt;
&lt;li&gt;Select the table you wish to add a tab to&lt;/li&gt;
&lt;li&gt;Click the pencil icon in the toolbar to edit the table, then select the table&amp;rsquo;s &lt;em&gt;manage&lt;/em&gt; tab&lt;/li&gt;
&lt;li&gt;Scroll down to the bottom of the form&lt;/li&gt;
&lt;li&gt;Under &amp;lsquo;Choose child tabs for the form&amp;rsquo;, select an option in the &lt;em&gt;Add a tab&lt;/em&gt; dropdown&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;tab-types&#34;&gt;Tab types&lt;/h2&gt;
&lt;p&gt;There are two types of tab, those which show a &lt;strong&gt;single record&lt;/strong&gt; and those which show &lt;strong&gt;multiple records&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The type used depends on the relation field in the child table used in the tab, which links to the main table. If it is &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/relation-field-options/#one-to-one-only&#34;&gt;one-to-one&lt;/a&gt;, then a single record is shown in the tab. If it&amp;rsquo;s &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/table-layouts/&#34;&gt;one to many&lt;/a&gt;, then a view appears embedded in the tab, with which the user can choose a record to edit.&lt;/p&gt;
&lt;p&gt;A one to one example may be showing a tab of specification information against an ingredient for example.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/tab-one-to-one.png&#34; alt=&#34;one to one tab&#34;&gt;&lt;/p&gt;
&lt;p&gt;A one to many may be a list of suppliers who supply that ingredient.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/tab-one-to-many.png&#34; alt=&#34;one to many tab&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;tab-options&#34;&gt;Tab options&lt;/h2&gt;
&lt;p&gt;Typically, these options are only needed to finnesse an application. They can be useful to look at once the core of the structure is built.&lt;/p&gt;
&lt;h3 id=&#34;tab-view&#34;&gt;Tab view&lt;/h3&gt;
&lt;p&gt;For one to many tabs, which &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;view&lt;/a&gt; to use to show items. By creating a specific view to use for the tab, you can control which fields are displayed in which order, add calculations, filter those which are shown etc.&lt;/p&gt;
&lt;p&gt;If the view contains one or more charts, those charts will also be shown when opening the tab, filtered to show only data for the parent record containing the tab (in the same way that the records to display in the tab are filtered).&lt;/p&gt;
&lt;h3 id=&#34;populate-from-template&#34;&gt;Populate from template&lt;/h3&gt;
&lt;p&gt;Under a tab, a button allows the user to add records. For example in the contacts tab of an organisation, they would be able to add a new contact.&lt;/p&gt;
&lt;p&gt;However, in some situations you want to pre-populate the tab with records, rather than make the user create each one manually. An example might be order lines for a customer order in a telesales system. The order lines could be initially pre-populated with regular items the customer orders.&lt;/p&gt;
&lt;p&gt;One way of doing that is to use the &amp;lsquo;Populate from template&amp;rsquo; view, first creating a new view to use for this purpose. The view must contain the record ID field of the parent table (e.g. customer orders in our example). When the user clicks on the tab, if there are no records present yet, it will prompt to populate the tab. Each row from the view where the record ID matches that of the parent record (cutomer order) will be used to create a record in the tab.&lt;/p&gt;
&lt;p&gt;Any calculations in the view &lt;strong&gt;with the same name&lt;/strong&gt; as a field in the tab table will be used to populate values in the records.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Another way of auto-populating data is to use a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/#when-a-records-created-run-this-workflow&#34;&gt;workflow which runs on record creation&lt;/a&gt; or in the background. You can choose whichever method works best for a particular purpose.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;show-only-if-in-view&#34;&gt;Show only if in view&lt;/h3&gt;
&lt;p&gt;This option allows you to control tab visibility - whether the tab is visible on screen or not at any time depends on whether the main record appears in the view chosen. This works exactly the same way as &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#show-if-record-in-view&#34;&gt;field visibility&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;colour-from-view&#34;&gt;Colour from view&lt;/h3&gt;
&lt;p&gt;The colour of each tab can be chosen. For example, different steps of a process may each be represented by a tab. Once a step is complete, the tab may be coloured green.&lt;/p&gt;
&lt;p&gt;To set this up, create a view from the main (parent) table. It should contain a text calculation called &amp;lsquo;colour&amp;rsquo; which outputs the name of a colour e.g. green, or a blank value for no colour. The colour names are the same as those for &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/#flag-records-with-colour&#34;&gt;record flagging&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;name&#34;&gt;Name&lt;/h3&gt;
&lt;p&gt;By default the tab is named the same as the table used. However, you can override that here.&lt;/p&gt;
&lt;h3 id=&#34;use-inline-editing&#34;&gt;Use inline editing&lt;/h3&gt;
&lt;p&gt;Speed up intensive data entry by allowing each field in the tab view to be edited inline. Here&amp;rsquo;s an example using an order processing system.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/tab-inline-edit.png&#34; alt=&#34;tab inline editing&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;show-relation-fields&#34;&gt;Show relation fields&lt;/h3&gt;
&lt;p&gt;If this is un-ticked (which it is by default), any relation fields in the tab table will be hidden. This can be useful if you want to reduce the complexity exposed to the user. They can load all data including relations by navigating to the full record.&lt;/p&gt;
&lt;h3 id=&#34;choose-a-record-when-a-new-item-is-added&#34;&gt;Choose a record when a new item is added&lt;/h3&gt;
&lt;p&gt;Used when a tab shows a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/#a-more-complex-example&#34;&gt;join (also called a junction) table&lt;/a&gt;. To continue the example from that page, when adding a link between supplier and raw materials, if the raw materials table had a tab showing links, this option would cause the user to be immediately prompted for a supplier when adding a link.&lt;/p&gt;
&lt;h3 id=&#34;accept-emails-from-parent-table&#34;&gt;Accept emails from parent table&lt;/h3&gt;
&lt;p&gt;Redirect any incoming emails to the parent table to be stored in this tab. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/#accept-emails-to-this-address&#34;&gt;table options&lt;/a&gt; for details of receiving emails.&lt;/p&gt;
&lt;h2 id=&#34;multiple-tabs-for-the-same-table&#34;&gt;Multiple tabs for the same table&lt;/h2&gt;
&lt;p&gt;A final note about tabs. In a small number of cases, one table A may have two relations to the &lt;strong&gt;same&lt;/strong&gt; table B. For example, a record of a contract between two parties may have a relation to the customer and supplier, both of which are records in an organisations table.&lt;/p&gt;
&lt;p&gt;In this case, you may want to add two tabs to the organisations table, one to show contracts for which a particular organisation is a customer, another for which they are a supplier.&lt;/p&gt;
&lt;p&gt;You can do that - just add two tabs for the same table. The system will use the first relation it finds for the first tab, the second for the next.&lt;/p&gt;
&lt;p&gt;Another example is a recursive Bill Of Materials (BOM) system where a join table may link to a parent item and a child item.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: To grandchild records</title>
      <link>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/to-grandchild-records/</link>
      <pubDate>Mon, 04 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/to-grandchild-records/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/&#34;&gt;Tabs&lt;/a&gt; allow navigation from a parent record to a child, e.g. an organisation to a contact, order to order line, recipe to ingredient etc.&lt;/p&gt;
&lt;p&gt;Of course, that child record may itself have subsidiary records of its own, e.g. a contact may have a tab for their training records.&lt;/p&gt;
&lt;p&gt;When that&amp;rsquo;s the case, agileBase exposes both tiers of data on screen so the user can jump from the top level, in this example the organisation, directly to a contact&amp;rsquo;s training records.&lt;/p&gt;
&lt;p&gt;This type of navigation manifests in different ways according to the setup.&lt;/p&gt;
&lt;p&gt;If a child links to the parent with a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/relation-field-options/#one-to-one-only&#34;&gt;one-to-one relation&lt;/a&gt; then links to &amp;lsquo;grandchildren&amp;rsquo; are displayed by a menu in a tab. Here&amp;rsquo;s a menu showing the various grandchild items under a product&amp;rsquo;s specification.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/tab-menu.png&#34; alt=&#34;tab menu&#34;&gt;&lt;/p&gt;
&lt;p&gt;If it&amp;rsquo;s a many-to-one, then grandchildren are represented by blocks at the end of the record.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/grandchild-blocks.png&#34; alt=&#34;grandchild blocks&#34;&gt;&lt;/p&gt;
&lt;p&gt;Finally, in the special case when a grandchild tab&amp;rsquo;s tab view contains the ID of both its immediate parent and the parent above that, then the grandchild contents are shown directly, underneath the child record. Here&amp;rsquo;s an example where there&amp;rsquo;s a three tier structure of&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;supplier approval -&amp;gt; risk assessment -&amp;gt; risk assessment scores.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When the user looks at a supplier approval record, the risk assessment summary and scores can both be seen at the same time.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Sensitive data</title>
      <link>https://docs.agilebase.co.uk/docs/tables/sensitive-data/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/sensitive-data/</guid>
      <description>
        
        
        &lt;p&gt;In a table&amp;rsquo;s &lt;em&gt;manage&lt;/em&gt; tab, there are two options which are worth considering if the data is storing commercially sensitive information (plenty of information in most customer systems falls under this category!) or personal information as defined by EU General Data Protection Regulations (GDPR).&lt;/p&gt;
&lt;p&gt;When either option is ticked, two controls appear.&lt;/p&gt;
&lt;h2 id=&#34;notify-administrators-on-export&#34;&gt;Notify administrators on export&lt;/h2&gt;
&lt;p&gt;Here you can enter a number. When a user exports more than that number of records at once to spreadsheet, all administrators (users with the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/#assigning-the-administrator-privilege&#34;&gt;administrator&lt;/a&gt; privilege) are notified by email.&lt;/p&gt;
&lt;h2 id=&#34;disallow-exports&#34;&gt;Disallow exports&lt;/h2&gt;
&lt;p&gt;This is also a number, representing a hard limit on the number of records which can be exported from this table at any one time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;See also &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/exporting/&#34;&gt;exporting&lt;/a&gt; for how to set up export privileges. Exports are disallowed by default.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When &lt;strong&gt;This table contains personal data, sensitive data or data about children&lt;/strong&gt; is ticked, a number of additional data entry boxes appear, to let you record the GDPR-relevant considerations.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: This is for informational purposes only and doesn&amp;rsquo;t by itself ensure compliance with the GDPR!. We recommend looking at the &lt;a href=&#34;https://ico.org.uk/for-organisations/guide-to-the-general-data-protection-regulation-gdpr/&#34;&gt;ICO website&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;potential-exfiltration-information&#34;&gt;Potential exfiltration information&lt;/h2&gt;
&lt;p&gt;When either option is ticked, some additional information is shown that can highlight opportunities for data to be exported.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Any API views which send data to third party systems&lt;/li&gt;
&lt;li&gt;Any roles which are set up to allow exporting and which have users with privileges to see the table data&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Date Field Options</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-options/date-field-options/</link>
      <pubDate>Tue, 12 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-options/date-field-options/</guid>
      <description>
        
        
        &lt;h2 id=&#34;accuracy&#34;&gt;Accuracy&lt;/h2&gt;
&lt;p&gt;Whether to record a date as just a year, year and month, year month and day, or with a time: hours, hh:mm, hh:mm:ss.&lt;/p&gt;
&lt;h2 id=&#34;use-current-time-for-new-records&#34;&gt;Use current time for new records&lt;/h2&gt;
&lt;p&gt;If ticked, set the value of this field to the current time when a record is created&lt;/p&gt;
&lt;h2 id=&#34;date-format&#34;&gt;Date format&lt;/h2&gt;
&lt;p&gt;The format to display in views. Note this doesn&amp;rsquo;t affect data entry screens, which use the browser&amp;rsquo;s standard date picker, which may customise to the user&amp;rsquo;s region.&lt;/p&gt;
&lt;h2 id=&#34;min-years-age--max-years-age&#34;&gt;Min. years age / Max. years age&lt;/h2&gt;
&lt;p&gt;These two options specify the valid range of allowable dates for the field. By default values up to 10 years in the future or 100 years in the past are allowed.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Other types of date check can be added using the &lt;a href=&#34;&#34;&gt;Advanced field checks&lt;/a&gt; options for a table&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Separators</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/separators/</link>
      <pubDate>Thu, 07 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/separators/</guid>
      <description>
        
        
        &lt;p&gt;A separator field doesn&amp;rsquo;t actually store any data, but is used as a marker of the start of a block of fields. Create a separator  and move it to just before the field which should be the first in a block.&lt;/p&gt;
&lt;p&gt;Depending on the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/table-layouts/&#34;&gt;table layout&lt;/a&gt;, these blocks will be displayed in different ways, but in all cases will form a distinct group of fields.&lt;/p&gt;
&lt;p&gt;Inline help can be added for separators in the same way as for normal fields, by adding a field description. This help text will apply to the whole block of fields created by a separator.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a system with several&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/blocks-one-expanded.png&#34; alt=&#34;blocks&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Upwards Navigation</title>
      <link>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/upwards-navigation/</link>
      <pubDate>Mon, 04 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/upwards-navigation/</guid>
      <description>
        
        
        &lt;p&gt;Whenever a relation field is used in a table, the user has the option to navigate to the related record by clicking a link next to the relation.&lt;/p&gt;
&lt;p&gt;However its useful to know that if the relation is one of the &lt;strong&gt;first fields&lt;/strong&gt; in the table, i.e. at the top of the form, then it will be treated as having greater importance by the user interface. In this case, the relation will appear as a relation heading, making it clear the &amp;lsquo;parent-child&amp;rsquo; relationship i.e. that one record &amp;lsquo;belongs&amp;rsquo; to another.&lt;/p&gt;
&lt;p&gt;For example, in a contacts table, if the relation to a contact&amp;rsquo;s organisation is one of the first fields in the form, the organisation name will appear as a heading for the contact record. It will be a hyperlink so can be used to navigate to the parent organisation easily.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A record can have multiple &amp;lsquo;parents&amp;rsquo; of different types, e.g. a contact may belong to both an organisation and a site or department within that organisation.&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Built In Charting</title>
      <link>https://docs.agilebase.co.uk/docs/charting/built-in-charting/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/charting/built-in-charting/</guid>
      <description>
        
        
        &lt;p&gt;Charting is not strictly an administrator function, as any user can create charts and other data visualisations, such as maps and word clouds.&lt;/p&gt;
&lt;p&gt;However, it&amp;rsquo;s useful for administrators to know how the system works in outline, so they can support users and also because creating charts may be a key part of building an application.&lt;/p&gt;
&lt;p&gt;In agileBase, charts &amp;lsquo;belong to&amp;rsquo; a view. Each view can have a collection of charts. Users can toggle between viewing data rows and looking at charts based on those rows. When a user filters data using the quick filter boxes at the top of the screen, the data or charts (whichever is shown) will update to match the filtered results.&lt;/p&gt;
&lt;h2 id=&#34;creating-a-chart&#34;&gt;Creating a chart&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;In the tiles interface, open the tile and view to use as a source of chart data&lt;/li&gt;
&lt;li&gt;Click the charts button to the left of the data rows displayed&lt;/li&gt;
&lt;li&gt;Click the &lt;em&gt;add/edit chart or map&lt;/em&gt; button&lt;/li&gt;
&lt;li&gt;Follow each of the steps (1 - 3) on screen to build the chart&lt;/li&gt;
&lt;li&gt;In the last step, give a name to the chart and press &lt;em&gt;save&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When choosing a type of chart in step 3, small previews will be displayed based on some of the chart data. However some chart types may display a message rather than a preview. In this case, the chart data selected in step 1 is not applicable for this chart type.&lt;/p&gt;
&lt;p&gt;For example, if in step 1 we have a count of items per year:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/chart-1.png&#34; alt=&#34;Chart - step 1&#34;&gt;&lt;/p&gt;
&lt;p&gt;then the scatter diagram will work but the bubble chart won&amp;rsquo;t. For the bubble chart, &lt;strong&gt;two&lt;/strong&gt; y-axis measurements are required, one to specify the position of the bubble on the y-axis, plus another to determine the relative size of the bubble.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/chart-bubble.png&#34; alt=&#34;Chart - step 3&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;embedding-charts-in-forms&#34;&gt;Embedding charts in forms&lt;/h2&gt;
&lt;p&gt;Charts can be embedded into tables. When the user opens a record, the chart will automatically filter to show data pertaining to that record only.&lt;/p&gt;
&lt;p&gt;So for example if you have a chart of sales per month per customer, which you embed into a customer table, it will show as sales per month, only for the customer on screen.&lt;/p&gt;
&lt;p&gt;This is accomplished by using a view with chart(s) as a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/referenced-data/&#34;&gt;cross-referenced panel&lt;/a&gt; - see that page for setup information.&lt;/p&gt;
&lt;h2 id=&#34;embedding-charts-in-tabs&#34;&gt;Embedding charts in tabs&lt;/h2&gt;
&lt;p&gt;When a tab contains many &amp;lsquo;child&amp;rsquo; records, e.g. an organisation may have a tab which contains financial data for the past 10 years, then charts can display above the rows of data when the tab&amp;rsquo;s opened.&lt;/p&gt;
&lt;p&gt;To accomplish this, simply add a chart to the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/#tab-view&#34;&gt;view used by the tab&lt;/a&gt;. When the tab is opened, the chart will automatically be filtered to only show data pertaining to the parent table, in a similar fashion to how charts embedded using cross-referenced panels are filtered, as above.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/endole-example.png&#34; alt=&#34;Endole example&#34; title=&#34;Example of a chart in a tab&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;subscribing-users-or-roles-to-charts&#34;&gt;Subscribing users or roles to charts&lt;/h2&gt;
&lt;p&gt;Users can be subscribed to charts (or subscribe themselves) to receive them by email.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In a view with some charts, open the charts&lt;/li&gt;
&lt;li&gt;Next to &amp;lsquo;Send these charts to me&amp;rsquo;, select a frequency, e.g. monthly.&lt;/li&gt;
&lt;li&gt;Under &amp;lsquo;Include data too&amp;rsquo;, select tabular data to include in the email too - various options will be displayed e.g. all new rows since the last email&lt;/li&gt;
&lt;li&gt;Next to &amp;lsquo;roles&amp;rsquo;, select a role to send the charts and data to. All users in the role will be subscribed. Multiple roles can be added&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;If the view has no charts, this function can be used to send tabular data only&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;going-further&#34;&gt;Going further&lt;/h2&gt;
&lt;p&gt;agileBase can also integrate with third party business intelligence and reporting tools, using the API Creator. A worked example is &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/pull-example-power-bi/&#34;&gt;here for Power BI&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Business Intelligence</title>
      <link>https://docs.agilebase.co.uk/docs/charting/business-intelligence/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/charting/business-intelligence/</guid>
      <description>
        
        
        &lt;blockquote&gt;
&lt;p&gt;Before setting up a BI connection, please be aware of the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/charting#privacy-and-data-security&#34;&gt;data privacy and security&lt;/a&gt; considerations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At agileBase we host an instance of &lt;a href=&#34;https://superset.apache.org&#34;&gt;Apache Superset&lt;/a&gt; which can be used by customers to create reporting dashboards.&lt;/p&gt;
&lt;p&gt;However the setup processes below also applies to third party tools such as Power BI.&lt;/p&gt;
&lt;h2 id=&#34;initial-setup&#34;&gt;Initial Setup&lt;/h2&gt;
&lt;p&gt;The first step is to &lt;a href=&#34;https://agilechilli.com/contact-us/&#34;&gt;contact us&lt;/a&gt; to request we set up an Apache Superset account (this will also allow connections from other BI tools). We will then set up as many Superset users you require - there is no ongoing cost for these login accounts.&lt;/p&gt;
&lt;p&gt;Note that Superset logins are separate from agileBase ones - the usernames and passwords can be different.&lt;/p&gt;
&lt;h2 id=&#34;sending-data-to-superset&#34;&gt;Sending data to Superset&lt;/h2&gt;
&lt;p&gt;A developer with MANAGE privileges on a view&amp;rsquo;s parent table can set this up.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In agileBase, open the view you wish to report on. Ensure it has all the necessary fields and calculations in it which you want to report on. If not, add them before continuing.&lt;/li&gt;
&lt;li&gt;Click the charting icon to view the chart setup interface&lt;/li&gt;
&lt;li&gt;At the bottom of the screen, tick &amp;lsquo;send data to a shareable dashboard&amp;rsquo;. As this makes data available &lt;a href=&#34;charting#privacy-and-data-security&#34;&gt;outside of agileBase&lt;/a&gt;, you will be asked to confirm you will treat the data in a way which maintains privacy and security before enabling the feature.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Within a few seconds, the data will then be available in Superset.&lt;/p&gt;
&lt;h3 id=&#34;changes&#34;&gt;Changes&lt;/h3&gt;
&lt;p&gt;It&amp;rsquo;s easy for developers to make changes to views in agileBase, for example adding / removing fields, changing calculations or just renaming a view.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;However, when the BI connection is active, bear in mind that certain changes will disable the connection. The reason is that once data is set up to transfer to a separate system, the other system typically expects it to remain in the same format.&lt;/p&gt;
&lt;p&gt;That means that if you rename the view or move it, or rename/delete fields and calculations, you may afterwards need to re-connect BI by repeating step 3 above. Additionally, check your charts in Superset, to see if they need re-creating.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;creating-dashboards-in-superset&#34;&gt;Creating dashboards in Superset&lt;/h2&gt;
&lt;p&gt;Now that you&amp;rsquo;ve set up agileBase to make data available to Superset, you can create charts and dashboards there.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a &amp;lsquo;dataset&amp;rsquo; in Superset, corresponding to the view you set up above
&lt;ol&gt;
&lt;li&gt;From the &lt;em&gt;Data&lt;/em&gt; menu at the top, select &lt;em&gt;datasets&lt;/em&gt;, then click the &lt;em&gt;+ dataset&lt;/em&gt; button&lt;/li&gt;
&lt;li&gt;Under &lt;em&gt;Schema&lt;/em&gt;, select your company name&lt;/li&gt;
&lt;li&gt;Under &lt;em&gt;Table&lt;/em&gt;, select the name of the view that you set up above&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;ADD&lt;/em&gt; at the bottom of the dialog (you may need to scroll down)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Create the chart
&lt;ol&gt;
&lt;li&gt;Click &lt;em&gt;Charts&lt;/em&gt; at the top, then &lt;em&gt;+ Chart&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Select the dataset created above&lt;/li&gt;
&lt;li&gt;Choose a chart type, then &lt;em&gt;Create New Chart&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Drag metrics (e.g. &amp;lsquo;COUNT&amp;rsquo;) and fields from the left into the appropriate areas in the middle column&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;Save&lt;/em&gt; and Superset will prompt you to add the chart to a new or existing dashboard&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Access the dashboard from the &lt;em&gt;Dashboards&lt;/em&gt; menu at the top&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For more details on creating charts and editing dashboards, including video walkthroughs, see &lt;a href=&#34;https://docs.preset.io/docs/create-a-chart&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The first view sent to Superset is free, further views can be purchased in bundles.&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Changing Field Types</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-types/changing-field-types/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-types/changing-field-types/</guid>
      <description>
        
        
        &lt;p&gt;Once a field has been created, the type can&amp;rsquo;t be changed with the flick of a switch. However there is an easy to follow process to accomplish this.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Rename the field to &lt;code&gt;[fieldname] old&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add a new field &lt;code&gt;[fieldname]&lt;/code&gt;. This means that any calculations that reference the field won&amp;rsquo;t have to be changed and won&amp;rsquo;t break due to mis-matching field names&lt;/li&gt;
&lt;li&gt;Copy all values from one field to another. The easiest way is to use a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Try to delete the old field. If any views reference it, the delete will fail and a list of them will be shown&lt;/li&gt;
&lt;li&gt;Edit all those views
&lt;ul&gt;
&lt;li&gt;remove the old field and add the new, to all fields, filters etc.&lt;/li&gt;
&lt;li&gt;update all calculations that reference the field e.g. add a space to the end of all of them. That will refresh them to reference the new field rather than the old&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Finally, delete the old field&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Before starting, it will be worth ensuring that data won&amp;rsquo;t change during the process, for example by making the data read-only to all users, or requesting they don&amp;rsquo;t edit field values until finished.&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Data Integrity Checks</title>
      <link>https://docs.agilebase.co.uk/docs/tables/data-integrity-checks/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/data-integrity-checks/</guid>
      <description>
        
        
        &lt;p&gt;It can be important to ensure that certain rules are followed when data is entered, either manually by a user, by an incoming &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;API request&lt;/a&gt; or someone filling in a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-chaser/&#34;&gt;chaser&lt;/a&gt; response.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When designing applications, just be aware there is sometimes a trade-off between the ideal of data integrity and everyday concerns.&lt;/p&gt;
&lt;p&gt;For example, you may like to force users to always provide an email address for contacts but in a small minority of cases, they may not have that available.&lt;/p&gt;
&lt;p&gt;agileBase has options for handling soft validation (highlighting errors or notifying someone) as well as the hard validation (disallowing invalid data entry) options discussed here. For example, you could&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;Create a view&lt;/a&gt;to show all records with errors, for later checking&lt;/li&gt;
&lt;li&gt;Set up a workflow or chaser to &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-chaser/&#34;&gt;chase someone&lt;/a&gt; when errors are found&lt;/li&gt;
&lt;li&gt;Use the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;API&lt;/a&gt; to send a message to your internal messaging system e.g. Slack&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;That said, these are the ways in which you can strictly enforce data integrity.&lt;/p&gt;
&lt;h2 id=&#34;at-an-individual-field-level&#34;&gt;At an individual field level&lt;/h2&gt;
&lt;p&gt;Basic rules can be applied with &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/&#34;&gt;field options&lt;/a&gt;. for example a field may be set as mandatory, or it must contain unique values (no duplicates).&lt;/p&gt;
&lt;h2 id=&#34;advanced-field-checks&#34;&gt;Advanced field checks&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Expand the &lt;em&gt;Build Tables&lt;/em&gt; menu in the lefthand sidebar&lt;/li&gt;
&lt;li&gt;Select the table you wish to add rules to&lt;/li&gt;
&lt;li&gt;Click the pencil icon in the toolbar to edit the table, then select the table&amp;rsquo;s &lt;em&gt;manage&lt;/em&gt; tab&lt;/li&gt;
&lt;li&gt;Click the &lt;em&gt;Checks&lt;/em&gt; button&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here you can add more complex checks, such as the value must be longer or shorter than a certain length, be within a date range or match a &lt;a href=&#34;https://en.wikipedia.org/wiki/Regular_expression&#34;&gt;regular expression&lt;/a&gt;. The list of checks available is the same as that used in &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/filters/&#34;&gt;view filters&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;multi-field-unique-constraints&#34;&gt;Multi-field unique constraints&lt;/h2&gt;
&lt;p&gt;Access these with the &lt;em&gt;Unique&lt;/em&gt; button under the &lt;em&gt;Checks&lt;/em&gt; button.&lt;/p&gt;
&lt;p&gt;Sometimes, fields must be unique &lt;strong&gt;in combination&lt;/strong&gt;. For example, imagine you have a system for recording customer complaints. One of the fields might be a customer&amp;rsquo;s reference number, another a relation to the customer record.&lt;/p&gt;
&lt;p&gt;You want to avoid duplicates being entered, so could make the customer reference number unique. However it could be that two different customers could use the same reference number independently, so that wouldn&amp;rsquo;t really work.&lt;/p&gt;
&lt;p&gt;The solution is to add a multi-field unique constraint on customer and customer reference number. That way, a reference number won&amp;rsquo;t be able to be re-used for a complaint from the same customer, but more than one customer is allowed to use the same reference.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Options</title>
      <link>https://docs.agilebase.co.uk/docs/tables/options/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/options/</guid>
      <description>
        
        
        &lt;p&gt;To access these options&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Expand the &lt;em&gt;Build Tables&lt;/em&gt; menu in the lefthand sidebar&lt;/li&gt;
&lt;li&gt;Select the table you wish to edit&lt;/li&gt;
&lt;li&gt;Click the pencil icon in the toolbar to edit the table, then select the table&amp;rsquo;s &lt;em&gt;manage&lt;/em&gt; tab&lt;/li&gt;
&lt;li&gt;Click the &lt;em&gt;Options&lt;/em&gt; button&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;allow-add&#34;&gt;Allow add&lt;/h2&gt;
&lt;p&gt;If this is ticked (it is by default), users can add records to the table. Anyone with manage privileges on the table can add tables regardless.&lt;/p&gt;
&lt;h3 id=&#34;only-from-within-tab&#34;&gt;Only from within tab&lt;/h3&gt;
&lt;p&gt;If this is ticked, users can add records but only when accessing this table&amp;rsquo;s form from within a tab of a parent record. This can help ensure that child records are always connected to a parent and aren&amp;rsquo;t created as &amp;lsquo;orphans&amp;rsquo;.&lt;/p&gt;
&lt;h2 id=&#34;allow-clone&#34;&gt;Allow clone&lt;/h2&gt;
&lt;p&gt;(Off by default). Show a clone record button when a user is viewing a record. This makes a simple copy of all data in the record. The contents of tabs are not cloned. A more advanced clone facility can be created with a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflow&lt;/a&gt; if desired.&lt;/p&gt;
&lt;h2 id=&#34;allow-remove&#34;&gt;Allow remove&lt;/h2&gt;
&lt;p&gt;(On by default). Allow records to be deleted by people with EDIT privileges as well as people with MANAGE privileges, who can always delete.&lt;/p&gt;
&lt;h2 id=&#34;allow-share&#34;&gt;Allow share&lt;/h2&gt;
&lt;p&gt;Showa button which allows links to individual records to be shared between users using email. Note - recipients still need a login and relevant privileges to see the record.&lt;/p&gt;
&lt;h2 id=&#34;when-a-records-created-run-this-workflow&#34;&gt;When a record&amp;rsquo;s created, run this workflow&lt;/h2&gt;
&lt;p&gt;Run a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflow&lt;/a&gt; immediately after the creation of a record. The workflow runs after any field default values have been set.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The workflow &amp;lsquo;knows&amp;rsquo; metadata such as which user is logged in, which tile is open etc., so if you want to &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/calculations/#special-functions&#34;&gt;use those in a calculation&lt;/a&gt; in the workflow, you can do.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;run-this-workflow-whenever-each-record-is-viewed&#34;&gt;Run this workflow whenever each record is viewed&lt;/h3&gt;
&lt;p&gt;As well as running the workflow on record creation, also run it whenever a user views a record in this table. Be aware this may have a performance impact for users, if the workflow is resource intensive and/or multi-step.&lt;/p&gt;
&lt;h2 id=&#34;data-entry-from-external-sources&#34;&gt;Data entry from external sources&lt;/h2&gt;
&lt;p&gt;The options in this section are for configuring the table to allow an API request from an external source to create and edit records. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;API use&lt;/a&gt;for more information.&lt;/p&gt;
&lt;h2 id=&#34;other-options&#34;&gt;Other options&lt;/h2&gt;
&lt;h3 id=&#34;records-lockable&#34;&gt;Records lockable&lt;/h3&gt;
&lt;p&gt;Records can be locked to prevent editing. You may like to do this based on criteria e.g. once a customer order has been sent, it should be locked against further changes.&lt;/p&gt;
&lt;p&gt;To actually lock the record, a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflow&lt;/a&gt; can be used.&lt;/p&gt;
&lt;p&gt;Locked records can be manually unlocked by someone with manage privileges on the table, but only one at a time.&lt;/p&gt;
&lt;h3 id=&#34;email-notifications&#34;&gt;Email notifications&lt;/h3&gt;
&lt;p&gt;When someone adds a comment to a record, when selecting recipients, they have the option to email those recipients, as well as adding the comment to the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;comment stream&lt;/a&gt;. Ticking this table option sets the default to send emails for any comment added to this table. Users can override this on an individual comment basis and recipients can override in their notification preferences.&lt;/p&gt;
&lt;h3 id=&#34;flag-records-with-colour&#34;&gt;Flag records with colour&lt;/h3&gt;
&lt;p&gt;Enter a field name here and add a field with the same name to a view, to flag records. The contents of the field must be one of the colour names as given on the screen. The field added to the view can be a calculation, specifically a hidden calculation. This will flag the view without showing the colour name on screen.&lt;/p&gt;
&lt;p&gt;This option can also be used to colour items in a junction chooser (see tab option: &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/#choose-a-record-when-a-new-item-is-added&#34;&gt;Choose a record when a new item is added&lt;/a&gt;). In the junction table, set this option, then in the view used as a relation picker (set in the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/relation-field-options/#view-to-use&#34;&gt;relation field options&lt;/a&gt;), add the colour calculation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It&amp;rsquo;s also possible to colour individual table fields or calculations in a view (as opposed to this option which flags the whole row). See the options for &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/#colour-words&#34;&gt;field colouring&lt;/a&gt; or &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/calculations/#colouring&#34;&gt;calculation colouring&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;accept-emails-to-this-address&#34;&gt;Accept emails to this address&lt;/h3&gt;
&lt;p&gt;The system can accept incoming emails and attach them to relevant records e.g. attaching an email from a customer to that customer&amp;rsquo;s record.&lt;/p&gt;
&lt;p&gt;A particular email address can be set up to receive emails. The system can be configured to either accept emails from anyone, or just from users. If just from users, then users can forward any emails they receive to the system to have them imported, or BCC the address when sending to people.&lt;/p&gt;
&lt;p&gt;The email text will be logged as a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/comment-feeds/&#34;&gt;comment&lt;/a&gt; against the record, with the full email attached if it is HTML formatted or includes attachments. The table must have a comments field.&lt;/p&gt;
&lt;p&gt;Please &lt;a href=&#34;https://agilechilli.com/contact-us/&#34;&gt;contact us&lt;/a&gt; if you&amp;rsquo;d like to set that up.&lt;/p&gt;
&lt;p&gt;Emails are matched by creating a view containing the email addresses of potential recipients. An incoming email is attached to the record from this view which matches the sender&amp;rsquo;s email address. If there is no match, it is added to a &amp;lsquo;holding bay&amp;rsquo; where users can view and manually attach emails to records.&lt;/p&gt;
&lt;h4 id=&#34;configuring-the-email-address-used&#34;&gt;Configuring the email address used&lt;/h4&gt;
&lt;p&gt;An email address of the form &lt;a href=&#34;mailto:viewname@accountname.domainname&#34;&gt;viewname@accountname.domainname&lt;/a&gt; will be set up, e.g. &lt;a href=&#34;mailto:contacts@mycompany.agilebase.co.uk&#34;&gt;contacts@mycompany.agilebase.co.uk&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;viewname&lt;/em&gt; determines the view which agileBase queries to find the recipient email address. The comment will be added to the matching record in the view&amp;rsquo;s parent table, or a tab of the table, if &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/#accept-emails-from-parent-table&#34;&gt;Accept emails from parent table&lt;/a&gt; is enabled in a tab. If multiple tabs have this option enabled, then the tab with a name also matching &lt;em&gt;viewname&lt;/em&gt; is used&lt;/li&gt;
&lt;li&gt;&lt;em&gt;accountname&lt;/em&gt; determines the company account to look in&lt;/li&gt;
&lt;li&gt;&lt;em&gt;domainname&lt;/em&gt; is the domain name of the agileBase server&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;information&#34;&gt;Information&lt;/h2&gt;
&lt;p&gt;After the options, some structural information is shown, such as which tables depend on this one i.e. have a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/basic-field-types/#relation&#34;&gt;relation&lt;/a&gt; to it, how many fields and views per tile there are. See also the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/usage-reporting/#the-dashboard&#34;&gt;usage dashboard&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Calculation Examples</title>
      <link>https://docs.agilebase.co.uk/docs/views/calculations/examples/</link>
      <pubDate>Tue, 19 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/views/calculations/examples/</guid>
      <description>
        
        
        &lt;p&gt;The database which underpins agileBase is &lt;a href=&#34;https://www.postgresql.org&#34;&gt;PostgreSQL&lt;/a&gt; - &amp;lsquo;The World&amp;rsquo;s Most Advanced Open Source Relational Database&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;This page will just be an introduction to some of the things you can do with calculations.&lt;/p&gt;
&lt;p&gt;A comprehensive definition and reference for all of the functions possible can be found here: &lt;a href=&#34;https://www.postgresql.org/docs/current/functions.html&#34;&gt;https://www.postgresql.org/docs/current/functions.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;example-functions-for-each-type-of-field&#34;&gt;Example functions for each type of field&lt;/h2&gt;
&lt;p&gt;Here are some &amp;lsquo;starters for 10&amp;rsquo; that may be useful day to day.&lt;/p&gt;
&lt;h3 id=&#34;general-functions&#34;&gt;General functions&lt;/h3&gt;
&lt;p&gt;There are a couple of functions that are particularly useful to know about, to keep in your calculations toolkit. These are&lt;/p&gt;
&lt;h4 id=&#34;coalesce&#34;&gt;Coalesce&lt;/h4&gt;
&lt;p&gt;The coalesce function lets you deal sensibly with empty values, which we call &amp;lsquo;null&amp;rsquo; values. Normally, if any field you reference is null, then the result of the calculation is also null. Coalesce is a way to provide a default value. So for example, if a view of customer order lines has a quantity and a price field, but the quantity may be blank, then&lt;/p&gt;
&lt;p&gt;&lt;code&gt;coalesce({quantity}, 0) * {price}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;would calculate the line value, outputting zero if the quantity is not filled in.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Coalesce can be used with more than two arguments - the first non-null value it encounters, from left to right, will be output to be used in further calculation steps&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;case&#34;&gt;Case&lt;/h4&gt;
&lt;p&gt;A case statement can be used to add &amp;lsquo;if/then/else&amp;rsquo; logic. An example is&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;case
  when {due date} is null then &#39;unknown&#39;
  when {due date} &amp;lt; now() then &#39;overdue&#39;
  when {due date} &amp;lt; now() + interval &#39;7 days&#39; then &#39;due soon&#39;
  else &#39;not due yet&#39;
end
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(We&amp;rsquo;ll cover date calculations more below).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note the top clauses of a case statement are evaluated first, so put more specific things at the top if multiple lines may match.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;number-functions&#34;&gt;Number functions&lt;/h3&gt;
&lt;p&gt;Common mathematical functions can be found here: &lt;a href=&#34;https://www.postgresql.org/docs/current/functions-math.html&#34;&gt;https://www.postgresql.org/docs/current/functions-math.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;text-functions&#34;&gt;Text functions&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;{field 1} || &#39; &#39; || {field 2}&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Two vertical bars are used to join bits of text together (this seems an odd choice to use rather than something like an ampersand or + sign, but there you go, that&amp;rsquo;s what it is). A literal piece of text is surrounded by single quotes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;substring({text field} FROM 1 FOR 1)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Extracts the first letter (or other character e.g. number) from some text.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;regexp_replace({full name}, &#39;\\s.*&#39;, &#39;&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A simplistic way of extracting a person&amp;rsquo;s first name from a full name - strip out everything from the first space onwards.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;regexp_replace(
  {account owner},
  &#39;.*\\((.*)\\).*&#39;,
  &#39;\\1&#39;
)
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;A more complex example. Given an &amp;lsquo;account owner&amp;rsquo; value in the format &lt;strong&gt;Forename Surname (username)&lt;/strong&gt;, extract the username, i.e. everything between the brackets.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The last two are slightly more complex because they use a powerful text matching/search and replace facility called &lt;strong&gt;regular expressions&lt;/strong&gt;, or regexes for short. Again, this is a standard facility and there&amp;rsquo;s lots of documentation available on the &lt;a href=&#34;https://www.postgresql.org/docs/current/functions-matching.html#FUNCTIONS-POSIX-REGEXP&#34;&gt;PostgreSQL website&lt;/a&gt; and elsewhere if you&amp;rsquo;d like to learn more.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The only difference from standard to be aware of is that when entering a regex into a calculation in agileBase, you must use two backslashes instead of one.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;like&lt;/code&gt; compares two elements of text and &lt;code&gt;ilike&lt;/code&gt; does so case-insensitively. A percentage sign means &amp;lsquo;match any text&amp;rsquo;. So for example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;case
  when {postcode} ilike &#39;bs%&#39; then &#39;Bristol&#39;
  else &#39;elsewhere&#39;
end
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Outputs &amp;lsquo;Bristol&amp;rsquo; if the postcode field starts with &amp;lsquo;BS&amp;rsquo; (or &amp;lsquo;bs&amp;rsquo;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;date-functions&#34;&gt;Date functions&lt;/h3&gt;
&lt;p&gt;The database has very strong support for working with dates and time - you can do many calculations on them. Here are a few examples.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{date field} + &#39;1 year&#39;::interval&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;adds a year on to the given date&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;You can do the same with months, week, days etc. and combinations like &amp;lsquo;1 week 1 day&amp;rsquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;date_part(&#39;year&#39;, {date field})&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;date_part(&#39;dow&#39;, {date field})&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;These two extract different parts of the date - the first just the year, the second the day of the week as a number 0 - 6. More info is available in the &lt;a href=&#34;https://www.postgresql.org/docs/current/static/functions-datetime.html#FUNCTIONS-DATETIME-EXTRACT%22&#34;&gt;PostgreSQL documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;date_part(&#39;days&#39;, ((date_trunc(&#39;month&#39;, now()) + &#39;1 month&#39;::interval) - now()))&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Works out how many days are left in the current month. This example introduces a couple more date functions:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;now()&lt;/code&gt; gives the current date and time&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date_trunc&lt;/code&gt; &amp;lsquo;truncates&amp;rsquo; a date to the month in this case (in other words rounding it down to the nearest month)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;to_char(&#39;19 May 2020&#39;::timestamp, &#39;Day&#39;)&lt;/code&gt; - outputs &amp;lsquo;Tuesday&amp;rsquo;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;to_char(&#39;19 May 2020&#39;::timestamp, &#39;Mon yyyy&#39;)&lt;/code&gt; - outputs &amp;lsquo;May 2020&amp;rsquo;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/functions-formatting.html&#34;&gt;to_char&lt;/a&gt; formats a date (it also works with numbers)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;date_part(&#39;weeks&#39;,{date field 1} - {date field 2})&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Counts the number of weeks between two dates&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;aggregate-calculations&#34;&gt;Aggregate calculations&lt;/h2&gt;
&lt;p&gt;All of the examples above work within one row, or record, of data. Aggregate calculations are different, the take many rows of data and condense them down into one result - one number, or piece of text, etc.&lt;/p&gt;
&lt;p&gt;They&amp;rsquo;re very useful for creating summaries of data, such as total sales per product, counts of complaints per month per category, total value of an order (summing individual order lines) etc.&lt;/p&gt;
&lt;h3 id=&#34;aggregates-of-child-rows&#34;&gt;Aggregates of child rows&lt;/h3&gt;
&lt;p&gt;To make an aggregate you have to have something to summarise by and something to aggregate. The easiest way of doing this is to create a view with a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/joins/#upwards-and-downwards-joins&#34;&gt;join down&lt;/a&gt; from a parent table to a child. You can then summarise, or group by each parent row and aggregate one (or more) of the fields in the child table.&lt;/p&gt;
&lt;p&gt;For example, if we have an invoices table and an invoice lines table, assuming there is a relation linking each invoice line to its parent invoice:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/creating-a-view/&#34;&gt;create a view&lt;/a&gt; from the invoices table - we&amp;rsquo;ll call it &amp;lsquo;invoice totals&amp;rsquo;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/joins/&#34;&gt;add a join&lt;/a&gt; down to invoice lines&lt;/li&gt;
&lt;li&gt;Add the calculation &lt;code&gt;sum({line total})&lt;/code&gt; to the view&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You should then have a view with just one row per invoice line, showing the invoice total. &lt;strong&gt;sum&lt;/strong&gt; is an example of an aggregate calculation. Another common example is &lt;strong&gt;count&lt;/strong&gt;. If you replaced &lt;code&gt;sum({line total})&lt;/code&gt; with &lt;code&gt;count(*)&lt;/code&gt;, that would count the number of invoice lines in the invoice, instead of totalling the values up.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note - the aggregate calculation groups by all non-aggregate fields in a view. For example, if you added the product name into ou invoice totals view, you&amp;rsquo;d get a total per product per invoice, rather than a total for each whole invoice.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;aggregates-without-child-rows&#34;&gt;Aggregates without child rows&lt;/h3&gt;
&lt;p&gt;There&amp;rsquo;s another way to create aggregates, which can be used without joining down to a child table or view.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In the tiles interface, open the view you wish to edit&lt;/li&gt;
&lt;li&gt;Click your user icon at the top right and select &lt;em&gt;admin - edit view&lt;/em&gt; from the menu&lt;/li&gt;
&lt;li&gt;Tick &lt;em&gt;Group by all non-aggregate fields&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Add any fields you wish to group by to the view. Remove any you don&amp;rsquo;t wish to group by &lt;strong&gt;including any hidden fields&lt;/strong&gt; such as the IDs of joined tables&lt;/li&gt;
&lt;li&gt;Add the aggregate calculation e.g. &lt;code&gt;sum({my field})&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;expanding-rows&#34;&gt;Expanding rows&lt;/h3&gt;
&lt;p&gt;Some functions do the opposite of an aggregate function - rather than condensing and summarising many rows into one, they split one row up into many. For example, if one of your fields is a comma separated list, you could split that up into many rows, one per item in the list.&lt;/p&gt;
&lt;p&gt;Say for example you import data from a form on a website which produces a comma separated list of products ordered.&lt;/p&gt;
&lt;p&gt;Adding the calculation&lt;/p&gt;
&lt;p&gt;&lt;code&gt;regexp_split_to_table({products ordered}, &#39;,&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;would produce one output row per product in the list. That could then be joined to other data in the system such as pricing.&lt;/p&gt;
&lt;h3 id=&#34;window-functions&#34;&gt;Window functions&lt;/h3&gt;
&lt;p&gt;Window functions are somewhat like aggregate functions in that they can act on many rows, not just one. However, they don&amp;rsquo;t condense down into a single row. An example would be calculating a rolling average or cumulative total as each row is shown.&lt;/p&gt;
&lt;p&gt;Effectively, they look at a &amp;lsquo;window&amp;rsquo;, also called a partition, of rows around the current row and calculate a result based on those. That could be for example&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the current row, the one before and the one after it&lt;/li&gt;
&lt;li&gt;every row up to the current row&lt;/li&gt;
&lt;li&gt;every row&lt;/li&gt;
&lt;li&gt;every row which is similar in some way e.g. has the same value for a &amp;lsquo;category&amp;rsquo; field&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As an example,&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{price} - avg({price}) over (partition by {category})&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;would calculate for each item, the difference from the average price of items with the same category.&lt;/p&gt;
&lt;p&gt;This again is much too large a topic to cover in an introductory page, there&amp;rsquo;s plenty of documentation here: &lt;a href=&#34;https://www.postgresql.org/docs/current/tutorial-window.html&#34;&gt;https://www.postgresql.org/docs/current/tutorial-window.html&lt;/a&gt;
and a video introduction to the concept here:&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/blHEnrYwySE&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h3 id=&#34;series-generation&#34;&gt;Series generation&lt;/h3&gt;
&lt;p&gt;Sometimes you need to &lt;strong&gt;generate&lt;/strong&gt; a set of rows, as opposed to having the data stored in the database. Here are some quick examples:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;generate_series(1,10)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;generates the numbers 1 to 10, each one in a different row&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;generate_series(now() - &#39;10 years&#39;::interval, now(), &#39;1 month&#39;::interval)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;generates one row per month, from 10 years ago up until this month&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;The functions above highlight just a few of the many possibilities. Please feel free to read up on PostgreSQL some more and if you come up with any neat calculations yourself in your everyday work, please do send them to &lt;a href=&#34;mailto:support@agilebase.co.uk&#34;&gt;support@agilebase.co.uk&lt;/a&gt; so we can add them to this page (with credit).&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Types of Join</title>
      <link>https://docs.agilebase.co.uk/docs/views/joins/types-of-join/</link>
      <pubDate>Fri, 15 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/views/joins/types-of-join/</guid>
      <description>
        
        
        &lt;p&gt;Here&amp;rsquo;s a Youtube video explaining the concept of joins and running through the various types.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/9yeOJ0ZMUYw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Just remember, when using third party resources to learn about joins (or other SQL features), you don&amp;rsquo;t need to write the SQL code in agileBase, it&amp;rsquo;s generated for you behind the scenes.&lt;/p&gt;
&lt;h2 id=&#34;left-outer-and-inner-joins&#34;&gt;Left outer and inner joins&lt;/h2&gt;
&lt;p&gt;The left outer join is the default type used when a join is added to a view in agileBase. It suits most cases, but can be changed after join creation if needed.&lt;/p&gt;
&lt;p&gt;A left outer join type will ensure that every row from the left source (table or view) is visible in output, whether or not the data links to a row on the right side. Conversely, when an inner join&amp;rsquo;s used, data from the left will be hidden unless it links to data on the right.&lt;/p&gt;
&lt;p&gt;That may sound rather abstract: working with an example, we can see what it means in practice.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s take the common and straightforward example of linking contacts to organisations. We start by creating a view from the contacts table, so that&amp;rsquo;s on the left side. We then join from contacts to an organisations table, on the right. This join looks as follows:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/example-join.png&#34; alt=&#34;example join&#34;&gt;&lt;/p&gt;
&lt;p&gt;That gives us a view where we can add fields from the organisation table into the view of contacts data. The output may look something like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/view-contacts.png&#34; alt=&#34;contacts view&#34;&gt;&lt;/p&gt;
&lt;p&gt;Each row representing a contact, has the contact details (name, email address etc.) and from the organisations table, you can see the name and website of the organisation they belong to.&lt;/p&gt;
&lt;p&gt;But wait a minute, what&amp;rsquo;s that contact with blank spaces for the organisation name and website? That represents a &lt;strong&gt;contact which is not yet linked to an organisation&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I guess to be nit-picky, it could represent a contact joined to an organisation without a name or website address added, but here we&amp;rsquo;ll assume all organisations have those details filled in.&lt;/p&gt;
&lt;p&gt;When the join type is &lt;strong&gt;left outer&lt;/strong&gt;, then this row will be shown, as seen. However, if it&amp;rsquo;s changed to an &lt;strong&gt;inner&lt;/strong&gt; join, then it will be hidden.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s why left outer is the safest type to use by default. Otherwise with an inner, if a user adds a new contact, fills in all their basic details but doesn&amp;rsquo;t link her or him to an organisation (perhaps they don&amp;rsquo;t know the organisation or it doesn&amp;rsquo;t exist in the system yet), then they won&amp;rsquo;t be able to see that contact in the view. And if they can&amp;rsquo;t see it, then they can&amp;rsquo;t click on it to load it - it will have vanished for good (well, until the join is changed back to a left outer).&lt;/p&gt;
&lt;p&gt;Sometimes of course, inner joins are very useful - but it makes sense that there must be a conscious decision to change a join to that type.&lt;/p&gt;
&lt;h2 id=&#34;right-outer-and-full-outer&#34;&gt;Right outer and full outer&lt;/h2&gt;
&lt;p&gt;You may think, if there&amp;rsquo;s a left outer, is there also a right outer? There is, it means all data from the right side is always visible, whether or not there&amp;rsquo;s a match on the left. So in our contacts/organisations example, all organisations would be visible, whether or not any contacts belonged to them.&lt;/p&gt;
&lt;p&gt;Practically, this isn&amp;rsquo;t used much, as a right outer join is just the same as a left outer join started from the other table. There&amp;rsquo;s no difference in the data visible, but using a left outer works better in agileBase because you can be guaranteed that clicking on a row will load a record (with a right outer, if there&amp;rsquo;s no data on the left side, then no record can be loaded when the row&amp;rsquo;s clicked).&lt;/p&gt;
&lt;p&gt;You may also hear of a full outer join - this again has a very small number of useful cases, but you can &lt;a href=&#34;https://stackoverflow.com/questions/2094793/when-is-a-good-situation-to-use-a-full-outer-join&#34;&gt;read about them online&lt;/a&gt; if interested.&lt;/p&gt;
&lt;h2 id=&#34;venn-diagram&#34;&gt;Venn diagram&lt;/h2&gt;
&lt;p&gt;Joins are often represented visually with Venn diagrams. Here&amp;rsquo;s one, showing that for a left outer join, all the data from the left side is visible, whether or not a matching row exists on the right, and for an inner join, data from the left is excluded without a match. The results of right outer and full outer are also visualised.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/joins-venn.png&#34; alt=&#34;Joins Venn diagram&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;cross-join&#34;&gt;Cross join&lt;/h2&gt;
&lt;p&gt;There&amp;rsquo;s one final type to consider that can be used in agileBase. Strictly speaking, it isn&amp;rsquo;t a join at all, but it does bring together data from left and right sides in a particular way, so we&amp;rsquo;ll think of it as a join here and it&amp;rsquo;s treated as such in agileBase.&lt;/p&gt;
&lt;p&gt;If you have a mathematical background, it may help to know that it produces a cartesian product, or cross product, of all rows in the left and right sides.&lt;/p&gt;
&lt;p&gt;However if you don&amp;rsquo;t, not to worry, it can be easily explained without maths. Basically, every combination of each row on the left with each row on the right is output. So if you have three rows, A, B and C on the left and another three X, Y and Z on the right, then you would get as output: data from&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Row A with row X&lt;/li&gt;
&lt;li&gt;Row A with row Y&lt;/li&gt;
&lt;li&gt;Row A with row Z&lt;/li&gt;
&lt;li&gt;Row B with row X&lt;/li&gt;
&lt;li&gt;Row B with row Y&lt;/li&gt;
&lt;li&gt;Row B with row Z&lt;/li&gt;
&lt;li&gt;Row C with row X&lt;/li&gt;
&lt;li&gt;Row C with row Y&lt;/li&gt;
&lt;li&gt;Row C with row Z&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;You can see that you need to be careful when creating cross joins that results won&amp;rsquo;t balloon up into massive numbers of rows that are hard to deal with. For example, if two tables, each with a hundred thousand rows in, are joined by cross join, then 100,000 x 100,000 = 10,000,000,000 (ten billion) rows would output.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once again, potential uses may be most easily explained by a real world example.&lt;/p&gt;
&lt;p&gt;Cross joins can be used when reporting, to find data that&amp;rsquo;s &lt;strong&gt;not&lt;/strong&gt; there (to get a bit Zen). For example, say we have two tables&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;customers&lt;/li&gt;
&lt;li&gt;products&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We may want to create output representing the combination of every customer with every product - we could then further join this to sales data to find which products a customer isn&amp;rsquo;t buying, or which products are being bought by most and fewest customers.&lt;/p&gt;
&lt;p&gt;Firstly, we need all combinations. Create a cross join between customers and products, in a &amp;lsquo;customer products&amp;rsquo; view.&lt;/p&gt;
&lt;p&gt;The next step is similar to our reporting example of &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/joins/#joining-on-multiple-fields&#34;&gt;joining on multiple fields&lt;/a&gt;. Create a calculation &amp;lsquo;customer product&amp;rsquo; which concatenates together customer ID and product ID. Create the same calculation in a view of sales (each sale of a product to a customer). Then join this sales view into our customer products view and bingo, we can display the total sales, whether zero or more, of each product to each customer.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you haven&amp;rsquo;t yet read up on &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/calculations/&#34;&gt;calculations&lt;/a&gt;, you may need to do that in order to accomplish everything above&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;adding-a-cross-join&#34;&gt;Adding a cross join&lt;/h3&gt;
&lt;p&gt;Adding a cross join is a little different to &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/joins/#adding-a-join&#34;&gt;adding a normal join&lt;/a&gt;. The left and right fields don&amp;rsquo;t matter (as we want to apply any exclusion rules, we just want every combination of rows possible).&lt;/p&gt;
&lt;p&gt;So follow the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/joins/#complex-joins&#34;&gt;normal process for a complex join&lt;/a&gt;, but just select the left and right tables (or views), leave the fields at their default values.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Filters</title>
      <link>https://docs.agilebase.co.uk/docs/views/filters/</link>
      <pubDate>Wed, 13 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/views/filters/</guid>
      <description>
        
        
        &lt;p&gt;Filters can be applied permanently to a view, allowing an administrator to specify the subset of records that should be displayed. This is often for convenience and to create more useful systems. For example, if you have a database of suppliers, you may want to create views showing those which are approved, those which aren&amp;rsquo;t, those which are local etc. Each view would have a different set of filters applied.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Remember people can apply additional &amp;lsquo;ad-hoc&amp;rsquo; or temporary filters to a view at any time using the filter boxes at the top of the screen, so it may not be necessary to create filtered views for every eventuality.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A filter can act on any field or calculation in the view, as well as on any in joined tables or views.&lt;/p&gt;
&lt;p&gt;Multiple filters act like they have AND between them, i.e. they are applied additively. If you wish to apply a filters with OR between them, or if you wish to apply a filter on the reult of the comparison of fields, then simply create the relevant &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/calculations/&#34;&gt;calculation&lt;/a&gt;. For example, if you added two filters to a suppliers view&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;status equals approved&lt;/strong&gt; and &lt;strong&gt;status equals pending&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;then you would get no records showing - a status can&amp;rsquo;t be both one thing and another. However if you created a boolean calculation &amp;lsquo;pending or approved&amp;rsquo;, with definition&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{status} like &#39;approved&#39; or {status} like &#39;pending&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;you could then add a filter on that calculation&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pending or approved equals true&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;adding-a-filter&#34;&gt;Adding a filter&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;In the tiles interface, load the view you wish to edit&lt;/li&gt;
&lt;li&gt;Click your user profile icon at the top right and select &lt;em&gt;admin - edit view&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Under &lt;em&gt;Filters&lt;/em&gt;, click the &lt;em&gt;Add Filter&lt;/em&gt; button&lt;/li&gt;
&lt;li&gt;Choose relevant options and press &lt;em&gt;Add&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There are 26 types of filter to choose from, from the simple &amp;lsquo;equals&amp;rsquo; and &amp;lsquo;not equal to&amp;rsquo;, to more complex pattern matching using &lt;a href=&#34;https://www.postgresql.org/docs/current/functions-matching.html#FUNCTIONS-POSIX-REGEXP&#34;&gt;regular expressions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some filters apply to multiple data types, others only to specific types. For example, &amp;lsquo;newer than X days ago&amp;rsquo; only applies to date fields.&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;ve added a filter, you&amp;rsquo;ll be able to type in a description for it. If no description is entered, the system will automatically generate one, which you&amp;rsquo;ll be able to see.&lt;/p&gt;
&lt;p&gt;This description is shown to users as help in particular circumstances, e.g. when the view is used as a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-chaser/&#34;&gt;chaser&lt;/a&gt;, so it&amp;rsquo;s a good idea to check it makes sense.&lt;/p&gt;
&lt;h3 id=&#34;including-blank-values&#34;&gt;Including blank values&lt;/h3&gt;
&lt;p&gt;Once a filter has been created, when you hover over it you&amp;rsquo;ll see an option to tick &amp;lsquo;or is blank&amp;rsquo;. This is useful to ensure blank values aren&amp;rsquo;t excluded by your filter, which they typically would be otherwise.&lt;/p&gt;
&lt;p&gt;For example, imaging you&amp;rsquo;re setting up an &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-email/&#34;&gt;email notification workflow&lt;/a&gt; to send a notification to people once a week of any outstanding tasks. You&amp;rsquo;d likely need two filters, the first to find any tasks with an &amp;lsquo;outstanding&amp;rsquo; status and the second to only include tasks for which no notifications have been sent within the last 7 days.&lt;/p&gt;
&lt;p&gt;For that second filter, you would set it up as&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&#39;last notified&#39; is more than 7 days ago
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, as it stands, that would exclude any tasks which have &lt;strong&gt;never&lt;/strong&gt; had a notification sent for them, i.e. where the last notified field is blank.&lt;/p&gt;
&lt;p&gt;To include those, just tick &amp;lsquo;or is blank&amp;rsquo; after creating the filter.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Checkbox Field Options</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-options/checkbox-field-options/</link>
      <pubDate>Tue, 12 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-options/checkbox-field-options/</guid>
      <description>
        
        
        &lt;h2 id=&#34;default-value&#34;&gt;Default value&lt;/h2&gt;
&lt;p&gt;Simply whether the checkbox should default to ticked (true) or un-ticked (false) for new records.&lt;/p&gt;
&lt;h2 id=&#34;dont-set-last-modified&#34;&gt;Don&amp;rsquo;t set last modified&lt;/h2&gt;
&lt;p&gt;Whenever someone edits a record, agileBase automatically updates the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/automatically-present-fields/#last-modified-auto&#34;&gt;Last Modified&lt;/a&gt; and &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/automatically-present-fields/#modified-by-auto&#34;&gt;Modified By&lt;/a&gt; fields of the table. This option prevents that happening when the checkbox field is ticked or un-ticked. There would not usually be a need for this but it may be useful in a minority of cases.&lt;/p&gt;
&lt;h2 id=&#34;show-digital-signature&#34;&gt;Show digital signature&lt;/h2&gt;
&lt;p&gt;Causes the user interface to show the name &amp;amp; username of the person who last ticked or un-ticked the checkbox, along with a timestamp.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note these can only be shown for the maximum time that record history (audit trail) data is stored for, by default 12 months. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/usage-reporting/#enhanced-audit-trail&#34;&gt;enhanced audit trail&lt;/a&gt; for details of extending this.&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Comment Feeds</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/comment-feeds/</link>
      <pubDate>Thu, 07 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/comment-feeds/</guid>
      <description>
        
        
        &lt;p&gt;Adding a comment feed to a table adds a discussion area to a form, transforming its usefulness.&lt;/p&gt;
&lt;p&gt;Comment feeds in agileBase are quite a large topic, as one of the most often used features central to the platform. It&amp;rsquo;s common for at least one comment feed to be added to every table in the system, allowing users to collaborate and discuss data wherever they are.&lt;/p&gt;
&lt;p&gt;The ability to discuss and comment on data can be one of the most important mechanisms used to break down silo thinking and help organisations that wish to adopt a more systematic or process orientated view of things.&lt;/p&gt;
&lt;h2 id=&#34;comment-feeds-in-action&#34;&gt;Comment feeds in action&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s an example of a comment feed in a table, being used to add a new comment. Previous comments can be seen underneath, with the user and date/time of each.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/add-comment.png&#34; alt=&#34;add comment&#34;&gt;&lt;/p&gt;
&lt;p&gt;The available recipients are those people who have privileges to view data in the table (it&amp;rsquo;s no use sending a comment to someone who can&amp;rsquo;t see the data being discussed).&lt;/p&gt;
&lt;p&gt;The user interface intelligently selects an initial list of recipients from those available, but they can be added or removed by the user.&lt;/p&gt;
&lt;p&gt;In this example, Cliff, Gemma and Mark have been set to receive email notifications as well. The email they receive will contain a link to take them directly to the record the comment was added to. They can reply to the email to log an additional comment.&lt;/p&gt;
&lt;p&gt;People who aren&amp;rsquo;t recipients of a comment will still see the comment when they visit the record it&amp;rsquo;s been added to, they just won&amp;rsquo;t get a notification in their comments stream or elsewhere.&lt;/p&gt;
&lt;p&gt;People who are mentioned by name in a comment (Mark in this example) will get an in-app alert as well as the comment appearing in their comment stream.&lt;/p&gt;
&lt;p&gt;A user&amp;rsquo;s notification options affect whether they receive comments from a particular table or person by default, and how they receive those comments. The table option &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/#accept-emails-to-this-address&#34;&gt;email notifications&lt;/a&gt; also affects this.&lt;/p&gt;
&lt;h3 id=&#34;comments-to-other-fields&#34;&gt;Comments to other fields&lt;/h3&gt;
&lt;p&gt;Although adding a comments feed field is the easiest way of allowing people to comment on data, users can at any time add a comment to &lt;strong&gt;any&lt;/strong&gt; field on the screen, by hovering over the field until an &amp;lsquo;add comment&amp;rsquo; icon appears. This opens a smaller, basic comment adding interface, without the options for choosing recipients above, rather the default set of recipients is always used.&lt;/p&gt;
&lt;h2 id=&#34;the-comments-stream-tile&#34;&gt;The comments stream tile&lt;/h2&gt;
&lt;p&gt;When someone&amp;rsquo;s the receipient of a comment, they&amp;rsquo;ll be able to see it in the comments stream tile on their homepage. Clicking on it will navigate to the related record. We won&amp;rsquo;t go into every detail of the user interface in this administrator documentation, but comments can be searched and the comments tile can be expanded to full screen like any other tile.&lt;/p&gt;
&lt;h2 id=&#34;email-integration&#34;&gt;Email integration&lt;/h2&gt;
&lt;p&gt;As above, anyone who receives a comment notification can reply to the email to add another comment (their email address must be their username or recorded in their user defailt), or they can click on a link to view the related record including previous comments.&lt;/p&gt;
&lt;p&gt;However, comments are also the mechanism by which emails from external parties can be logged - see the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/#accept-emails-to-this-address&#34;&gt;accept emails to this address&lt;/a&gt; table option.&lt;/p&gt;
&lt;p&gt;When a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-email/&#34;&gt;workflow&lt;/a&gt; or &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-chaser/&#34;&gt;chaser&lt;/a&gt; sends an outgoing email, that is logged as a comment (including any attachments) too.&lt;/p&gt;
&lt;h2 id=&#34;slack-integration&#34;&gt;Slack integration&lt;/h2&gt;
&lt;p&gt;If &lt;a href=&#34;https://www.slack.com&#34;&gt;Slack&lt;/a&gt; is integrated via &lt;a href=&#34;https://docs.agilebase.co.uk/docs/advanced-usage/company-settings/&#34;&gt;company options&lt;/a&gt;, every comment added will also be sent to your Slack workspace.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Referenced data</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/referenced-data/</link>
      <pubDate>Thu, 07 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/referenced-data/</guid>
      <description>
        
        
        &lt;p&gt;Most fields in a table allow data entry into that table, but referenced data fields allow data from &lt;strong&gt;other&lt;/strong&gt; places to be embedded, specifically &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;views&lt;/a&gt;, created from any table.&lt;/p&gt;
&lt;p&gt;Optionally, the embedded data can be editable.&lt;/p&gt;
&lt;p&gt;This can be used for many purposes, such as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;showing calculations, e.g. when editing a recipe, you may want to show the total cost/kg of all ingredients and packaging in that recipe&lt;/li&gt;
&lt;li&gt;embedding charts, e.g. in the record for a customer, you may want to show the last 12 months of sales data&lt;/li&gt;
&lt;li&gt;allowing quick editing of related data, e.g. after selecting a customer contact for a sales opportunity, allow quick editing of their contact details without having to navigate away from the opportunity record&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some more esoteric uses are also possible&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;referenced data can be used as a source of data to populate standard fields in the form, i.e. to provide default values for fields - see &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#set-from-previous-referenced-field&#34;&gt;relation field options&lt;/a&gt; for more information&lt;/li&gt;
&lt;li&gt;a referenced data field can be displayed as a button to &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/advanced/workflow-buttons/&#34;&gt;manually run a workflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;adding-a-referenced-field&#34;&gt;Adding a referenced field&lt;/h2&gt;
&lt;p&gt;Referenced fields are based on views. The contents of a view will be displayed in the form where a field referencing data from that view is added.&lt;/p&gt;
&lt;p&gt;The way it works is that the chosen view must contain the ID field of the table the referenced field is added to. When displaying data, the view is filtered to only show records where the ID matches that of the record being edited.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s take an example - you wish to include details of any ingredients supplied by a company in a supplier details screen.&lt;/p&gt;
&lt;p&gt;First, create a view of ingredients linked to each supplier. It may have data in it such as the following:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/referenced-source-view.png&#34; alt=&#34;referenced source view&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is some repetition in this view because each ingredient can be supplied by more than one supplier. Each line represents an ingredient/supplier combination. The supplier names aren&amp;rsquo;t included in this particular view.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When a field referencing this view is added to the suppliers table, the output may display like this, when editing a particular supplier:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/referenced-panels.png&#34; alt=&#34;referenced panels&#34;&gt;&lt;/p&gt;
&lt;p&gt;So to summarise, the steps are&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/creating-a-view/&#34;&gt;Create&lt;/a&gt; or find a view containing the data you wish to embed. It must contain the ID field of the table the data is embedded in (in this case &amp;lsquo;opportunities&amp;rsquo;).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/#adding-a-field&#34;&gt;Add a field&lt;/a&gt; of type &lt;em&gt;referenced data&lt;/em&gt;. Select the table your target view was created from, then the target view itself, before pressing &lt;em&gt;create field&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Actually, there is one case in which the rule that the view must contain the ID of the table the referenced data is being added to. That&amp;rsquo;s when you want to show &lt;strong&gt;all&lt;/strong&gt; rows from the view, without filtering.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is typically used in a minority of cases, but can be useful when you want to embed data that isn&amp;rsquo;t related to the target table. For example, showing some global settings that may affect the functionality of a system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;showing-one-or-more-rows&#34;&gt;Showing one or more rows&lt;/h2&gt;
&lt;p&gt;If more than one row in the view has an ID matching the ID of the table being added to, all will be shown. There is limited space in a form, so if there are lots, then a &amp;lsquo;see more&amp;rsquo; option will appear after the first few rows. For a more compact view, &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/referenced-field-options/#tabular-display&#34;&gt;tabular display&lt;/a&gt; can be chosen in the referenced field options.&lt;/p&gt;
&lt;h2 id=&#34;showing-charts&#34;&gt;Showing charts&lt;/h2&gt;
&lt;p&gt;If the view used has one or more &lt;a href=&#34;https://docs.agilebase.co.uk/docs/charting/&#34;&gt;charts&lt;/a&gt;, they will be shown instead of the data rows. The filtering acts exactly the same way, only data matching the containing table&amp;rsquo;s ID is used as the source of the chart data.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/embedded-chart.png&#34; alt=&#34;embedded chart&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;showing-images-and-documents&#34;&gt;Showing images and documents&lt;/h2&gt;
&lt;p&gt;Images and documents can be included in referenced panels too. Just include a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/file/&#34;&gt;file field&lt;/a&gt; in the view used for the panel.&lt;/p&gt;
&lt;h2 id=&#34;making-referenced-data-editable&#34;&gt;Making referenced data editable&lt;/h2&gt;
&lt;p&gt;Optionally, referenced data can be made editable by clicking on it.&lt;/p&gt;
&lt;p&gt;A view containing the containing table&amp;rsquo;s ID can be created one of two ways.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a view from the containing table, &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/joins/&#34;&gt;joining&lt;/a&gt; to other tables&lt;/li&gt;
&lt;li&gt;Create a view from another table, joining it to the containing table&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If a view is built the second way and embedded into the table via a referenced field, the data will be editable: clicking on an element of referenced data will turn it into a data entry form.&lt;/p&gt;
&lt;p&gt;If it&amp;rsquo;s built the first way, data will not be editable.&lt;/p&gt;
&lt;p&gt;In an editable referenced field, only fields directly from the table made to create the view will be editable. Other fields will be read-only.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Usage</title>
      <link>https://docs.agilebase.co.uk/docs/tables/usage/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/usage/</guid>
      <description>
        
        
        &lt;p&gt;This panel shows a list of views that contain data from the table. Any view with data is included, not just those directly created from the table.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/usage-reporting/&#34;&gt;usage reporting&lt;/a&gt; for more info.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/table-usage.png&#34; alt=&#34;table usage&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Users and Roles</title>
      <link>https://docs.agilebase.co.uk/docs/tables/users-and-roles/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/users-and-roles/</guid>
      <description>
        
        
        &lt;p&gt;The &lt;em&gt;Users&lt;/em&gt; and &lt;em&gt;Roles&lt;/em&gt; panels of a table&amp;rsquo;s manage tab allow privileges to be assigned to a user or role on a table. Please see the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/&#34;&gt;privileges&lt;/a&gt; page for more details.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Number Field Options</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-options/number-field-options/</link>
      <pubDate>Tue, 12 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-options/number-field-options/</guid>
      <description>
        
        
        &lt;h2 id=&#34;colour-outliers&#34;&gt;Colour outliers&lt;/h2&gt;
&lt;p&gt;Automatically highlight &amp;lsquo;unusual&amp;rsquo; values of this field in views. This can help pick out values which are notable in some way, for example if a number has been entered without a decimal point by mistake (1253 instead of 12.53) or is a statistical outlier.&lt;/p&gt;
&lt;p&gt;Specifically, if the value is more than 4 standard deviations away from the mean, it&amp;rsquo;s strongly highlighted in green (for values greater than the mean) or red (for values less). Values more than 2 standard deviations away are highlighted in a weaker shade.&lt;/p&gt;
&lt;h2 id=&#34;separate-thousands-and-use-totals&#34;&gt;Separate thousands and use totals&lt;/h2&gt;
&lt;p&gt;In views and data entry screens, show numbers as e.g. 31,141,592 rather than 31141592.&lt;/p&gt;
&lt;p&gt;Also when the field is added to a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/#tab-view&#34;&gt;tab view&lt;/a&gt;, a total is displayed at the bottom of the column of numbers for it.&lt;/p&gt;
&lt;h2 id=&#34;use-duration&#34;&gt;Use duration&lt;/h2&gt;
&lt;p&gt;The view displays the same in views, but in data entry forms, is entered as a time duration, specifically a number of hours. So for example the number 1.5 would be entered as 01:30 (1.5 hrs = 1 hr 30 minutes). This allows time durations to be entered into e.g. timesheets in a natural fashion, but also time to be totalled up easily.&lt;/p&gt;
&lt;h2 id=&#34;precision&#34;&gt;Precision&lt;/h2&gt;
&lt;p&gt;The number of decimal places to show numbers to.&lt;/p&gt;
&lt;p&gt;his affects display only, so for example if 1.543 is entered into a field with 1 decimal place, it will display as 1.5 but will still be stored as 1.543 and any maths done on the field operate on the higher precision value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note - integer and floating fields are actually different field types in the underlying database, so if a number is created with 0dp i.e. as a whole number, it can&amp;rsquo;t later be converted to floating point by changing the dp. There is a process that can be followed for &lt;a href=&#34;https://docs.agilebase.co.uk/docs/advanced-usage/build-patterns/#switching-a-field-from-one-type-to-another&#34;&gt;converting fields from one type to another&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Whole number fields can store integer values from -2,147,483,648 to +2,147,483,647, i.e. approx. -2 billion to +2 billion. Decimal number fields have a range of around 1E-307 to 1E+308. See notes for &lt;em&gt;integer&lt;/em&gt; and &lt;em&gt;double precision&lt;/em&gt; types here: &lt;a href=&#34;https://www.postgresql.org/docs/current/datatype-numeric.html&#34;&gt;https://www.postgresql.org/docs/current/datatype-numeric.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you need to store values of greater range or accuracy, please let us know.&lt;/p&gt;
&lt;h2 id=&#34;value&#34;&gt;Value&lt;/h2&gt;
&lt;p&gt;Set a default value for the field, which will apply when a new record is created.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Automatically present fields</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/automatically-present-fields/</link>
      <pubDate>Fri, 08 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/automatically-present-fields/</guid>
      <description>
        
        
        &lt;p&gt;When every &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/&#34;&gt;table&lt;/a&gt; is created, a series of fields are automatically added. These aren&amp;rsquo;t displayed in the data entry form of a table, but are available to be added into views.&lt;/p&gt;
&lt;h2 id=&#34;id-field&#34;&gt;ID field&lt;/h2&gt;
&lt;p&gt;In database parlance, the table&amp;rsquo;s &lt;a href=&#34;https://en.wikipedia.org/wiki/Primary_key&#34;&gt;primary key&lt;/a&gt; - providing a unique ID to identify each record. Values are generated in sequence.&lt;/p&gt;
&lt;p&gt;agileBase creates and manages primary keys, using them to link related tables together automatically, however it&amp;rsquo;s useful for administrators to understand the concept and implementation. Many platform features depending on including the ID field for a particular table in a view, such as &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/referenced-data/&#34;&gt;referenced fields&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;creation-time-auto&#34;&gt;Creation Time [Auto]&lt;/h2&gt;
&lt;p&gt;The record&amp;rsquo;s creation time, accurate to the ms and displayed to the second by default.&lt;/p&gt;
&lt;h2 id=&#34;created-by-auto&#34;&gt;Created By [Auto]&lt;/h2&gt;
&lt;p&gt;The user ID of the person who created the record, in the form &lt;code&gt;Forename Surname (username)&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This format is used to identify a user everywhere in agileBase, for example when assigning a record to a user. When a user ID identifies a person in a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-chaser/&#34;&gt;chaser&lt;/a&gt; or &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-email/&#34;&gt;email workflow&lt;/a&gt;, agileBase will look up and use their email address, from their account details.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When a record is created by a workflow, the Created By will be &lt;code&gt;System User (system)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When created by an API call, it will be &lt;code&gt;Public API (IP Address) (public api&lt;/code&gt;, where the IP address of the calling system is recorded.&lt;/p&gt;
&lt;h2 id=&#34;last-modified-auto&#34;&gt;Last Modified [Auto]&lt;/h2&gt;
&lt;p&gt;The record&amp;rsquo;s last modification time. Behaviour is similar to Creation Time [Auto], above.&lt;/p&gt;
&lt;h2 id=&#34;modified-by-auto&#34;&gt;Modified By [Auto]&lt;/h2&gt;
&lt;p&gt;The user ID of the person who last updated the record. Behaviour is the same as Created By [Auto].&lt;/p&gt;
&lt;h2 id=&#34;locked-auto&#34;&gt;Locked [Auto]&lt;/h2&gt;
&lt;p&gt;A boolean value which is true if the record has been &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/#records-lockable&#34;&gt;locked&lt;/a&gt; by a workflow, to disallow further editing.&lt;/p&gt;
&lt;h2 id=&#34;view-count-auto&#34;&gt;View Count [Auto]&lt;/h2&gt;
&lt;p&gt;How many times a particular record has been opened or viewed by a user. A measure of popularity if you like.&lt;/p&gt;
&lt;h2 id=&#34;activity-histogram-auto&#34;&gt;Activity Histogram [Auto]&lt;/h2&gt;
&lt;p&gt;The activity histogram of a record shows the relative activity of each record, i.e. the number of record edits that have occurred, over a period of time. It&amp;rsquo;s displayed as a small &lt;a href=&#34;https://en.wikipedia.org/wiki/Sparkline&#34;&gt;sparkline&lt;/a&gt; chart.&lt;/p&gt;
&lt;p&gt;The activity over the past six months is shown, one point, or &amp;lsquo;spike&amp;rsquo; per week. The more edits in a week there are, the higher the spike. Edits to &amp;lsquo;child&amp;rsquo; records in a tab of a main record are also counted, but contribute relatively less.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As an example of use, in a display of sales opportunities, you want to know which opps. are being actively worked and which haven’t had any activity for some time. The activity histogram shows the ‘shape’ of activity over a period of time, at a glance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;With sparklines next to every record on screen, you can quickly get an idea of the relative activity of each.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/activity-histogram.png&#34; alt=&#34;activity histogram&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;comments-feed-auto&#34;&gt;Comments Feed [Auto]&lt;/h2&gt;
&lt;p&gt;This field contains an amalagamation of all &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/comment-feeds/&#34;&gt;comments&lt;/a&gt; added to a record, newest at the top. Adding this field to a view allows recent comments to be seen for many records at once and is an easy way of making record comments searchable. As opposed to the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;comments tile&lt;/a&gt;, the user sees all record comments, not just those they are a recipient for, but only those for the table in question.&lt;/p&gt;
&lt;p&gt;Note - the Comments Feed [Auto] field combines comments from all comment fields in the table, if there&amp;rsquo;s more than one, as well as any comments added to other fields.&lt;/p&gt;
&lt;h2 id=&#34;document-storage-mb-auto&#34;&gt;Document Storage (MB) [Auto]&lt;/h2&gt;
&lt;p&gt;Shows the amount of storage used for all documents attached to a record (uploaded or generated), including previous versions. Adding this field to a view allows you to total up storage across all (or a subset of) records.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Document templates</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/file/document-templates/</link>
      <pubDate>Fri, 08 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/file/document-templates/</guid>
      <description>
        
        
        &lt;p&gt;Document templates in agileBase are typically used to create output that needs to be printed or emailed, for example form letters and especially anything that needs to be branded. They can be used for some quite complex and large documents, for example one customer uses them to create branded multi-page reports that are sold to customers, complete with custom fonts, layouts, images and colours.&lt;/p&gt;
&lt;p&gt;The same templating system is used for both generating documents (which can be done automatically with a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-document-generator/&#34;&gt;workflow&lt;/a&gt; or manually) and displaying output to be printed.&lt;/p&gt;
&lt;p&gt;Each template is attached to a view and given a name.&lt;/p&gt;
&lt;h2 id=&#34;creating-a-template&#34;&gt;Creating a template&lt;/h2&gt;
&lt;p&gt;Templates can be created using the built-in WYSIWYG editor, which allows simple presentation controls, like adding tables, headings and text formatting.&lt;/p&gt;
&lt;p&gt;Alternatively and for complex needs, templates can be created manually. The templating language is &lt;a href=&#34;https://velocity.apache.org/&#34;&gt;Apache Velocity&lt;/a&gt;, which allows concepts such as variables, loops etc. to be used, i.e. simple programming features. The output format is HTML.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Find or create a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;view&lt;/a&gt; which contains the data to be included in your output document. The idea is that each row in the view will correspond to one document, with the data from that row being merged in.&lt;/li&gt;
&lt;li&gt;Press the &lt;em&gt;Print&lt;/em&gt; button in the toolbar, then the &lt;em&gt;manage&lt;/em&gt; button&lt;/li&gt;
&lt;li&gt;You will then be prompted to create a template using the WYSIWIG editor, or upload one created outside the system.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Existing templates can also be edited or downloaded. Manually created templates with complex features such as variable setting and looping can&amp;rsquo;t be edited using the WYSIWYG editor&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;including-data&#34;&gt;Including data&lt;/h2&gt;
&lt;p&gt;Each field in the view (included calculations), or parent table, can be merged in to the template by referencing the field name, preceded by a dollar sign. For convenience, a list of available fields is listed below the WYSIWYG editor, for easy copying and pasting into the template.&lt;/p&gt;
&lt;p&gt;For those manually creating templates, a field name becomes a variable to reference by&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;writing it in lower case&lt;/li&gt;
&lt;li&gt;replacing spaces with underscores (_)&lt;/li&gt;
&lt;li&gt;removing all characters that are neither letters nor numbers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here&amp;rsquo;s an example of a template being updated in the WYSYWIG editor:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/template-editor.png&#34; alt=&#34;Template editing&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;using-templates&#34;&gt;Using templates&lt;/h3&gt;
&lt;p&gt;Templates can be used when generating documents, &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/file-field-options/#template&#34;&gt;manually&lt;/a&gt; or using an &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-document-generator/&#34;&gt;automated workflow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;They can also be used as printout templates to let users print data from the system formatted as you wish.&lt;/p&gt;
&lt;h2 id=&#34;advanced-templating&#34;&gt;Advanced templating&lt;/h2&gt;
&lt;h3 id=&#34;convenience-features&#34;&gt;Convenience features&lt;/h3&gt;
&lt;p&gt;As well as data, various convenience features are available for insertion into a template.&lt;/p&gt;
&lt;p&gt;Here are some of the most commonly used utility functions.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$viewTools.getCalendar()&lt;/td&gt;
&lt;td&gt;Return a Java &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/util/Calendar.html&#34;&gt;Calendar&lt;/a&gt; object representing the current date and time&lt;br/&gt;Also useful: $viewTools.getCalendarConstant(String name), e.g.&lt;br&gt;&lt;code&gt;#set($dayOfWeek = $viewTools.getCalendar().get($viewTools.getCalendarConstant(&amp;quot;DAY_OF_WEEK&amp;quot;)))&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$viewTools.getDatestampString()&lt;/td&gt;
&lt;td&gt;Output the current date in the format 31/01/2023&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$viewTools.getDatestampString(&amp;ldquo;format&amp;rdquo;)&lt;/td&gt;
&lt;td&gt;Output the current date/time in a &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/text/SimpleDateFormat.html&#34;&gt;custom format&lt;/a&gt; e.g. &lt;code&gt;$viewTools.getDatestampString(&amp;quot;EEE, d MMM yyyy HH:mm:ss&amp;quot;)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$viewTools.getDatestampString(calendar, &amp;ldquo;format&amp;rdquo;)&lt;/td&gt;
&lt;td&gt;Output the given date/time (as returned by $viewTools.getCalendar() in a custom format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$viewTools.getMathTool()&lt;/td&gt;
&lt;td&gt;Return a &lt;a href=&#34;https://velocity.apache.org/tools/3.0/apidocs/org/apache/velocity/tools/generic/MathTool.html&#34;&gt;MathTool&lt;/a&gt; for doing maths&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$viewTools.getNumberTool()&lt;/td&gt;
&lt;td&gt;Return a &lt;a href=&#34;https://velocity.apache.org/tools/3.0/apidocs/org/apache/velocity/tools/generic/NumberTool.html&#34;&gt;NumberTool&lt;/a&gt; for formatting and converting numbers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$viewTools.getRandomInt(bound)&lt;/td&gt;
&lt;td&gt;Return a random number &amp;gt;=0 and &amp;lt;bound&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$viewTools.spelloutCurrencyFromString(&amp;ldquo;number&amp;rdquo;)&lt;/td&gt;
&lt;td&gt;Convert e.g. &amp;ldquo;12.50&amp;rdquo; into &amp;ldquo;Twelve pounds 50 pence&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$viewTools.spelloutNumber(number)&lt;/td&gt;
&lt;td&gt;Convert e.g. 1,200 into &amp;ldquo;One thousand, two hundred&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;complex-data-merging&#34;&gt;Complex data merging&lt;/h3&gt;
&lt;p&gt;Here are some of the most commonly used data retrieval / formatting functions.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$view.getReportDataRows()&lt;/td&gt;
&lt;td&gt;Return all rows in the current view e.g.&lt;br /&gt;&lt;code&gt;#set($rows = $view.getReportDataRows())&lt;/code&gt;&lt;br&gt;&lt;code&gt;#foreach($row in $rows)&lt;/code&gt;&lt;br&gt;&lt;code&gt;  $row.getValue(&amp;quot;name&amp;quot;)&amp;lt;br&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;#end&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$view.getReportDataRows(view)&lt;/td&gt;
&lt;td&gt;Return all rows in the specified view e.g.&lt;br /&gt;&lt;code&gt;#set($myView = $view.getReport(&amp;quot;my view&amp;quot;))&lt;/code&gt;&lt;br&gt;&lt;code&gt;#set($rows = $view.getReportDataRows($myView))&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$view.getReportDataRows(view, n)&lt;/td&gt;
&lt;td&gt;Return the top n rows in the specified view&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$view.htmlTable()&lt;/td&gt;
&lt;td&gt;Output a HTML table containing the rows of the current session view (the last one the user opened), with session filters applied&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$view.htmlTable(view, rows)&lt;/td&gt;
&lt;td&gt;Given a list of rows as returned by getReportDataRows, from the specified view, format them as a HTML table e.g.&lt;br&gt;&lt;code&gt;#set($myView = $view.getReport(&amp;quot;my view&amp;quot;))&lt;/code&gt;&lt;br&gt;&lt;code&gt;#set($rows = $view.getReportDataRows($myView))&lt;/code&gt;&lt;br&gt;&lt;code&gt;$view.htmlTable($myView, $rows)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$view.htmlTable(&amp;ldquo;table name&amp;rdquo;, &amp;ldquo;child view name&amp;rdquo;)&lt;/td&gt;
&lt;td&gt;For the given table, find the record being edited by the user. Filter the given view (which must contain the ID field for the table) by the ID of that record and output the rows as a HTML table. e.g.&lt;br&gt;&lt;code&gt;$view.htmlTable(&amp;quot;organisations&amp;quot;, &amp;quot;all contacts&amp;quot;)&lt;/code&gt;&lt;br&gt;might output the contacts belonging to the current organisation in the user&amp;rsquo;s session&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$view.htmlTable(&amp;ldquo;table name&amp;rdquo;, &amp;ldquo;child view name&amp;rdquo;, true/false)&lt;/td&gt;
&lt;td&gt;As above, but if true is added, include any columns which are empty for all records (they are excluded by default)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$view.htmlTableTransverse(view, rows)&lt;/td&gt;
&lt;td&gt;As per $view.htmlTable(view, rows) above, but swap the axes in the table, i.e. field names will appear down the left, each row will be output as a column&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$view.htmlTableTransverse(&amp;ldquo;table name&amp;rdquo;, &amp;ldquo;child view name&amp;rdquo;)&lt;/td&gt;
&lt;td&gt;As per $view.htmlTable(&amp;ldquo;table name&amp;rdquo;, &amp;ldquo;child view name&amp;rdquo;) but again with swapped axes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;hellip;and here are some of the most commonly used session functions. Each user gets a new session when they log in, it stores information about the system&amp;rsquo;s current state for them.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$sessionData.getReport()&lt;/td&gt;
&lt;td&gt;Return the last view the user looked at&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$sessionData.getTable()&lt;/td&gt;
&lt;td&gt;Return the last table the user looked at&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$sessionData.getRowId()&lt;/td&gt;
&lt;td&gt;Return the ID of the record last loaded&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$sessionData.getTile()&lt;/td&gt;
&lt;td&gt;Return the open tile&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;There are many more functions than these available, indeed the whole of the agileBase user interface is created with templates including functions of these three types.&lt;/p&gt;
&lt;p&gt;The entire templating API is beyond the scope of this documentation but if you do wish to create any template functionality not covered by the above, it&amp;rsquo;s probably possible. Please get in touch with us to discuss your needs and be pointed in the right direction.&lt;/p&gt;
&lt;h3 id=&#34;using-apache-velocity-features&#34;&gt;Using Apache Velocity features&lt;/h3&gt;
&lt;p&gt;In the examples above are some uses of simple programming code. A full reference for what you can do with the Apache Velocity language is here: &lt;a href=&#34;https://velocity.apache.org/engine/2.2/user-guide.html&#34;&gt;https://velocity.apache.org/engine/2.2/user-guide.html&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: File fields</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/file/</link>
      <pubDate>Fri, 08 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/file/</guid>
      <description>
        
        
        &lt;p&gt;By default, a file field added to a table will let users upload files.&lt;/p&gt;
&lt;p&gt;When a file field is added to a view, a link to download the file is included.&lt;/p&gt;
&lt;p&gt;Files previews can be displayed in an &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;image/document library&lt;/a&gt; tile.&lt;/p&gt;
&lt;h2 id=&#34;version-history&#34;&gt;Version history&lt;/h2&gt;
&lt;p&gt;When a new file is uploaded (or generated), any previous file is kept as a previous version, displayed with a timestamp, for download by users.&lt;/p&gt;
&lt;h2 id=&#34;generating-pdf-documents&#34;&gt;Generating PDF documents&lt;/h2&gt;
&lt;p&gt;If a template is uploaded using the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/file-field-options/&#34;&gt;file field options&lt;/a&gt;, the file upload button in the user interface will be replaced by a generate button.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/file/document-templates/&#34;&gt;document templates&lt;/a&gt; for more information.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Types of Workflow Actions</title>
      <link>https://docs.agilebase.co.uk/docs/workflows/types-of-actions/</link>
      <pubDate>Fri, 29 May 2020 12:35:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/workflows/types-of-actions/</guid>
      <description>
        
        
        &lt;h2 id=&#34;types-of-action&#34;&gt;Types of Action&lt;/h2&gt;
&lt;p&gt;Actions fall in to two types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Those that effect data held within agileBase tables&lt;/li&gt;
&lt;li&gt;Those that send data to another system.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;alter-data&#34;&gt;Alter Data&lt;/h3&gt;
&lt;p&gt;Use the dropdown within the &lt;em&gt;workflow&lt;/em&gt; section of the &lt;em&gt;manage&lt;/em&gt; tab of the view to control the action that will be applied to every record in the view.
Options are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create record - This will create a new item in the nominated table&lt;/li&gt;
&lt;li&gt;Update record - This will alter the values of the record.&lt;/li&gt;
&lt;li&gt;Lock record - This will apply a record level lock on the item.&lt;/li&gt;
&lt;li&gt;Delete record - This will totally remove the record.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/workflow-manage.png&#34; alt=&#34;Workflow actions that alter data&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;creating-records&#34;&gt;Creating records&lt;/h4&gt;
&lt;p&gt;If &amp;lsquo;create record&amp;rsquo; is chosen, a couple of other options appear.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You can select which table the new record should be created in&lt;/li&gt;
&lt;li&gt;&amp;lsquo;Auto-connect new records&amp;rsquo; can be used when &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/advanced/chaining-workflows/&#34;&gt;chaining workflows&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;sending-data&#34;&gt;Sending Data&lt;/h3&gt;
&lt;p&gt;The options to send data are contained within the &lt;em&gt;send&lt;/em&gt; section of the &lt;em&gt;workflow&lt;/em&gt; tab. Matching records will be sent to the appropriate &lt;strong&gt;function&lt;/strong&gt;.&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-data-to-a-third-party-via-api/&#34;&gt;Send data to a third party via API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-email/&#34;&gt;Send an email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-chaser/&#34;&gt;Send an email Chaser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/calendar/&#34;&gt;Send data to a calendar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-document-generator/&#34;&gt;Send to document generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RSS feed - See facility with &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/setting-up-the-pull-api/&#34;&gt;PULL API&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/workflow-send.png&#34; alt=&#34;Workflow functions that send data&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
