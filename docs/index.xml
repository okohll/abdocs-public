<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Agilebase docs – Docs</title>
    <link>https://docs.agilebase.co.uk/docs/</link>
    <description>Recent content in Docs on Agilebase docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 18 Apr 2020 16:57:55 +0100</lastBuildDate>
    
	  <atom:link href="https://docs.agilebase.co.uk/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Development Mode</title>
      <link>https://docs.agilebase.co.uk/docs/introduction/development-mode/</link>
      <pubDate>Fri, 18 Feb 2022 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/introduction/development-mode/</guid>
      <description>
        
        
        &lt;p&gt;As a no-code platform, Agilebase allows you to easily construct (and later de-construct or &amp;lsquo;refactor&amp;rsquo;) and change your software.&lt;/p&gt;
&lt;h2 id=&#34;toggling-development-mode-on-and-off&#34;&gt;Toggling development mode on and off&lt;/h2&gt;
&lt;p&gt;To get started, you need to toggle from &amp;rsquo;normal&amp;rsquo; mode to &amp;lsquo;development&amp;rsquo; mode.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/toggle-build-mode.png&#34; alt=&#34;Toggle development mode&#34;&gt;&lt;/p&gt;
&lt;p&gt;You can do this wherever you are in the system and you will switch to building or developing the item you&amp;rsquo;re looking at. The three main areas this covers are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The homepage. Toggling to development mode on the homepage shows an overview of everything in the system - tables, views, tiles, roles and users can all be listed and edited. Furthermore, the connections between different objects can be shown. More advanced users will typically use this area, when working on larger systems. 
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/A_OYbB9wR6c&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;In a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;view&lt;/a&gt;. When a view is open, toggling development on will let you edit that view - to add or remove fields and calculations for example.&lt;/li&gt;
&lt;li&gt;When viewing a record from a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/%3E&#34;&gt;table&lt;/a&gt;, toggling development on will let you edit that table, e.g. to add/remove fields.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When development mode is on, pencil icons will appear next to every object which can be edited: for example, next to every field and tab in a table record.&lt;/p&gt;
&lt;p&gt;When editing views and tables, the large pencil at the top left lets you edit the object as a whole, as opposed to a field or a tab in it.&lt;/p&gt;
&lt;p&gt;Development mode can easily be toggled off again when you&amp;rsquo;re done and the user interface will switch back to &amp;rsquo;normal&amp;rsquo; mode.&lt;/p&gt;
&lt;h2 id=&#34;using-editing-panels&#34;&gt;Using editing panels&lt;/h2&gt;
&lt;p&gt;When development mode is on, clicking any of the pencil icons on screen will open a panel allowing you to edit the item it&amp;rsquo;s next to. The panel can be dragged to move it around the screen if you want to see what&amp;rsquo;s underneath. Whenever you make a change using the panel, the display underneath will update, allowing you to see the effect your changes have in real time.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s an example of editing a table and view:&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/mTOWsXDpQgo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;and here&amp;rsquo;s what the development mode looks like on the homepage:&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Rojcf6OzdHw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;the-development-homepage&#34;&gt;The development homepage&lt;/h2&gt;
&lt;p&gt;When development mode is toggled on from the homepage, the development homepage will show. There are three main areas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;The lefthand sidebar&lt;/strong&gt;: this shows any objects (tables, views etc.) you&amp;rsquo;ve been working on recently, for quick access, or any that you have &amp;lsquo;pinned&amp;rsquo; (see below)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The map&lt;/strong&gt;: clicking this diagram shows the connections between tables in the system, i.e. the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/&#34;&gt;relations&lt;/a&gt; between them. Clicking a table opens it for editing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lists&lt;/strong&gt;: to the right of the map, at the top, is a set of boxes which each load a different type of object, i.e. &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/&#34;&gt;tables&lt;/a&gt;, &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;tiles&lt;/a&gt;, &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/&#34;&gt;roles&lt;/a&gt;, &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/&#34;&gt;users&lt;/a&gt; and different categories of &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;view&lt;/a&gt;. Clicking on each will load a list of objects, so you can see full details, edit and delete them.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;pinning-objects&#34;&gt;Pinning objects&lt;/h3&gt;
&lt;p&gt;When you have an editing panel open, e.g. by clicking on an object from a list (see above), you can &amp;lsquo;pin&amp;rsquo; it by clicking the pushpin icon at the top left of the panel.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/pinning.png&#34; alt=&#34;Pinning a view&#34;&gt;&lt;/p&gt;
&lt;p&gt;Pinned objects remain on screen for quick access at the top of the lefthand sidebar. They will also be remembered if you log out, for the next time you log in.&lt;/p&gt;
&lt;p&gt;Pinned objects can also be quickly accessed at any time, even if the development homepage is not open, using the history menu in Agilebase&amp;rsquo;s top toolbar which is always present. The history icon is just to the right of the &amp;lsquo;back (&amp;lt;)&amp;rsquo; button.&lt;/p&gt;
&lt;h2 id=&#34;accessing-additional-debugging-information&#34;&gt;Accessing additional debugging information&lt;/h2&gt;
&lt;p&gt;Later on down the route of creating applications, you may wish the user interface to show additional information, specifically in views, to show the primary key values for each record - the internal row identifiers - which are normally hidden.&lt;/p&gt;
&lt;p&gt;This can be useful when testing and debugging &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;APIs&lt;/a&gt; for example.&lt;/p&gt;
&lt;p&gt;To enable this, add &lt;code&gt;&amp;amp;set_context=systadmin&lt;/code&gt; to the URL in the browser. To revert to normal mode, replace it with &lt;code&gt;&amp;amp;set_context=business&lt;/code&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Introduction: What is low code / no code?</title>
      <link>https://docs.agilebase.co.uk/introduction/what-is-no-code/</link>
      <pubDate>Sat, 18 Apr 2020 16:57:55 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/introduction/what-is-no-code/</guid>
      <description>
        
        
        &lt;p&gt;Over the last two years low code / no code software has appeared to burst onto the scene from nowhere. The truth however is a bit less spectacular. Low code / no code platforms have been in development under the radar for at least a decade. What has changed now is the promise has become a reality.&lt;/p&gt;
&lt;p&gt;Low code / no code promised to give users the power to produce bespoke systems, rather than have to rely on developers. For the last forty years off the shelf software was the only real alternative to bespoke development but over that time it gained a reputation for being inflexible and bloated.&lt;/p&gt;
&lt;p&gt;Low code / no code has matured into a viable alternative. A few platforms have proved they are fast, robust and powerful.&lt;/p&gt;
&lt;p&gt;Business teams can build solutions that actually work, that are the right size for them, that reflect their language and that can be adapted in real time as the business evolves. Even on really small budgets.&lt;/p&gt;
&lt;p&gt;Low code / no code platforms come in many flavours and have been designed to tackle different problems.&lt;/p&gt;
&lt;p&gt;Agilebase has been specifically designed to build back offices for ambitious businesses.&lt;/p&gt;
&lt;p&gt;You can start small with a quick prototype, build this over the years into a full blown &lt;a href=&#34;https://en.wikipedia.org/wiki/Enterprise_resource_planning&#34;&gt;ERP&lt;/a&gt; system and even use it to act as the hub for all your software via its built in &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;API Creator&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Learner Progression</title>
      <link>https://docs.agilebase.co.uk/docs/introduction/learner-progression/</link>
      <pubDate>Fri, 18 Feb 2022 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/introduction/learner-progression/</guid>
      <description>
        
        
        &lt;p&gt;Agilebase&amp;rsquo;s learner progression pathway enables you to transform your career. You can go from  a citizen developer to a no-code software architect.&lt;/p&gt;
&lt;p&gt;Citizen developers can create their own applications using no code. Software architects can build complex applications, including powerful workflow features and integrations with other applications.&lt;/p&gt;
&lt;p&gt;To go on this journey requires no technical knowledge. Beginners - &amp;ldquo;citizen developers&amp;rdquo; - come from a diverse range of non-IT backgrounds. The only skills you need are the ability to think, be willing to learn, and be able to plan.&lt;/p&gt;
&lt;p&gt;Agilebase will help you every step of the way. And you can stop at the level that is useful to you.&lt;/p&gt;
&lt;p&gt;Agilebase enables citizen developers to pass through five stages on their way to becoming software architects:&lt;/p&gt;
&lt;h2 id=&#34;citizen-developer-level-1&#34;&gt;Citizen Developer Level 1&lt;/h2&gt;
&lt;p&gt;This is the start of the Agilebase journey. At this level you can create your own applications, using no coding.&lt;/p&gt;
&lt;p&gt;An Agilebase citizen developer can create &amp;lsquo;personal copies&amp;rsquo; of any &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;view&lt;/a&gt; and edit those copies&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;remove or add fields, excepting any that are marked &amp;lsquo;confidential&amp;rsquo; (only higher level developers can access those fields)&lt;/li&gt;
&lt;li&gt;rearrange fields&lt;/li&gt;
&lt;li&gt;change field sorting&lt;/li&gt;
&lt;li&gt;add filters or remove filters (except on &amp;lsquo;confidential&amp;rsquo; fields)&lt;/li&gt;
&lt;li&gt;add and remove &lt;a href=&#34;https://docs.agilebase.co.uk/docs/charting/&#34;&gt;charts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;A confidential field is one that has a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#show-if-record-in-view&#34;&gt;visibility&lt;/a&gt; rule, or is used for &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/#multi-tenanting&#34;&gt;multi-tenanting&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The personal copy of the view is seen only by them. For example, a citizen developer may create a list of records filtered to show ones assigned to them. Everyone else in the organisation sees only the original view.&lt;/p&gt;
&lt;p&gt;You earn the Citizen Developer title once you have carried out standard functions. These include adding and editing records. The title is assigned to internal staff not to &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/community-users/&#34;&gt;community users&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;citizen-developer-level-2&#34;&gt;Citizen Developer Level 2&lt;/h2&gt;
&lt;p&gt;This level is suggested or &amp;lsquo;unlocked&amp;rsquo; once a citizen developer has carried out a certain number of citizen development functions and has therefore started to learn how no code development works in a safe environment.&lt;/p&gt;
&lt;p&gt;However to activate the level, it must be manually assigned by a Software Architect level user, as it allows changes to the system which can affect other users.&lt;/p&gt;
&lt;p&gt;A citizen developer level 2 can&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create new views that everyone can see, from any table
&lt;ul&gt;
&lt;li&gt;edit them as per the citizen developer functionality above&lt;/li&gt;
&lt;li&gt;additionally they can add and remove simple joins, to include data from other tables in a view&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;remove views that they themselves have created (not those that others have)&lt;/li&gt;
&lt;li&gt;create their own &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/&#34;&gt;tables&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;add, edit and remove fields and tabs from those tables&lt;/li&gt;
&lt;li&gt;edit basic properties of the fields&lt;/li&gt;
&lt;li&gt;assign privileges (up to edit) on those tables, using existing roles or direct user privileges&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;create &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;tiles&lt;/a&gt; and delete tiles they&amp;rsquo;ve added themselves&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;citizen-developer-level-3&#34;&gt;Citizen Developer Level 3&lt;/h2&gt;
&lt;p&gt;A Software Architect (see below) can, at their discretion, assign a citizen developer 3 &amp;lsquo;develop&amp;rsquo; privileges on a table (or tables).&lt;/p&gt;
&lt;p&gt;That allows them to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;add &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/&#34;&gt;fields&lt;/a&gt; to those table, excluding referenced fields&lt;/li&gt;
&lt;li&gt;remove fields that they themselves have added (not others)&lt;/li&gt;
&lt;li&gt;edit the basic properties of any field in those tables, e.g. the list of options in a dropdown box&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, actions not related to having develop privileges on a particular table are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;edit the basic properties of any regular view. However, workflow, API and some other types of system view will be read-only&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;junior-software-architect&#34;&gt;Junior Software Architect&lt;/h2&gt;
&lt;p&gt;A junior software architect can use practically all of the application building functionality of Agilebase. For example&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflows&lt;/a&gt; (including chasers, document generation)&lt;/li&gt;
&lt;li&gt;Set up &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add complex &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/joins/&#34;&gt;joins&lt;/a&gt; to views&lt;/li&gt;
&lt;li&gt;Create, edit and delete &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/&#34;&gt;roles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Assign &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/&#34;&gt;privileges&lt;/a&gt; to roles or users up to the &amp;rsquo;edit&amp;rsquo; level&lt;/li&gt;
&lt;li&gt;Remove fields, views etc. created by anyone&lt;/li&gt;
&lt;li&gt;Edit the advanced properties of fields and views, including field visibility rules (confidentiality rules) for example&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Their only limitations are to do with managing the organisation as a whole, including other users.&lt;/p&gt;
&lt;h2 id=&#34;software-architect&#34;&gt;Software Architect&lt;/h2&gt;
&lt;p&gt;As well as building and disassembling applications, software architects can set company-wide settings and manage the account as a whole. They have full discretionary spend and can&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add and remove &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/&#34;&gt;users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Edit company level settings (e.g. whether to enforce 2FA)&lt;/li&gt;
&lt;li&gt;Change table &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/sensitive-data/&#34;&gt;sensitive and personal data&lt;/a&gt; settings (GDPR)&lt;/li&gt;
&lt;li&gt;View and controls users&amp;rsquo; learner progression levels and &amp;lsquo;budget&amp;rsquo; limits&lt;/li&gt;
&lt;li&gt;Assign any privileges up to the highest &amp;lsquo;develop&amp;rsquo; level&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Introduction: What is a back office system?</title>
      <link>https://docs.agilebase.co.uk/introduction/what-is-a-back-office-system/</link>
      <pubDate>Mon, 22 Jun 2020 09:57:55 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/introduction/what-is-a-back-office-system/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Back-office_software&#34;&gt;Back-office software&lt;/a&gt; solutions evolved with the emergence of cloud-based software as a service (SaaS) as a way of distinguishing them from front-office software, (which typically refers to software used for processes related to things like marketing, sales, interaction tracking, project management and other customer-facing activities).&lt;/p&gt;
&lt;p&gt;Whilst Agilebase is widely used as front-office platform our unique strength is in our ability to support not only this front end but also the back-office.&lt;/p&gt;
&lt;p&gt;Because of the power and flexibility of Agilebase there are a really wide range of business processes that can be successfully managed with the platform across all sectors, manufacturing and service related items.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supplier Approval&lt;/li&gt;
&lt;li&gt;New Product Development (NPD)&lt;/li&gt;
&lt;li&gt;Project Management&lt;/li&gt;
&lt;li&gt;Customer Support&lt;/li&gt;
&lt;li&gt;Continuous Improvement Management&lt;/li&gt;
&lt;li&gt;HR&lt;/li&gt;
&lt;li&gt;Staff Training&lt;/li&gt;
&lt;li&gt;Project Portfolio Management&lt;/li&gt;
&lt;li&gt;Order Processing&lt;/li&gt;
&lt;li&gt;Billing&lt;/li&gt;
&lt;li&gt;Interaction Tracking&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SaaS platforms give organisations a way to simplify and streamline back-office management functions, particularly for companies with multiple locations.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 2FA setup</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/2fa-setup/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/2fa-setup/</guid>
      <description>
        
        
        &lt;h2 id=&#34;what-is-two-factor-authentication&#34;&gt;What is two factor authentication?&lt;/h2&gt;
&lt;p&gt;Simply put, it helps to keep your company’s data more secure, to stop outsiders stealing it, editing or even deleting it.&lt;/p&gt;
&lt;p&gt;When someone logs in from a new device or location, the system will prompt them for a code sent to or generated by their phone, to prove their identity.&lt;/p&gt;
&lt;p&gt;If you’d like to dive into more detail, check out this video from authy.com: &lt;a href=&#34;https://www.youtube.com/watch?v=ds_TANz4n3U&amp;amp;feature=youtu.be&#34;&gt;https://www.youtube.com/watch?v=ds_TANz4n3U&amp;amp;feature=youtu.be&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-long-does-this-take-to-set-up&#34;&gt;How long does this take to set up?&lt;/h2&gt;
&lt;p&gt;No more than a minute or two. It’s a really simple set up process. Here&amp;rsquo;s a 60 second video showing how to do it.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/lGqp6oDVUF4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;This example shows an iPhone but it’s the same process with an Android phone - just install the Authenticator app from the Google Play store.&lt;/p&gt;
&lt;p&gt;Setup only needs to be done once. From then on you don’t need to do anything apart from open the app when asked. The app will automatically generate and display a code without any need for you to do anything.&lt;/p&gt;
&lt;p&gt;To kick off the process&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click your user icon at the top right of the screen&lt;/li&gt;
&lt;li&gt;Select &amp;rsquo;edit profile&#39;&lt;/li&gt;
&lt;li&gt;Tick &amp;rsquo;enable two factor authentication&#39;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;what-if-i-cant-use-a-smartphone&#34;&gt;What if I can’t use a smartphone?&lt;/h2&gt;
&lt;p&gt;If you don’t use a smartphone at work, that’s no problem. You can use an app on your computer - in fact many people find that more convenient than using a phone. Please ask your system administrator how to set things up and they’ll give you a hand.&lt;/p&gt;
&lt;h2 id=&#34;when-should-i-set-this-up&#34;&gt;When should I set this up?&lt;/h2&gt;
&lt;p&gt;Now!&lt;/p&gt;
&lt;p&gt;It’s never a bad time to upgrade your data security and privacy protection measures. If you’ve not already set up 2FA, Agilebase will prompt you to do so once a week.&lt;/p&gt;
&lt;p&gt;However, you can do so at any time: click your user icon at the top right of the screen, select &amp;rsquo;edit profile&amp;rsquo; and tick &amp;rsquo;enable two factor authentication&#39;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Community Users</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/community-users/</link>
      <pubDate>Fri, 05 Nov 2021 12:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/community-users/</guid>
      <description>
        
        
        &lt;p&gt;Agilebase is primarily a platform for building back office systems for employees (or members of the organisation) to use.&lt;/p&gt;
&lt;p&gt;However, it&amp;rsquo;s common to allow access to people outside the organisation to perform limited data entry tasks. For example, you may wish your suppliers to be able to upload certificates of conformances to items they sell you, or you may have a large workforce of contractors who you require to fill in timesheets.&lt;/p&gt;
&lt;p&gt;It may be that you don&amp;rsquo;t wish to supply each person a full Agilebase license because&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;there will be a large number of them, so there&amp;rsquo;ll be management and cost issues&lt;/li&gt;
&lt;li&gt;you wish to restrict what they can do in the system further than can be accomplished with roles and privileges&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Community Users mechanism allows this.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Community Users have limited access (described below), with subscriptions which are significantly less costly and must be purchased in bulk. Once a block of community users is purchased, you can set up and remove as many as you need within the upper limit of that block.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;validity&#34;&gt;Validity&lt;/h2&gt;
&lt;p&gt;For a Community User subscription to apply, a person must be one of&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a &lt;em&gt;supplier&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;a &lt;em&gt;contractor&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;an &lt;em&gt;app&lt;/em&gt; user i.e. someone who utilises Agilebase functions via the API, using a third party app or website&lt;/li&gt;
&lt;li&gt;or a &lt;em&gt;member of the public&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;
&lt;h3 id=&#34;configuring-a-community-of-users&#34;&gt;Configuring a community of users&lt;/h3&gt;
&lt;p&gt;To set up a new community of a certain type, a role must be created for them. The role privileges will determine which tables they have access to.&lt;/p&gt;
&lt;p&gt;Each community user must be a member of that single role only - no additional roles or privileges can be applied.&lt;/p&gt;
&lt;p&gt;Different communities of users can be created by creating different roles. A separate block of subscriptions must be purchased for each role created. Therefore you can have multiple communities, for example one for members of the public and another for contractors, or two different types of contractor.&lt;/p&gt;
&lt;p&gt;When setting up the role, tick the &amp;lsquo;members are community users&amp;rsquo; tickbox. Then create a user and assign them to that role.&lt;/p&gt;
&lt;h2 id=&#34;functional-restrictions&#34;&gt;Functional Restrictions&lt;/h2&gt;
&lt;p&gt;The following restrictions appropriate to users of an outside community are applied.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a community users role can be set to allow VIEW access to up to 10 tables, plus EDIT privileges on up to 3 additional tables&lt;/li&gt;
&lt;li&gt;for the 3 tables which allow editing, community users can only see and edit records they themselves have created. All records from read-only tables can be seen.
&lt;ul&gt;
&lt;li&gt;for example, a user may have read-only access to a list of companies. Against each company, they can add and edit timesheet records&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;community users only see comments added by themselves or specifically sent to them (comments are commonly used for internal company discussions)&lt;/li&gt;
&lt;li&gt;a community user can have up to 6 tiles on their homepage&lt;/li&gt;
&lt;li&gt;the homepage is fixed for community users, they can&amp;rsquo;t add or remove tiles&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further, community users are unable to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;export data&lt;/li&gt;
&lt;li&gt;create charts&lt;/li&gt;
&lt;li&gt;unlock locked fields or records&lt;/li&gt;
&lt;li&gt;bulk edit&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Together, all of these measures will help protect data in the organisation whilst simplifying the user interface, allowing people from outside to be able to usefully carry out work, without having to go through the expense of creating or purchasing dedicated applications for them.&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Citizen Developer Level 1</title>
      <link>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/citizen-developer-level-1/</link>
      <pubDate>Tue, 12 Sep 2023 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/citizen-developer-level-1/</guid>
      <description>
        
        
        &lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;This is the start of the Agilebase journey. At this level you can create your own customisations, using no coding.&lt;/p&gt;
&lt;p&gt;An Agilebase citizen developer can create &amp;lsquo;personal copies&amp;rsquo; of any &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;view&lt;/a&gt; and edit those copies&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;remove or add fields, excepting any that are marked &amp;lsquo;confidential&amp;rsquo; (only higher level developers can access those fields)&lt;/li&gt;
&lt;li&gt;rearrange fields&lt;/li&gt;
&lt;li&gt;change field sorting&lt;/li&gt;
&lt;li&gt;add filters or remove filters (except on &amp;lsquo;confidential&amp;rsquo; fields)&lt;/li&gt;
&lt;li&gt;add and remove &lt;a href=&#34;https://docs.agilebase.co.uk/docs/charting/&#34;&gt;charts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;A confidential field is one that has a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#show-if-record-in-view&#34;&gt;visibility&lt;/a&gt; rule, or is used for &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/#multi-tenanting&#34;&gt;multi-tenanting&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The personal copy of the view is seen only by them. For example, a citizen developer may create a list of records filtered to show ones assigned to them. Everyone else in the organisation sees only the original view.&lt;/p&gt;
&lt;p&gt;You earn the Citizen Developer title once you have carried out standard functions. These include adding and editing records. The title is assigned to internal staff not to &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/community-users/&#34;&gt;community users&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;useful-links&#34;&gt;Useful Links&lt;/h2&gt;
&lt;p&gt;Visit our helpful introductory guide to personalising your agileBase experience by visiting &lt;a href=&#34;https://docs.agilebase.co.uk/guides/guide2-personalisation/&#34;&gt;Guide 2 - Personalisation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For more information about:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Accessing &lt;a href=&#34;https://docs.agilebase.co.uk/docs/introduction/development-mode/&#34;&gt;Developer mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Using the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/charting/built-in-charting/&#34;&gt;Built in Charting&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: 1. Personalising our CRM</title>
      <link>https://docs.agilebase.co.uk/guides/guide2-personalisation/creating_personal_views/</link>
      <pubDate>Thu, 31 Aug 2023 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/guides/guide2-personalisation/creating_personal_views/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Learning Aim:&lt;/strong&gt;  Understand the easy ways to alter an existing view&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; To be a competent user of agilebase, with Citizen Developer level 1 (or higher) enabled&lt;/p&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;The guide is going to introduce to you some of the features that become available to you once you’ve been given the role of Citizen Developer. In essence, you now have the power to make small tweaks to the system that just affect yourself, helping you customise how it works and hopefully making it a more efficient and enjoyable process.
A good example would be making your own view of a list of organisations that is focused on the ones where you are the owner&lt;/p&gt;
&lt;p&gt;[guide 2 - video 1]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/D_400LI_O_g&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;introducing-developer-mode&#34;&gt;Introducing Developer Mode&lt;/h2&gt;
&lt;p&gt;Navigate to the view you wish to personalise
Then simply toggle the development mode icon that you’ll find top left of the page.
You can see some new icons on the user interface.
&lt;img src=&#34;https://docs.agilebase.co.uk/view-edit-mode.png&#34; alt=&#34;Edit mode enabled - new icons now visible&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;adding-a-field&#34;&gt;Adding a field&lt;/h3&gt;
&lt;p&gt;Look at the far right of the table headers, there should now be a plus button.
If this is the first time you’ve tried to change the view then the system will tell you that it needs to make a copy just for you. Simply press the button to do this. The view will reload on screen and we can see the change in name indicating that it’s your version. You can now press the Plus button again…
From this window you can add other fields that may be of interest.
For example me, the date the record was created. This has the rather cumbersome name &amp;ldquo;Creation Time [Auto]&amp;rdquo;. Select it and press ‘Add’.
You are prompted to change the name or simply press Add to keep the original.&lt;/p&gt;
&lt;h3 id=&#34;moving-fields&#34;&gt;Moving Fields&lt;/h3&gt;
&lt;p&gt;You change the order of the fields from the list of fields found under the Edit button.
Pressing  ‘Edit view’ at the top left to enter development mode. You should now see the list of all the fields and its as simple as dragging and dropping the fields in to the desired order.&lt;/p&gt;
&lt;h3 id=&#34;removing-a-field&#34;&gt;Removing a Field&lt;/h3&gt;
&lt;p&gt;To remove a field, you can either:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;click the small &amp;ldquo;X&amp;rdquo; icon on the right hand side of the list of fields.&lt;/li&gt;
&lt;li&gt;edit the individual field and press the &amp;ldquo;Remore from view button
Please be aware that some fields can NOT be removed. Don’t worry, you can’t cause any damage. The system simply alerts you that it can’t delete the field. In these cases you may want to simply move the field to the bottom of the list out of the way!&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;adding-a-filter&#34;&gt;Adding a filter&lt;/h3&gt;
&lt;p&gt;A useful filter to add in this example would be to only show Organisations that belong to myself.
Make sure you are in developer mode, oand start by clicking  ‘Edit view’ at the top left
Now click on the filters section.
To add the filter choose the field you wish to filter by, in this case ‘Owner’.
The type of filter depends on the situation, but in this case we’ll choose ‘contains’
And the value we need to enter is your name
Then we simply press ‘Add’&lt;/p&gt;
&lt;h3 id=&#34;renaming-a-view&#34;&gt;Renaming a view&lt;/h3&gt;
&lt;p&gt;Again, make sure you are in developer mode, and start by clicking  ‘Edit view’ at the top left
Now click on &amp;ldquo;Properties and Options&amp;rdquo;
Simply enter your new title in the &amp;ldquo;view name&amp;rdquo; input box.
&lt;strong&gt;TIP&lt;/strong&gt; You can use a &amp;quot; - &amp;quot; to help organise how the views are diaplyed in the menu.
So it may make sense to rename this view to &amp;ldquo;Organisations - MY&amp;rdquo;, to have our view appear in the existing Organisations menu item.&lt;/p&gt;
&lt;h3 id=&#34;changing-the-default-view-of-a-tile&#34;&gt;Changing the Default View of a tile&lt;/h3&gt;
&lt;p&gt;Rather than having to swap to “my” view everytime I click in to the tile, it wuld be more efficient if changed the default to be My personal view.
On the front screen, click your avatar and choose tile settings.
Each of the tiles will now have a cog on it.
On the CRM tile we can click it and change our default view to be my personalised one.
From now on, when you click on the CRM tile it goes straight to the most useful view!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: 1. Creating a basic task list</title>
      <link>https://docs.agilebase.co.uk/guides/guide1-crm/tasklist/</link>
      <pubDate>Fri, 22 Apr 2022 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/guides/guide1-crm/tasklist/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Learning Aim:&lt;/strong&gt; Create a Table and associated Views to use it!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; User to have watched &amp;ldquo;How to use Agilebase&amp;rdquo;&lt;/p&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;This stage of the guide will introduce you to the basic activities required to build a simple application. We will start by creating a table with different types of fields in order to store a variety of data. We will then show you how to create and control tiles, views and forms which are the interfaces that your users will use to enter and consume this data.
Let us start by building a simple task list.&lt;/p&gt;
&lt;h2 id=&#34;create-a-table-called-tasks&#34;&gt;Create a table called &amp;ldquo;Tasks&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;Our simple application will need to store information about the tasks our users create. This is done by creating a database table. In Agilebase this is achieved by navigating to the developer interface and pressing the “add new table button”.
[guide 1.1 - video 1]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/-kY2RRzKqxQ&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;add-fields-to-the-tasks-table&#34;&gt;Add fields to the &amp;ldquo;Tasks&amp;rdquo; table&lt;/h2&gt;
&lt;p&gt;A table of data is nothing without its list of fields. Each field stores a single piece of information. It is simple to add fields to an existing table within agilebase.
Edit the table, type in the name of the field and choose the appropriate type. On creation of the field you will be able to set further options.
For more detail visit - &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/&#34;&gt;https://docs.agilebase.co.uk/docs/fields/field-types/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the following video we add the fields needed to for a simple Task
[guide 1.1 - video 2]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/SannBQNKlKk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;make-the-form-easier-to-understand-break-it-into-sections&#34;&gt;Make the form easier to understand. Break it into sections&lt;/h2&gt;
&lt;p&gt;Now we have the data structure required to capture a simple task we can think about how it would be used. The user interface within Agilebase is controlled by the list of fields and their options. It is a simple task to reorder fields, just use the drag and drop facility when looking at the list of fields.
Use a field of type separator to create sections within the user interface
[guide 1.1 - video 3]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/c8XMlhoiuSM&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;We now need to provide the user with a way of accessing our “tasks” table and using it!!! This is achieved by a combination of Tiles and Views.&lt;/p&gt;
&lt;p&gt;For more info on Tiles - &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;https://docs.agilebase.co.uk/docs/tiles/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For more info on Views - &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;https://docs.agilebase.co.uk/docs/views/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In summary:
A view generally provides abbreviated data in the form of a list of records. It also provides the ability to drill through to see the full record details.
Tiles are a way of grouping functionality together. Specifically, a data tile is a way of grouping a collection of views that all share some common theme.&lt;/p&gt;
&lt;p&gt;For this guide, we need a tile and collection of views dedicated to helping us create and manage our “Tasks”&lt;/p&gt;
&lt;h2 id=&#34;make-the-table-available-for-use&#34;&gt;Make the table available for use!&lt;/h2&gt;
&lt;h3 id=&#34;adding-a-tile-to-the-homepage&#34;&gt;Adding a tile to the homepage&lt;/h3&gt;
&lt;p&gt;The homepage of agilebase is made up of data tiles. We need to create a new tile to hold all the views of our taks data
[guide 1.1 - video 4]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/7hA7-VzX_A8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;adding-views-that-show-all-the-tasks-that-have-been-created&#34;&gt;Adding views that show all the tasks that have been created&lt;/h3&gt;
&lt;p&gt;To provide the user access to a list of Task records we need to create a View. To start with we will create a view that will list ALL the data.   &lt;br&gt;
[guide 1.1 - video 5]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ZwAcJz3jBhs&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;a-better-way-of-looking-at-data&#34;&gt;A better way of looking at data&lt;/h3&gt;
&lt;p&gt;Many users will be familiar with a card or kanban style interface (such as Trello). Agilebase has a similar style of view that can often be useful.&lt;br&gt;
Within a views “options” tab you can set its interface stylle to be “Cards in Columns”
[guide 1.1 - video 6]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/HeZxfiLZR_k&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;making-views-for-a-specific-job&#34;&gt;Making views for a specific job&lt;/h3&gt;
&lt;p&gt;Whilst users can apply their own filters and re-order data in a view, it is often a better user experience if there are dedicated views setup that match a particular job. For this example we want to create a list of all the completed tasks with the most recent at the top of the list.
For more information on applying filters - &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/filters/&#34;&gt;https://docs.agilebase.co.uk/docs/views/filters/&lt;/a&gt;
[guide 1.1 - video 7]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/2755kBKLKzk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;our-simple-application-is-complete&#34;&gt;Our simple application is complete!&lt;/h3&gt;
&lt;p&gt;However, we can quickly see that we have missed implementing a key feature - collaboration. We should add another field to this table - a comments field!&lt;/p&gt;
&lt;p&gt;For more information on the comments field and its associated comment feed - &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/comment-feeds/&#34;&gt;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/comment-feeds/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;add-a-comments-field-to-a-table&#34;&gt;Add a Comments field to a table!&lt;/h2&gt;
&lt;p&gt;Adding new fields to an existing table is no different to when creating from scratch. Simply add via the table edit screen.
Adding collaboration functionality to an agileB\se application is as easy as adding any other field! Just add a field of type Comments as shown in the video below
[guide 1.1 - video 8 *]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/VqpAmdVJiVc&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For completeness the remainder of this stage of the guide covers removing items and functionality that are no longer needed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;deleting-views&#34;&gt;Deleting Views&lt;/h2&gt;
&lt;p&gt;Eventually you will want to remove unused views in order to reduce clutter and streamline the user experience. To do this go to the Properties and Options tab when editing the view and press Delete view
[guide 1.1 - video 9 *]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/YfCz-9Fjt7g&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;delete-fields-and-tables&#34;&gt;Delete Fields and Tables&lt;/h2&gt;
&lt;p&gt;Keeping the user interface streamlined and uncluttered also includes the removal of unwanted or old data fields.
It is straightforward to delete a field from a table. Either clicking the X icon on the RHS of the list of fields, or use the Remove field button on the fields definition. However, extra care needs to be taken as the field may be in use as the following video demonstrates.&lt;/p&gt;
&lt;p&gt;N.b. to completely remove a table you are first required to delete ALL the fields it contains.
[guide 1.1 - video 10 *]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/5ExSypK06W8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Introduction: Why use Agilebase?</title>
      <link>https://docs.agilebase.co.uk/introduction/why-use-agilebase/</link>
      <pubDate>Mon, 22 Jun 2020 09:57:55 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/introduction/why-use-agilebase/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/platform.jpg&#34; alt=&#34;Agilebase banner&#34;&gt;&lt;/p&gt;
&lt;p&gt;Agilebase has been created with some important aims in mind&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;to create software that people find enjoyable to use, which manifests in many ways, most obviously the attractive and colourful user interface, but also because it can match user&amp;rsquo;s requirements exactly&lt;/li&gt;
&lt;li&gt;to support the full ambitions of business owners. It&amp;rsquo;s simple to get started but the platform has a very high &lt;em&gt;technical ceiling&lt;/em&gt; - there&amp;rsquo;s not much you can&amp;rsquo;t accomplish&lt;/li&gt;
&lt;li&gt;to make the most out of an organisation workforce&amp;rsquo;s perhaps un-tapped skills and experience, allowing people to take full ownership of their own areas of their business&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Policies</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/policies/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/policies/</guid>
      <description>
        
        
        &lt;h2 id=&#34;backups&#34;&gt;Backups&lt;/h2&gt;
&lt;p&gt;Data backups are performed across the stack of technology, from server down to databases and file storage.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Database backups are taken daily and hosted in the European Union by Amazon. Older backups transition to &lt;a href=&#34;https://aws.amazon.com/glacier/&#34;&gt;Amazon Glacier&lt;/a&gt; and are kept for 200 days - this allows a balance between the practical necessity of allowing rollbacks to a certain point in time, whilst not storing data for an unnecessarily long period, to comply with the GDPR.
By policy, backups under 100 days old are read-only and un-deletable, so will always be available in the case of attacks like ransomware.
These backups are also encrypted so that Amazon has no access to the data within then.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/warm-standby.html&#34;&gt;Continuous archiving &lt;/a&gt; of the database is also enabled, to transfer data to a &amp;lsquo;hot standby&amp;rsquo; server using streaming replication, allowing immediate failover should the primary database fail for any reason.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agilebase content (uploaded files, custom templates etc.) also have snapshots taken daily, kept for 200 days in a separate EU location.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In addition to these content-only backups, snapshots of the totality of each key server in the infrastructure (including configuration), are run daily using the Linode backup service &lt;a href=&#34;https://www.linode.com/products/backups/&#34;&gt;https://www.linode.com/products/backups/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The backup and recovery process is monitored and tested regularly.&lt;/p&gt;
&lt;h3 id=&#34;retrieval&#34;&gt;Retrieval&lt;/h3&gt;
&lt;p&gt;There may be a charge for retrieval of customer data from backup, to cover our costs. The data will be restored to a separate instance of Agilebase available at a different URL, which a customer can look at to compare data. If necessary, data can then be extracted from one and loaded into the other.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Please be aware that depending on needs, this may be a complex process due to the fact that other data in the live system may have changed since the backup. A simple overwrite of existing data may not be the best option.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;privacy-policy&#34;&gt;Privacy policy&lt;/h2&gt;
&lt;p&gt;Agilebase Ltd is funded directly by the customers we provide services to, we do not have any other business model, particularly we do not resell any data.&lt;/p&gt;
&lt;p&gt;Our privacy policy is available here: &lt;a href=&#34;https://agilechilli.com/help-centre/agilebase/privacy-policy/&#34;&gt;https://agilechilli.com/help-centre/agilebase/privacy-policy/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;gdpr-policy&#34;&gt;GDPR Policy&lt;/h2&gt;
&lt;p&gt;An overview of our GDPR policy is available &lt;a href=&#34;https://docs.agilebase.co.uk/gdpr-overview.pdf&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/gdpr-overview.pdf&#34;&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/gdpr-compliance-cycle.png&#34; alt=&#34;GDPR Compliance Cycle&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;data-protection-and-disaster-recovery&#34;&gt;Data Protection and Disaster Recovery&lt;/h2&gt;
&lt;p&gt;Full details of our processes and plans are available to customers and relevant parties on request.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Relational Database Concepts</title>
      <link>https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/</guid>
      <description>
        
        
        &lt;p&gt;Before diving into the details of building applications, starting with tables, let&amp;rsquo;s take a step back and learn some background information about databases, including what a table is. If you&amp;rsquo;re familiar with these concepts, feel free to skip this section.&lt;/p&gt;
&lt;p&gt;When building back office software with Agilebase, a large amount of what we&amp;rsquo;ll be doing is building database structures, to store user-entered data. Agilebase takes care of creating the user interface to allow users to use these structures automatically, e.g. to search for data, add and edit it.&lt;/p&gt;
&lt;p&gt;You will find many articles explaining relational databases if you look for them on the internet. Most will introduce SQL, the language used to work with databases. It&amp;rsquo;s not necessary to learn that as Agilebase generates it automatically behind the scenes, but the higher level concepts are useful to grasp.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a YouTube video with a good introduction.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/NvrpuBAMddw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;If you prefer reading, here are a couple of examples.&lt;/p&gt;
&lt;h2 id=&#34;simple-example---what-is-a-relation&#34;&gt;Simple example - what is a relation?&lt;/h2&gt;
&lt;p&gt;Imagine we want a place to store records of suppliers to our business. This could be the start of a supplier management system to compare companies based on quality, accreditation levels and price for example, or to carry out supplier approval processes.&lt;/p&gt;
&lt;p&gt;To do this we need just one table &amp;lsquo;suppliers&amp;rsquo; which would have fields in such as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;company name&lt;/li&gt;
&lt;li&gt;a few address fields&lt;/li&gt;
&lt;li&gt;phone number&lt;/li&gt;
&lt;li&gt;website&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;etc.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s just like creating a spreadsheet with column headings across the top for those fields. You can then add a row for each supplier you record.&lt;/p&gt;
&lt;p&gt;Now, if we communicate with our suppliers, we may want to store the contact details of a few key people at each supplier.&lt;/p&gt;
&lt;p&gt;Typically, a naive spreadsheet user would add a few more columns (fields in database parlance), things like Contact Name 1, Phone 1, Email 1, Contact Name 2, Phone 2, Email 2. As you can imagine if there are more than one or two contacts, it would become pretty cumbersome and difficult to maintain.&lt;/p&gt;
&lt;p&gt;With our database we can easily do a lot better and create a separate table of contacts that links to the suppliers table - in fact it &lt;strong&gt;relates&lt;/strong&gt; to it. That&amp;rsquo;s why relational databases are so called, just because they&amp;rsquo;re very good at dealing with relations between tables.&lt;/p&gt;
&lt;p&gt;So we have our contact table, maybe with fields&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contact name&lt;/li&gt;
&lt;li&gt;Role&lt;/li&gt;
&lt;li&gt;Direct Line number&lt;/li&gt;
&lt;li&gt;Email address&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;etc.&lt;/p&gt;
&lt;p&gt;To connect them we add another field of a special type, called a &lt;em&gt;relation&lt;/em&gt;. It can be called Company, but rather than storing the company name again (we already have stored the company name in the suppliers table), it will be a link to a particular company. Don&amp;rsquo;t worry about how that works behind the scenes, just know that the Company relation links to a supplier.&lt;/p&gt;
&lt;p&gt;So now we have&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/join.png&#34; alt=&#34;join&#34;&gt;&lt;/p&gt;
&lt;p&gt;We can now add as many contacts as we like to a supplier. And if we decide to store some more data about each contact, maybe a link to their LinkedIn profile for example, we can add that field to the contacts table and it will automatically be there for all contacts (as opposed to our naive spreadsheet example).&lt;/p&gt;
&lt;h2 id=&#34;a-more-complex-example&#34;&gt;A more complex example&lt;/h2&gt;
&lt;p&gt;That&amp;rsquo;s a good start. Moving on, there&amp;rsquo;s one more type of relation it&amp;rsquo;s useful to understand - the &amp;lsquo;many to many&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;Our link between contacts and suppliers above is called a &amp;lsquo;one to many&amp;rsquo; (or sometimes many to one) relationship. The reason is simply that one supplier can have many contacts attached.&lt;/p&gt;
&lt;p&gt;What happens if we think about a more complex case? Suppose our suppliers supply us with raw materials, for example ingredients and packaging. We may want to record which materials each supplier supplies.&lt;/p&gt;
&lt;p&gt;We could set it up as above, where we have a raw materials table. A raw material has a relation field linking it to a supplier, so one supplier can supply many materials.&lt;/p&gt;
&lt;p&gt;However, what happens if a particular raw material is supplied by more than one company? You may have a primary supplier, then various fallbacks for example.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;d have to create a new raw material record for each supplier. That would be ok if our raw material record consisted of nothing more than a name and maybe a price, but there could be dozens or hundreds of fields added as we build up our system - to store nutritional information, chemical properties, allergens, etc. etc. That would mean lots of duplication to keep track of. And if we want to later build recipes which use our raw materials, we&amp;rsquo;d probably just want a recipe to refer to &amp;lsquo;flour&amp;rsquo;, not &amp;lsquo;flour from Supplier X&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;The solution is to create a &lt;strong&gt;many to many&lt;/strong&gt; relation, where one supplier can provide many raw materials but also a single raw material can be linked to many different suppliers.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s no new field type to get to know, we just use the standard one to many relation we&amp;rsquo;ve already learned about in a clever new way - we use two of them, plus a join table. The structure looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/junction-table.png&#34; alt=&#34;junction table&#34;&gt;&lt;/p&gt;
&lt;p&gt;The table in the middle, Links, is called a join table, or junction table.&lt;/p&gt;
&lt;p&gt;It has a normal relation field linking it to suppliers, and also one linking to raw materials. By adding a record to the links table, we can join any raw material to any supplier. A supplier can then have lots of raw materials, but an raw material can also have lots of suppliers.&lt;/p&gt;
&lt;p&gt;The video above also explains this type of relation if you&amp;rsquo;ve not already watched it.&lt;/p&gt;
&lt;h3 id=&#34;when-to-use-the-many-to-many&#34;&gt;When to use the many to many&lt;/h3&gt;
&lt;p&gt;You may have a niggling thought at the back of your mind: how do I know whether it&amp;rsquo;s best to use a simple one to many relation, or a more complex many to many setup? Surely I could use many to many for contacts and suppliers too? A single contact may be associated with more than one supplier, for example if they&amp;rsquo;re a contractor, or if they move jobs.&lt;/p&gt;
&lt;p&gt;The answer to that just comes down to your judgement. Although Agilebase creates a friendly, easy to use interface on top of the data structure, the many to many does add complexity. So it&amp;rsquo;s a bit of a trade-off. However the advantage of a no-code system like Agilebase is that you can rapidly try out ideas and see which one works best. As time goes on you&amp;rsquo;ll get a sense of what works best in which situation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you do want to learn more about this topic, it&amp;rsquo;s called &amp;lsquo;database normalisation&amp;rsquo; and there&amp;rsquo;s plenty written about it!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;I hope that gives you a bit of background about what a table is, what a relation is and how they work together.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A table is a store of data about a single concept e.g. a company or contact&lt;/li&gt;
&lt;li&gt;A relation field links tables together e.g. a contact belongs to a company&lt;/li&gt;
&lt;li&gt;Many to many relations (created with a join table) are sometimes useful. They allow us to link many records of one table to many of another.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That&amp;rsquo;s pretty much all of the most important information you&amp;rsquo;ll need to know about data structures. The rest of the documentation will show you how to create applications practically. Have fun!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Roles</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/</guid>
      <description>
        
        
        &lt;p&gt;The primary purpose of roles is to apply privileges to groups of users, rather than applying them individually. That makes managing large numbers of users easier and also more secure as it&amp;rsquo;s easy to see which privileges each type of user has and which they don&amp;rsquo;t.&lt;/p&gt;
&lt;p&gt;Roles have some other important uses, such as multi-tenanting, described below.&lt;/p&gt;
&lt;h2 id=&#34;creating-a-role&#34;&gt;Creating a role&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Go to the homepage and toggle development mode on
42 Click the &amp;lsquo;+ ROLE&amp;rsquo; button at the top right of the screen&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/add-role.png&#34; alt=&#34;Add Role&#34;&gt;&lt;/p&gt;
&lt;p&gt;You should now see an editing screen with the details of the role you just created. You can give it a name and there are a few options:
&lt;img src=&#34;https://docs.agilebase.co.uk/new-role-details.png&#34; alt=&#34;Role details&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Allow Export&lt;/strong&gt;&lt;br&gt;
Referrs to exporting to spreadsheet - see &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/exporting-to-spreadsheet/&#34;&gt;spreadsheet exports&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Allow global editing&lt;/strong&gt;
Users with &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/&#34;&gt;edit privileges&lt;/a&gt; on a particular table, when added to this role, will be able to perform global edits on the data.&lt;/p&gt;
&lt;p&gt;To perform a global edit, the user should&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;filter the view (by typing into the filter boxes at the top of each column) to narrow down the rows to those which should be edited&lt;/li&gt;
&lt;li&gt;double click on a column header in a view, to edit the data in that field. The field must be from the view&amp;rsquo;s parent table.&lt;/li&gt;
&lt;li&gt;click the &amp;rsquo;edit filtered&amp;rsquo; button which appears&lt;/li&gt;
&lt;li&gt;type in the value you want to apply and follow through the prompts&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;User Visibility&lt;/strong&gt; and &lt;strong&gt;Allow only multi-tenanting views to be seen&lt;/strong&gt;
Used to configure &lt;a href=&#34;#multi-tenanting&#34;&gt;multi-tenanting&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;members&#34;&gt;Members&lt;/h3&gt;
&lt;p&gt;Tick each user to add them to the role. Users will gain all the privileges defined by the role.&lt;/p&gt;
&lt;h3 id=&#34;privileges&#34;&gt;Privileges&lt;/h3&gt;
&lt;p&gt;Select the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/&#34;&gt;table privileges&lt;/a&gt; which will apply to members.&lt;/p&gt;
&lt;p&gt;Privileges are additive - if a user is a member of multiple roles, they gain all the privileges from each of those roles added together.&lt;/p&gt;
&lt;h2 id=&#34;multi-tenanting&#34;&gt;Multi-tenanting&lt;/h2&gt;
&lt;p&gt;Multi-tenanting is the ability to separate users into groups who can’t see each other’s data. This can be used for example to allow different sets of companies, clubs, or membership groups (or whatever the organisational group is) to use the same system features whilst remaining separate from each other.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Multi-tenanting is a powerful feature that can be used not just for customers to segragate data amongst their users.&lt;/p&gt;
&lt;p&gt;Partners can also use this facility if building software to widely market. In that case, each customer they sign up can very quickly be set up with their own private dataset, whilst the partner retains the ability to add features which will automatically apply to everyone.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To set up multi-tenanting:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;first &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/&#34;&gt;add a text field&lt;/a&gt; to all tables in the system for which you want data to be segragated. The field must be named the same in every table, for example&amp;rsquo;s sake here let&amp;rsquo;s assume it&amp;rsquo;s called &amp;lsquo;account name&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;Then create one role for each set of users who you want to segregate. We&amp;rsquo;ll assume there&amp;rsquo;s one called &amp;lsquo;Customer A&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;In the role details screen for the Customer A role, tick &lt;em&gt;user visibility&lt;/em&gt;. That means that users in this role won&amp;rsquo;t see users in other roles with the same option ticked. In other words, users from Customer A won&amp;rsquo;t be able to select Customer B or Customer C users when doing things like adding comments or assigning users to records.&lt;/li&gt;
&lt;li&gt;Under &lt;em&gt;restrict data access&lt;/em&gt; in the role details, enter &lt;code&gt;account name = Customer A&lt;/code&gt;, i.e. &lt;em&gt;Filter Field Name&lt;/em&gt; = &amp;lsquo;account name&amp;rsquo;, &lt;em&gt;Filter Value&lt;/em&gt; = &amp;lsquo;Customer A&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Finally, ensure the account name field is present in all views based on the table. When creating a view, any fields used for multi-tenanting will automatically be added but you may need to retro-fit any existing views.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This has two effects -&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;When a user assigned to the Customer A role creates a new record in one of the multi-tenanting tables, the account name field will automatically be populated with the value Customer A (as entered under &lt;em&gt;restrict data access&lt;/em&gt;). The field will be invisible to them - they won&amp;rsquo;t be able to see or edit the value.&lt;/li&gt;
&lt;li&gt;When looking at records in a view, a filter will be automatically applied so the user only sees records where account name = Customer A.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Users who &lt;strong&gt;aren&amp;rsquo;t&lt;/strong&gt; a member of the role will see the account name field in the data editing form and in views. This can be useful for allowing e.g. group managers to see all data.&lt;/p&gt;
&lt;p&gt;If any multi-tenanting roles are set up, then views which &lt;strong&gt;don&amp;rsquo;t&lt;/strong&gt; contain a multi-tenanting field will be marked in red in the administration interface, as a warning. If a multi-tenanting user loads one of these views, they will see all records. Typically, practically all views will need the multi-tenanting field to be present.&lt;/p&gt;
&lt;h4 id=&#34;allow-only-multi-tenanting-views-to-be-seen&#34;&gt;Allow only multi-tenanting views to be seen&lt;/h4&gt;
&lt;p&gt;Optionally, this can be ticked. If ticked, user&amp;rsquo;s will only be shown views which contain the multi-tenanting field, &amp;lsquo;Account Name&amp;rsquo; in the example above.&lt;/p&gt;
&lt;p&gt;This is an added protection - if the multi-tenanting field is removed from a view, the user won&amp;rsquo;t see it any more. Otherwise they&amp;rsquo;d be able to see all data in the view, even that which they shouldn&amp;rsquo;t. This can also be useful to set when there is partial multi-tenanting set up, i.e. some views are multi-tenanted but others aren&amp;rsquo;t and you only want certain groups (e.g. people outside the organisation) to see the multi-tenanted parts, not everything.&lt;/p&gt;
&lt;h3 id=&#34;complex-multi-tenanting&#34;&gt;Complex multi-tenanting&lt;/h3&gt;
&lt;h4 id=&#34;multi-level&#34;&gt;Multi-level&lt;/h4&gt;
&lt;p&gt;Users may be a member of more than one multi-tenanting role. For example you may use two multi-tenanting fields/roles, one for a company and another for a division. Members of a company role will be able to see data from all divisions in their company and members of both a company and a division role will only be able to see data for a single division.&lt;/p&gt;
&lt;h4 id=&#34;multi-account-via-multiple-roles&#34;&gt;Multi-account (via multiple roles)&lt;/h4&gt;
&lt;p&gt;It&amp;rsquo;s also possible for a user to be a member of multiple roles, all of which are set to multi-tenant on the same field, with different values. E.g. if a user is a member of Company A and Company B roles as in our example above, they will see data from those two companies when viewing records, but not Company C.&lt;/p&gt;
&lt;p&gt;This works best when the user has read-only privileges on the data, e.g. for a manager reporting on those two companies. They can view records but not add new records, as the system is unable to determine the value of the account name field to use.&lt;/p&gt;
&lt;h4 id=&#34;multi-account-via-_contains_-filtering&#34;&gt;Multi-account (via &lt;em&gt;contains&lt;/em&gt; filtering)&lt;/h4&gt;
&lt;p&gt;It&amp;rsquo;s also possible to define a role filter under &lt;em&gt;restrict data access&lt;/em&gt; with a &amp;lsquo;contains&amp;rsquo; rather than an &amp;lsquo;=&amp;rsquo; filter. You can then use a naming convension for your account name values to allow members of this role to see multiple accounts. As above, users of this role will need to be read-only on the data.&lt;/p&gt;
&lt;h4 id=&#34;api-setup&#34;&gt;API setup&lt;/h4&gt;
&lt;p&gt;In a multi-tenanting account, it&amp;rsquo;s possible to create new tenants, with users, by API, as opposed to the manual actions of an administrator. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/creating-user-accounts/&#34;&gt;Creating user accounts with the API&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;role-properties&#34;&gt;Role properties&lt;/h2&gt;
&lt;h3 id=&#34;brand-name-and-domain&#34;&gt;Brand name and domain&lt;/h3&gt;
&lt;p&gt;These two options allow system emails (password reset notification etc.) to come from a domain name of your choice and be branded with a particular &amp;lsquo;app&amp;rsquo; name. This can be useful if you&amp;rsquo;re creating a public-facing app using Agilebase, rather than applications for your own staff.&lt;/p&gt;
&lt;p&gt;To allow the domain name to work, you&amp;rsquo;ll need to contact us to set it up - our server will need to be authorised to send email from your domain.&lt;/p&gt;
&lt;h3 id=&#34;custom-menus&#34;&gt;Custom menus&lt;/h3&gt;
&lt;p&gt;It’s possible to add custom menu items into the user menu (the one at the top right that appears if you click your user icon). That means if your company has specific help pages or process documentation relevant to your organisation or application, you can make them available from within Agilebase.&lt;/p&gt;
&lt;p&gt;Each custom menu has a title, description and URL, which will be opened in a new tab when the menu item’s chosen.&lt;/p&gt;
&lt;p&gt;Simply add these into the &lt;strong&gt;menu title&lt;/strong&gt;, &lt;strong&gt;menu description&lt;/strong&gt; and &lt;strong&gt;menu URL&lt;/strong&gt; properties of a role. Assigning that role to a user will add the menu item to their profile menu.&lt;/p&gt;
&lt;p&gt;To add multiple menu items to a user or users, assign multiple roles, each with one menu item defined.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Citizen Developer Level 2</title>
      <link>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/citizen-developer-level-2/</link>
      <pubDate>Tue, 12 Sep 2023 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/citizen-developer-level-2/</guid>
      <description>
        
        
        &lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;You are now well on your way through the Agilebase journey.&lt;/p&gt;
&lt;p&gt;This level is suggested or &amp;lsquo;unlocked&amp;rsquo; once a citizen developer has carried out a certain number of citizen development functions and has therefore started to learn how no code development works in a safe environment.&lt;/p&gt;
&lt;p&gt;However to activate the level, it must be manually assigned by a Software Architect level user, as it allows changes to the system which can affect other users.&lt;/p&gt;
&lt;p&gt;A citizen developer level 2 can&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create new views that everyone can see, from any table
&lt;ul&gt;
&lt;li&gt;edit them as per the citizen developer functionality above&lt;/li&gt;
&lt;li&gt;additionally they can add and remove simple joins, to include data from other tables in a view&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;remove views that they themselves have created (not those that others have)&lt;/li&gt;
&lt;li&gt;create their own &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/&#34;&gt;tables&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;add, edit and remove fields and tabs from those tables&lt;/li&gt;
&lt;li&gt;edit basic properties of the fields&lt;/li&gt;
&lt;li&gt;assign privileges (up to edit) on those tables, using existing roles or direct user privileges&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;create &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;tiles&lt;/a&gt; and delete tiles they&amp;rsquo;ve added themselves&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;useful-links&#34;&gt;Useful Links&lt;/h2&gt;
&lt;p&gt;Learn how to add functionality by watching our guide &lt;a href=&#34;https://docs.agilebase.co.uk/guides/guide1-crm/tasklist/&#34;&gt;Creating a basic task list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For more information about:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/&#34;&gt;Relational Database Concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/adding-and-removing/&#34;&gt;Adding and editing tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;What is a view&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: 2. Personalising our CRM by adding charts</title>
      <link>https://docs.agilebase.co.uk/guides/guide2-personalisation/creating_personal_charts/</link>
      <pubDate>Thu, 31 Aug 2023 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/guides/guide2-personalisation/creating_personal_charts/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Learning Aim:&lt;/strong&gt;  Introducing building new charts&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; To be a competent user of agilebase, with Citizen Developer level 1 (or higher) enabled&lt;/p&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;This short guide is going to introduce to you graphing features that becomes available to you once you’ve been given the role of Citizen Developer.&lt;/p&gt;
&lt;p&gt;[guide 2 - video 2]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/wxbsluxCkCU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;adding-a-chart&#34;&gt;Adding a Chart&lt;/h2&gt;
&lt;p&gt;Navigate to the view containing the data for your chart&lt;/p&gt;
&lt;p&gt;As a Citizen Developer level 1 you are able to add charts to your own views.&lt;/p&gt;
&lt;p&gt;You don’t need to be in developer mode, simply click the graph icon top right.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/graph-button.png&#34; alt=&#34;Location of the graph button&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;setting-up-the-chart&#34;&gt;Setting up the chart&lt;/h3&gt;
&lt;p&gt;Press ‘add chart or map’ and work your way through the steps.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add data for the x-axis&lt;/li&gt;
&lt;li&gt;For this example we can show the distribution in age of the Organisation records.&lt;/li&gt;
&lt;li&gt;We can therefore choose Incorporation Date for the X axis, specifically &amp;lsquo;by Year&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;For the Y-axis we want to know how many, which is a ‘Count’ of each Organisation record.&lt;/li&gt;
&lt;li&gt;We can skip advanced settings and choose an appropriate Chart type. In this example ‘Packed Columns”&lt;/li&gt;
&lt;li&gt;Finally we can change the name of the chart, and press save.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Hopefully a picture says a thousand words as we look at the graph!&lt;/p&gt;
&lt;p&gt;For more information about graphs in agilebase please have a look at &lt;a href=&#34;https://docs.agilebase.co.uk/docs/charting/&#34;&gt;docs charting&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: 2. Capturing Company and Contact data (Introducing Relational Databases)</title>
      <link>https://docs.agilebase.co.uk/guides/guide1-crm/adding-relational-data/</link>
      <pubDate>Wed, 16 Aug 2023 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/guides/guide1-crm/adding-relational-data/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Learning Aim:&lt;/strong&gt; Create related Tables to demonstrate the power of relational databases&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; User to have watched “Creating a basic task list” video&amp;quot;&lt;/p&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;In this step of the guide we will build the engine of our CRM and in doing so start to introduce the concept of a relational database. We will do this as a practical example and you’ll see how agilebase makes this straight forward. We will be building a bigger system, but for the most part it’s simply reusing things we’ve already covered.. Let’s start with building a table called ‘Organisations’&lt;/p&gt;
&lt;h2 id=&#34;create-a-table-called-organisations&#34;&gt;Create a table called &amp;ldquo;Organisations&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;To get our CRM going we need somewhere to store information about the organisations we will interact with. This can easily be achieved by adding a new table, a tile and an initial view. If you need a quick refresher watch the video below, or if you need more detail go back to &lt;a href=&#34;https://docs.agilebase.co.uk/guides/guide1-crm/tasklist/&#34;&gt;step 1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[guide 1.2 - video 1]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/F-4Qp-5udsU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;create-a-table-called-sites&#34;&gt;Create a table called &amp;ldquo;Sites&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;A company might have more than one location, so we will need a table to hold information about the various addresses they might have - &amp;lsquo;Sites&amp;rsquo;. This is the first example we have of adding a Relation field.
If you want to learn more then please visit &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/&#34;&gt;relational database concepts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[guide 1.2 - video 2]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/psJRDyW3RMs&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;create-a-table-called-contacts&#34;&gt;Create a table called &amp;lsquo;Contacts&amp;rsquo;&lt;/h2&gt;
&lt;p&gt;Let’s add another table of data that is related to an Organisation, the people who work there - &amp;lsquo;Contacts&amp;rsquo;.
We will link to two tables, the organisation they work for and the site they primarily work from.&lt;/p&gt;
&lt;p&gt;[guide 1.2 - video 3]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Mrj6Iu7fxmg&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;adding-tabs&#34;&gt;Adding tabs&lt;/h2&gt;
&lt;p&gt;Viewing and adding data in isolation doesn’t feel very natural. What we want to do is look at an organisation’s records and see its list of contacts there and then. One way Agilebase does this is through adding ‘Tabs’ to a record.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you want to know more visit or documentation about &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/&#34;&gt;tabs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[guide 1.2 - video 4]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/nRSQ3IARLVI&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;optional---linking-tasks-to-organisations&#34;&gt;OPTIONAL - Linking Tasks to Organisations&lt;/h2&gt;
&lt;p&gt;At this point you may decide to upgrade the Task system we created previously. If you want to do this you will need to update the Tasks table to have a Parent Org, adding a Relation field (to organisation) and then adding the new Tab to the Organisation table just as we’ve done before.&lt;/p&gt;
&lt;p&gt;You might also want to go back in to some of the views people use to access tasks and add a field so they know which organisation it&amp;rsquo;s for.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Privileges</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/</guid>
      <description>
        
        
        &lt;p&gt;In Agilebase, there are three privilege levels, as well as a special &amp;lsquo;develop&amp;rsquo; privilege.&lt;/p&gt;
&lt;p&gt;The three privileges take effect per table, i.e. a user/role can have certain privileges on one table and different ones on another.&lt;/p&gt;
&lt;p&gt;Privileges are additive - if a user is a member of multiple roles, they gain all the privileges from each of those roles added together, plus any they may have individually assigned.&lt;/p&gt;
&lt;h2 id=&#34;privilege-levels&#34;&gt;Privilege levels&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;View&lt;/strong&gt;: ability to see data in a table&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Edit&lt;/strong&gt;: ability to create, edit and delete data in a table (create and delete subject to various table options)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Develop&lt;/strong&gt;: the privilege that allows you to use the &amp;lsquo;application building&amp;rsquo; features of Agilebase, relating to a table. Namely the ability to
&lt;ul&gt;
&lt;li&gt;modify the structure, i.e. create/delete fields, tabs, change options etc.&lt;/li&gt;
&lt;li&gt;create, edit and delete views from the table, including creating charts, maps and word clouds.&lt;/li&gt;
&lt;li&gt;upload or create printout templates for views&lt;/li&gt;
&lt;li&gt;view usage statistics about a table&lt;/li&gt;
&lt;li&gt;Develop also allows some extended user features
&lt;ul&gt;
&lt;li&gt;delete any user&amp;rsquo;s comments from a table&lt;/li&gt;
&lt;li&gt;unlock locked records to allow editing (one at a time)&lt;/li&gt;
&lt;li&gt;override table options which would normally disallow adding/removing records from a table&lt;/li&gt;
&lt;li&gt;override options which would normally disallow exporting data to a spreadsheet&lt;/li&gt;
&lt;li&gt;import data from spreadsheet&lt;/li&gt;
&lt;li&gt;override options which would normally disallow global editing of data in the table&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Privilege levels work in conjunction with &lt;a href=&#34;https://docs.agilebase.co.uk/docs/introduction/learner-progression/&#34;&gt;Learner Progression levels&lt;/a&gt;, for example, only someone at level Citizen Developer level 3 can have Develop privileges assigned to them.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Two Factor Authentication is required for any user with any Citizen Developer or Software Architect role.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;assigning-table-privileges&#34;&gt;Assigning table privileges&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Table privileges can be assigned to one or more users or roles from that table&amp;rsquo;s editing screen.&lt;/li&gt;
&lt;li&gt;From a user or role editing screen, privileges on one or more tables can be assigned&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The two methods are equivalent, whichever is the most convenient for a given purpose can be used.&lt;/p&gt;
&lt;p&gt;Managing privileges by role rather than by individual user is recommended. That makes managing large numbers of users easier and also more secure as it&amp;rsquo;s easy to see which privileges each type of user has and which they don&amp;rsquo;t.&lt;/p&gt;
&lt;p&gt;To assign one or more role or user privileges to a table:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/adding-and-removing/#editing-a-table&#34;&gt;Edit a table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open the &lt;em&gt;roles and privileges&lt;/em&gt; panel, then select or un-select any privileges required&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To assign one or more table privileges to a particular role or user:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;On the homepage, toggle on development mode&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;roles&lt;/em&gt; or &lt;em&gt;users&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Select the role or user to assign privileges to, then select or un-select any privileges required&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;related-to-privileges&#34;&gt;Related to privileges&lt;/h2&gt;
&lt;p&gt;Database systems often have the concept of row level privileges. The equivalent in Agilebase is the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/#multi-tenanting&#34;&gt;multi-tenanting&lt;/a&gt; system.&lt;/p&gt;
&lt;p&gt;Individual fields in a table can be locked or hidden, see the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#show-if-record-in-view&#34;&gt;field options&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: Guide 3.1 - Tiles: Advanced UI Control</title>
      <link>https://docs.agilebase.co.uk/guides/guide3-advanced-usage/tiles/</link>
      <pubDate>Tue, 17 Oct 2023 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/guides/guide3-advanced-usage/tiles/</guid>
      <description>
        
        
        &lt;h2 id=&#34;tiles&#34;&gt;Tiles&lt;/h2&gt;
&lt;p&gt;A tile on a user’s home screen represents an application or module of an application. It is a collection of data and functionality that forms a coherent whole
&lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;For detailed information about Tiles visit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Let’s start by looking at the collection of tiles this system has configured
Using the developer interface you can access your list of current tiles.
&lt;img src=&#34;https://docs.agilebase.co.uk/tile-list.png&#34; alt=&#34;Developer view - list of tiles&#34;&gt;&lt;/p&gt;
&lt;p&gt;Clicking on one provides access to the configuration options.
&lt;img src=&#34;https://docs.agilebase.co.uk/tile-individual-details.png&#34; alt=&#34;Tile details&#34;&gt;&lt;/p&gt;
&lt;p&gt;Obviously setting the title is key as it provides the primary information to the user as to what purpose it serves.
You can provide a visual clue by choosing an appropriate Icon
[Video how to set an Icon]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/yfjLrL1xLN8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;We would also suggest you set a description for the tile.
This will appear as a hover over when your user places their cursor above it. Consider it as the first level of user help and should answer the question &amp;ldquo;What functionality does this tile contain?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;You can control the order the tile appears by setting an index number.
Additionally you can provide &amp;ldquo;breaks&amp;rdquo; in the list of tiles by giving them a section. You can see how this affects the UI below
&lt;img src=&#34;https://docs.agilebase.co.uk/tile-individual-details.png&#34; alt=&#34;Tile details&#34;&gt;&lt;/p&gt;
&lt;p&gt;When assigning a tile to a user we can set a &amp;ldquo;Default View&amp;rdquo;.
When choosing a default view it makes sense to aim your user towards the one they would most
frequently use. If you&amp;rsquo;re not sure then the most frequently used would be a good place to start.
&lt;img src=&#34;https://docs.agilebase.co.uk/adding-tile-to-user.png&#34; alt=&#34;Adding a tile to a user&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Citizen Developer Level 3</title>
      <link>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/citizen-developer-level-3/</link>
      <pubDate>Tue, 03 Oct 2023 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/citizen-developer-level-3/</guid>
      <description>
        
        
        &lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;A Software Architect (see below) can, at their discretion, assign a citizen developer 3 &amp;lsquo;develop&amp;rsquo; privileges on a table (or tables).&lt;/p&gt;
&lt;p&gt;That allows them to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;add &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/&#34;&gt;fields&lt;/a&gt; to those table, excluding referenced fields&lt;/li&gt;
&lt;li&gt;remove fields that they themselves have added (not others)&lt;/li&gt;
&lt;li&gt;edit the basic properties of any field in those tables, e.g. the list of options in a dropdown box&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, actions not related to having develop privileges on a particular table are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;edit the basic properties of any regular view. However, workflow, API and some other types of system view will be read-only&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;useful-links&#34;&gt;Useful Links&lt;/h2&gt;
&lt;p&gt;Videos about how to control the UI &lt;a href=&#34;https://docs.agilebase.co.uk/guides/guide3-advanced-usage/&#34;&gt;Guide 3 - Advanced UI Usage&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For more information about:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;Setting up Tiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/calculations/&#34;&gt;Using Calculations&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: 3. Adding a Sales Pipeline - Kanban</title>
      <link>https://docs.agilebase.co.uk/guides/guide1-crm/sales-pipeline/</link>
      <pubDate>Wed, 16 Aug 2023 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/guides/guide1-crm/sales-pipeline/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Learning Aim:&lt;/strong&gt;  Introduce Kanban / Card view. Power of dropdowns on fields. Show how easy to add graphs. Show off the advanced UI elements of aB&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; User to have watched “Capturing Company and Contact details” video. Understand relational data&lt;/p&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;In this step of our guide we going to look at adding a dropdown field to &amp;ldquo;control&amp;rdquo; data input as we want to set up a Kanban board approach to managing Sales Opportunities.
This video assumes you are happy creating tables so jumps to the point of adding the Dropdown field.
If you are following along and want to build this table please copy the following table structure&lt;/p&gt;
&lt;p&gt;Fields we will need: Organisation(relation to Organisation) Title (text), Detail (text large), Date of Enquiry (date), Source (text), Main Contact (relation to contact), Opp. Owner (text), Demo-Meeting (Separator), Date of Demo (date), Meeting Notes (text large), Quote (Separator), Quote Amount (number), Quote notes (text large), Outcome (Separator), Date Won (date), Date lost (date), Lost reason (text), closed by (text), closed date (date)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/Sales_Opportunity_pre_dropdown&#34; alt=&#34;Sales Opprtunity Fields before Status DropDown has been added&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;adding-a-dropdown-field&#34;&gt;Adding a dropdown field&lt;/h2&gt;
&lt;p&gt;A dropdown field is as simple to add as any other field type. However there are some considerations about how it is configured to help the user experience.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Having an initial comma in the list means the default value will be blank.&lt;/li&gt;
&lt;li&gt;Adding an initial number to each option in the list is very useful to imply an order (an override the default alphabetical ordering).&lt;/li&gt;
&lt;li&gt;Autofilling with a list of users. &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/#lists-of-users&#34;&gt;Click here for more info&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In this stage of our guide we are going to add the stages a typical Sales opportunity will pass through.
[Guide 1.3 - video 1]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/1PzY64hPWlE&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;creating-a-kanban-view&#34;&gt;Creating a Kanban view&lt;/h2&gt;
&lt;p&gt;We can now create a view to show all the Sales Opportunities we will be mansaging.
This is the basically the same as we’ve done before
&lt;a href=&#34;https://docs.agilebase.co.uk/guides/guide1-crm/tasklist/#adding-views-that-show-all-the-tasks-that-have-been-createds&#34;&gt;Click here to see how add a view&lt;/a&gt;
Before We set the interface option to be &amp;ldquo;Cards in Column&amp;rdquo; its important to move the controlling field to the top of the list. In this case we want ther Kanban board to be controlled by Status, therefore it should be the first DropDown field in the view.&lt;/p&gt;
&lt;p&gt;[Guide 1.3 - video 2]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ydCtGAdgqjk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;adding-graphs&#34;&gt;Adding Graphs!&lt;/h2&gt;
&lt;p&gt;Sales teams love graphs. After all, a picture says a thousand words, and agileBase has an easy to use graphing facility to help you show off the insights your data contains.
Creating graphs can be done by any user, but it usually helps if the developers take the lead and build the obvious ones.&lt;/p&gt;
&lt;p&gt;This video demonstrates adding a pie chart to show the number of Sales Opportunites by Source, and also a column graph to show volume of sales enquires over time. It also shows the advanced option of using Stcaking to add more insights.&lt;/p&gt;
&lt;p&gt;[Guide 1.3 - video 3]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/3FOOk8QS5RE&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Introduction: Who can use it?</title>
      <link>https://docs.agilebase.co.uk/introduction/who-can-use-it/</link>
      <pubDate>Mon, 22 Jun 2020 09:57:55 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/introduction/who-can-use-it/</guid>
      <description>
        
        
        &lt;p&gt;Firstly, no formal programming experience is necessary.&lt;/p&gt;
&lt;p&gt;Often, people who are interested in building applications tend to be those who have created spreadsheets to run business processes but have become aware of the limitations and want to move to the next level.&lt;/p&gt;
&lt;p&gt;Following training, anyone with the requisite interest, ability and ambition can progress from making simple changes and additions to existing applications, to building complex applications&lt;/p&gt;
&lt;h2 id=&#34;citizen-developers&#34;&gt;Citizen Developers&lt;/h2&gt;
&lt;p&gt;People working within an organisation at any level can be trained in the technology and thought patterns necessary to build useful applications. Companies can therefore make the most of the abilities of their staff, that may currently be un-tapped.&lt;/p&gt;
&lt;h2 id=&#34;partners&#34;&gt;Partners&lt;/h2&gt;
&lt;p&gt;We are also building a network of partners who can act as consultants to organisations, kick-starting the application building process within an organisation and taking ownership of any large scale application(s).&lt;/p&gt;
&lt;p&gt;Partners can also use the platform to build their own multi-tenanted apps. These are applications which many different customers can log into and use. Each company&amp;rsquo;s data is of course separated from others, but the application itself is shared.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Adding, editing and removing</title>
      <link>https://docs.agilebase.co.uk/docs/tables/adding-and-removing/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/adding-and-removing/</guid>
      <description>
        
        
        &lt;p&gt;A table is a store of data of a particular type e.g. a company, contact, product or invoice. Tables are the fundamental building blocks of an Agilebase application.&lt;/p&gt;
&lt;h2 id=&#34;adding-a-table&#34;&gt;Adding a table&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;On the homepage, click the &amp;rsquo;toggle&amp;rsquo; button in the top-right of the screen to enable dev mode (if it is not enabled already)&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;+ Table&lt;/em&gt;, choosing a name for the new table&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;TODO: images&lt;/strong&gt;
&lt;img src=&#34;https://docs.agilebase.co.uk/add-table-button.png&#34; alt=&#34;Add Table Button&#34;&gt;&lt;/p&gt;
&lt;p&gt;You can change the table&amp;rsquo;s name and add a longer description under &lt;strong&gt;Help&lt;/strong&gt;. This description will be used as help text in the user interface.&lt;/p&gt;
&lt;h3 id=&#34;naming-tables&#34;&gt;Naming tables&lt;/h3&gt;
&lt;p&gt;When naming a table, it&amp;rsquo;s best to use a plural form. Also avoid filler endings like &amp;lsquo;info&amp;rsquo; or &amp;lsquo;details&amp;rsquo;. So rather than &amp;lsquo;company info&amp;rsquo;, you might call a table &amp;lsquo;companies&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;The reason for this is that the user interface will automatically convert plural names into singular forms where appropriate. So for example if there&amp;rsquo;s a plus button on the screen to allow the user to add a new record in the table, it will automatically recognise the table and title the button Add Company.&lt;/p&gt;
&lt;p&gt;If you build a large system with lots of tables, you may find it a good idea to prefix table names using a numbering/lettering system e.g.
&lt;code&gt;a) table 1&lt;/code&gt;
&lt;code&gt;b) table 2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In the administrator interface, tables are listed alphabetically, so you can arrange the tables into a logical order with this method.&lt;/p&gt;
&lt;p&gt;The user interface will strip out any prefixes when displaying names to users, if they end with a closing bracket &lt;code&gt;)&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;editing-a-table&#34;&gt;Editing a table&lt;/h2&gt;
&lt;p&gt;There are two ways to edit a table: from the homepage, or from editing a record.&lt;/p&gt;
&lt;h3 id=&#34;from-the-homepage&#34;&gt;From the homepage&lt;/h3&gt;
&lt;p&gt;When you toggle development mode with the toggle in the top right corner of the screen, you can see a &lt;em&gt;Map&lt;/em&gt; and &lt;em&gt;List&lt;/em&gt; items: the Map shows tables and relations between them, the List can show tables and also other entities, like views or users.&lt;/p&gt;
&lt;p&gt;From either display, you can click a table to edit it. Once open, you can also pin tables with the pin icon at the top left of the editing panel. The table will then appear &amp;lsquo;pinned&amp;rsquo; to the lefthand side of the development homepage and will remain there until unpinned, or you log out. This can be useful when working with a number of different tables.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/homepage-connections-mode.png&#34; alt=&#34;Connections mode&#34;&gt;
&lt;img src=&#34;https://docs.agilebase.co.uk/homepage-list-mode.png&#34; alt=&#34;List mode&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;from-editing-a-record&#34;&gt;From editing a record&lt;/h3&gt;
&lt;p&gt;When build mode is enabled, if you are viewing an individual record then clicking the big pencil at the top left of the screen lets you edit the underlying table.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/editing-a-record.png&#34; alt=&#34;Editing a record&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;removing-a-table&#34;&gt;Removing a table&lt;/h2&gt;
&lt;p&gt;Before removing a table, you first need to remove all views and &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/#removing-a-field&#34;&gt;fields&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not necessary to remove actual data records from the table first.&lt;/p&gt;
&lt;p&gt;A list of existing views is visible in the &lt;em&gt;name and views&lt;/em&gt; section of the panel sidebar. Visit each view and delete it.&lt;/p&gt;
&lt;p&gt;Then below to the table&amp;rsquo;s &lt;em&gt;name and views&lt;/em&gt; section is the &lt;em&gt;fields&lt;/em&gt; section. Delete all the existing fields from here.&lt;/p&gt;
&lt;p&gt;When you&amp;rsquo;re done, you can click the &lt;em&gt;Remove table&lt;/em&gt; button in &lt;em&gt;name and views&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;When deleting views and fields, you may find you have to first delete other views or fields they depend on. In complex systems there can be chains of objects that need to be deleted in order.&lt;/p&gt;
&lt;p&gt;Deleting is a destructive process so is not highly automated on purpose, to avoid accidental deletion. However at each stage you&amp;rsquo;ll be shown any dependencies which have to be removed first, so you can follow through the chain.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Exporting</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/exporting/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/exporting/</guid>
      <description>
        
        
        &lt;p&gt;Exporting to spreadsheet is only one way of getting data out of Agilebase, but it is the most commonly used amongst everyday users. For less ad-hoc data transfers, such as integrations with third party systems involving incoming and/or outgoing data, the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;API&lt;/a&gt; can be used.&lt;/p&gt;
&lt;h2 id=&#34;allowing-exports&#34;&gt;Allowing exports&lt;/h2&gt;
&lt;p&gt;In order for a user to be allowed to export to spreadsheet, a number of critieria have to be matched, to suitably protect your organisation&amp;rsquo;s data.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The user must have &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/#two-factor-authentication&#34;&gt;Two Factor Authentication&lt;/a&gt; enabled&lt;/li&gt;
&lt;li&gt;The view to export from must have exporting enabled (it&amp;rsquo;s enabled by default). To do this
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/introduction/development-mode/&#34;&gt;edit the view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;under &lt;em&gt;properties and options&lt;/em&gt;, tick &lt;em&gt;allow exports&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The user must also be a member of a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/&#34;&gt;role&lt;/a&gt; that allows exporting (disabled by default). To allow exporting for a role,
&lt;ul&gt;
&lt;li&gt;on the homepage, toggle &lt;a href=&#34;https://docs.agilebase.co.uk/docs/introduction/development-mode/&#34;&gt;development mode&lt;/a&gt; on&lt;/li&gt;
&lt;li&gt;click &lt;em&gt;roles&lt;/em&gt; and select the role you want&lt;/li&gt;
&lt;li&gt;tick &lt;em&gt;allow exports&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A user with &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/&#34;&gt;develop privileges&lt;/a&gt; on the view&amp;rsquo;s parent table can bypass criteria 2 and 3. This privilege is not commonly applied to normal users.&lt;/p&gt;
&lt;h2 id=&#34;exporting&#34;&gt;Exporting&lt;/h2&gt;
&lt;p&gt;A user with the ability to export can do so by opening the view, clicking the export icon near the top right and selecting &lt;em&gt;export&lt;/em&gt; from the options in the menu.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/export.png&#34; alt=&#34;exporting&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the user &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/filters/&#34;&gt;filters&lt;/a&gt; the data on screen before doing this, only the filtered data will be exported.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The resulting spreadsheet will be in Microsoft Excel format. The first sheet will be some metadata about the export, such as a timestamp, the name of the exporter and any filters applied. The second sheet will be the actual data.&lt;/p&gt;
&lt;p&gt;Column A in the data sheet holds the internal row ID of each record. This is useful for matching purposes if you&amp;rsquo;re going to be modifying then re-importing the data.&lt;/p&gt;
&lt;h3 id=&#34;charts&#34;&gt;Charts&lt;/h3&gt;
&lt;p&gt;If the view has &lt;a href=&#34;https://docs.agilebase.co.uk/docs/charting/&#34;&gt;charts&lt;/a&gt; attached, one sheet per chart will also be included in the spreadsheet. The contents will be the chart data, not the chart visualisation itself, but the visualisation can easily be re-created in the spreadsheet from the data if necessary.&lt;/p&gt;
&lt;h2 id=&#34;limits-and-notifications&#34;&gt;Limits and notifications&lt;/h2&gt;
&lt;p&gt;An administrator can log whether each table contains commercially sensitive data (ticked by default) and/or personal data (see &lt;a href=&#34;https://gdpr-info.eu/art-4-gdpr/)&#34;&gt;https://gdpr-info.eu/art-4-gdpr/)&lt;/a&gt;. If either of these options is ticked for a view&amp;rsquo;s parent table, you’ll have additional options for&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;notifying all administrators if an export of more than a certain number of rows is done&lt;/li&gt;
&lt;li&gt;setting a hard limit to completely disallow exports of more than a certain number of rows&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To configure these options, see &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/&#34;&gt;tables&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You may also want to set an export prompt message to show people when they request an export, to remind people of their data protection obligations under the GDPR for example. This can be done in the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/advanced-usage/company-settings/#export-message&#34;&gt;company settings&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: Guide 3.2 - Views: Advanced UI Control</title>
      <link>https://docs.agilebase.co.uk/guides/guide3-advanced-usage/views/</link>
      <pubDate>Tue, 17 Oct 2023 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/guides/guide3-advanced-usage/views/</guid>
      <description>
        
        
        &lt;h2 id=&#34;views&#34;&gt;Views&lt;/h2&gt;
&lt;p&gt;There are several videos and help pages you can find about creating views. We are going to concentrate on the parts that affect how the user interacts with them.
Let us start with an important concept&amp;hellip; Your views name, and how a naming convention affects the menu.
{video coming soon}
Start by giving your view a simple name, you can see it is listed under a menu title that is the name of the tile.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/view-title.png&#34; alt=&#34;Original View title&#34;&gt;&lt;/p&gt;
&lt;p&gt;If you change the name and use a hyphen, the system will detect the hyphen and use the initial part as the menu group. This is a useful way of grouping views together. You can go further and use a number prefix after the hyphen to control the order of the views within the menu. This is often a vital step when building a system that takes a user through a step by step process.&lt;/p&gt;
&lt;p&gt;Don&amp;rsquo;t forget to provide your user with a description for the view&amp;hellip;. it provides the first level of user help.&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;ll notice that when you provide a description it will replace the system-created description. This auto-generated description is based on the filters you have set&amp;hellip; &amp;ldquo;isValid = true, quote amount greater than zero&amp;rdquo; won’t make much sense to your users. Wouldn&amp;rsquo;t you much rather read something like &amp;ldquo;All Open Sales Opportunities with an estimate&amp;rdquo; ?
&lt;img src=&#34;https://docs.agilebase.co.uk/view-title-updated.png&#34; alt=&#34;Updated View title with description&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;view-interface-options&#34;&gt;View Interface Options&lt;/h3&gt;
&lt;p&gt;There are 3 options… Standard, Inline editing and Kanban&lt;/p&gt;
&lt;p&gt;“Standard” provides the classic Table of data view of your records. However, you may wish to additionally allow your users to edit data “inline” - i.e. without requiring them to navigate through to the full record. If so, you have two options, either allowing them to toggle the inline edit mode on, or to have it on by default.&lt;br&gt;
&lt;img src=&#34;https://docs.agilebase.co.uk/view-options.png&#34; alt=&#34;View options dropdown&#34;&gt;&lt;/p&gt;
&lt;p&gt;Finally, you can also enable the “Cards in Column” interface view (some people may know it as Kanban.)
This option will show mini cards for each record, stacked in to columns based on the first field that is a “use only given values” Drop Down. By using drag and drop, the user is changing the value of this drop down field. The first few fields in your view will be used in the summary view.
&lt;img src=&#34;https://docs.agilebase.co.uk/view-kanban-example.png&#34; alt=&#34;Example of Kanban or Cards View&#34;&gt;&lt;/p&gt;
&lt;p&gt;For the Tabular list of records you have the further option of how to control the “headings”.
&lt;img src=&#34;https://docs.agilebase.co.uk/view-heading-options.png&#34; alt=&#34;View Heading Options&#34;&gt;
Spreadsheet is as it sounds with a column heading per row.
Headings and rows will group records by the first value.
Long headings and rows will group by the first “few” values that are from the same source.
&lt;img src=&#34;https://docs.agilebase.co.uk/view-heading.png&#34; alt=&#34;View Heading and Rows&#34;&gt;
&lt;img src=&#34;https://docs.agilebase.co.uk/view-long-heading.png&#34; alt=&#34;View Heading and Rows&#34;&gt;&lt;/p&gt;
&lt;p&gt;Obviously these last two options are for when you want to group together data…. This typically occurs when records share a similar value. This will naturally occur when displaying Parent Child data (e.g. Organisations list of contacts) but equally when records share a finite list of options (e.g. Contacts by source).&lt;/p&gt;
&lt;p&gt;{video coming soon}&lt;/p&gt;
&lt;h3 id=&#34;adding-a-button-to-a-view&#34;&gt;Adding a Button to a view&lt;/h3&gt;
&lt;p&gt;A useful feature in agileBase is to provide a button on a view that your user can press that will fire a WorkFlow that performs a function appropriate to the views content.
Example 1: your view shows a list of Food Samples that are to be created Today. The button at the top could fire a WorkFlow that generates the PDF of labels for use in sending out the resulting samples!
Example 2: your view shows a list of customer orders for delivery today. The button placed at the top of the view fires a workflow that updates the list and places the orders in a suggested sequence order for the delivery driver to follow.&lt;/p&gt;
&lt;p&gt;To add a button to a view follow the following steps:
Edit the view used by the User… goto workflow edit records.
Do NOT set an action, instead simply set “Log update to” to be an appropriate field and leave “Frequency” on manual only.
Set the “Next: when this workflow finishes, also run” to be the Work Flow you wish to appear at the top. Obviously this needs to be a fully functional workflow.&lt;/p&gt;
&lt;p&gt;{video coming soon}&lt;/p&gt;
&lt;h3 id=&#34;graphs&#34;&gt;Graphs&lt;/h3&gt;
&lt;p&gt;Visit this page to find out more about &lt;a href=&#34;https://docs.agilebase.co.uk/guides/guide2-personalisation/creating_personal_charts/&#34;&gt;how to add graphs to a view&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Just a quick note about how graphs affect the views user interface…
The drop down list of views will use a little graph icon next to to a view that contains a graph
&lt;img src=&#34;https://docs.agilebase.co.uk/views-graph-icon.png&#34; alt=&#34;Graph icon on list of Views&#34;&gt;&lt;/p&gt;
&lt;p&gt;The view is toggled between showing data or the graph by pressing the graph button top right.
&lt;img src=&#34;https://docs.agilebase.co.uk/graph-button.png&#34; alt=&#34;Button to toggle between graph and list&#34;&gt;
There is the ability to show the graphs by default when a user visits the view.
Edit the view and click on the “properties and options” of the view. Simply tick the “Show Charts by default” options&lt;/p&gt;
&lt;p&gt;For information about embedding a graph on a record see {insert link here}}.&lt;/p&gt;
&lt;p&gt;{video coming soon}&lt;/p&gt;
&lt;h3 id=&#34;sparkline--activity-histogram&#34;&gt;Sparkline / Activity Histogram&lt;/h3&gt;
&lt;p&gt;These are mini little graphs that you can set to appear next to each record in a view.
With sparklines next to every record on screen, you can quickly get an idea of the relative activity of each.
&lt;img src=&#34;https://docs.agilebase.co.uk/sparkine.png&#34; alt=&#34;Example of sparkline on a view&#34;&gt;&lt;/p&gt;
&lt;p&gt;They are added to the view like any other field - simply choose “Activity histogram [auto]” from the dropdown list of fields for the appropriate table.
&lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/automatically-present-fields/#activity-histogram-auto&#34;&gt;For more information visit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;{video coming soon}&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Junior Software Architect</title>
      <link>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/junior-software-architect/</link>
      <pubDate>Tue, 03 Oct 2023 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/junior-software-architect/</guid>
      <description>
        
        
        &lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;A junior software architect can use practically all of the application building functionality of Agilebase. For example&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflows&lt;/a&gt; (including chasers, document generation)&lt;/li&gt;
&lt;li&gt;Set up &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add complex &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/joins/&#34;&gt;joins&lt;/a&gt; to views&lt;/li&gt;
&lt;li&gt;Create, edit and delete &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/&#34;&gt;roles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Assign &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/&#34;&gt;privileges&lt;/a&gt; to roles or users up to the &amp;rsquo;edit&amp;rsquo; level&lt;/li&gt;
&lt;li&gt;Remove fields, views etc. created by anyone&lt;/li&gt;
&lt;li&gt;Edit the advanced properties of fields and views, including field visibility rules (confidentiality rules) for example&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Their only limitations are to do with managing the organisation as a whole, including other users.&lt;/p&gt;
&lt;h2 id=&#34;useful-links&#34;&gt;Useful Links&lt;/h2&gt;
&lt;p&gt;Boost your learning by watching our more advanced guides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/guides/guide1-crm/cross-reference-and-automations/&#34;&gt;Cross Refereances and Automations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/guides/guide1-crm/security-and-access-control/&#34;&gt;Security and Access Control&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information about:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/&#34;&gt;Security Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/altering-data/&#34;&gt;Workflows - Altering Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-document-generator/&#34;&gt;Workflows - Doc Gen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-email/&#34;&gt;Workflows - Sending an email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-chaser/&#34;&gt;Workflows - Using the email chaser&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: 4. Calculated Datafields</title>
      <link>https://docs.agilebase.co.uk/guides/guide1-crm/calculated-datafields/</link>
      <pubDate>Wed, 16 Aug 2023 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/guides/guide1-crm/calculated-datafields/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Learning Aim:&lt;/strong&gt;   Introduce calculations and basic SQL&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; User to have understanding of relational data&lt;/p&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;The ability to use your existing data to calculate new information will dramatically enhance the user interface, and lead your users to create new data!&lt;/p&gt;
&lt;p&gt;In this step fo the guide we&amp;rsquo;ll start with something simple, expanding the data we know about Organisations.&lt;/p&gt;
&lt;h2 id=&#34;calculating-the-number-of-contacts-belonging-to-an-organisation&#34;&gt;Calculating the number of contacts belonging to an Organisation&lt;/h2&gt;
&lt;p&gt;Using the All Organisations view as a starting point, clone it and rename it &amp;ldquo;Organisation - Calculations.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;We will need to join down to the Contacts table, before we create our calculation field.&lt;/li&gt;
&lt;li&gt;Go to “fields”, highlight the add a calculation section&lt;/li&gt;
&lt;li&gt;Add a calculation called “Number of Contacts”, of type ‘Whole number’.&lt;/li&gt;
&lt;li&gt;Press Add&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The important area is the ‘Calculation Definition’. In this example we want to count the number of contacts each organisation has. We can do this by using a SQL statement called Count.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;count()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Between the brackets we choose which field we want to count. In this case the contact record&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;count({contacts.id:contacts})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We now need to press update to tell agileBase we have finished editing our calculation. Press Update.&lt;/p&gt;
&lt;p&gt;As you can see the system has correctly identified that count is something known as an aggregate field and ticked the box for us.&lt;/p&gt;
&lt;p&gt;If you click back on Fields you should see the list and how calculations are highlighted in purple to distinguish from regular fields taken from a table definition. Lets drag our calculation near the front”&lt;/p&gt;
&lt;p&gt;Move the calc.&lt;/p&gt;
&lt;p&gt;Closing the edit allows us to see our results.&lt;/p&gt;
&lt;p&gt;This is a very simple example of an SQL calculation. For more examples as well as a link to the underlying Postgres documentation visit - &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/calculations/examples/&#34;&gt;docs- calculation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[guide 1.4 - video 1]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/kxsIr6yHlNg&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;calculating-the-date-of-our-latest-sale-to-create-a-our-customers-list&#34;&gt;Calculating the Date of our Latest Sale to create a &amp;ldquo;Our Customers&amp;rdquo; list&lt;/h2&gt;
&lt;p&gt;A further useful example is to show how we can use the results of a calculation to create a Live view, for example &amp;ldquo;Our Customers&amp;rdquo;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Start by adding a join down to Sales opportunities&lt;/li&gt;
&lt;li&gt;Instead of adding an existing Sales opportunity field let’s add a calculation&lt;/li&gt;
&lt;li&gt;Go to list of fields and add a calculation called “Latest Sale”, which of course will be a ‘Date’ field.&lt;/li&gt;
&lt;li&gt;Press Add&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This time our SQL looks like&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; max({sales opportunities.date won})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The same aggregate field option should be ticked for us.&lt;/p&gt;
&lt;p&gt;We can add a filter based on the values in the calculation e.g. where ‘Latest Sale’ is not blank!&lt;/p&gt;
&lt;p&gt;You should now see your list of Organisations has dramatically shrunk&lt;/p&gt;
&lt;p&gt;If you are following along, it makes sense for a Quick name change to make it “All customers”&lt;/p&gt;
&lt;p&gt;[guide 1.4 - video 2]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/tGIsw4uhYZQ&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Introduction: Scaling potential</title>
      <link>https://docs.agilebase.co.uk/introduction/scaling-potential/</link>
      <pubDate>Mon, 22 Jun 2020 09:57:55 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/introduction/scaling-potential/</guid>
      <description>
        
        
        &lt;p&gt;Using Agilebase you can start small (perhaps in one team or department) and build apps iteratively to encompass a constantly widening range of business requirements. Many back office and CRM systems don&amp;rsquo;t typically store high volumes of data, but as systems grow its not uncommon to add transactional apps such as customer order processing for example, which can experience high throughput.&lt;/p&gt;
&lt;p&gt;Agilebase supports all three stages of an organisation&amp;rsquo;s lifecycle - startup, scaling and growth. As a startup, development speed and flexibility are key, during scaling efficiency becomes important and as a large organisation, control, robustness and trust come to the fore. We&amp;rsquo;ll explain how each of these is covered.&lt;/p&gt;
&lt;h2 id=&#34;database---postgresql&#34;&gt;Database - PostgreSQL&lt;/h2&gt;
&lt;p&gt;Firstly, at a technical level, Agilebase is well covered to support large volumes of data and numbers of transactions per second (TPS) whilst remaining highly responsive for users.&lt;/p&gt;
&lt;p&gt;The underlying database used to store data is &lt;a href=&#34;https://www.postgresql.org&#34;&gt;PostgreSQL&lt;/a&gt;, &amp;ldquo;the world&amp;rsquo;s most advanced open source database&amp;rdquo;. It has a strong reputation for reliability, feature robustness, and performance.&lt;/p&gt;
&lt;p&gt;Our monitoring systems ensure reliable performance under load. Customers routinely build apps which store and process tens of millions of data rows. Should there be a need to expand to larger amounts, there&amp;rsquo;s always the option to upgrade a customer database to larger servers or distributed &amp;lsquo;hyperscale&amp;rsquo; systems, such as &lt;a href=&#34;https://www.citusdata.com/&#34;&gt;Citus Data&lt;/a&gt;, which works with PostgreSQL.&lt;/p&gt;
&lt;h2 id=&#34;engine---api-creator&#34;&gt;Engine - API Creator&lt;/h2&gt;
&lt;p&gt;Typically, higher data processing volumes occur not when users are entering data, but when third party systems are connected via the API, which can feed in or extract data from high-volume sources such as websites or financial systems. The &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;API Creator&lt;/a&gt; allows this to be done easily.&lt;/p&gt;
&lt;h2 id=&#34;adoption&#34;&gt;Adoption&lt;/h2&gt;
&lt;p&gt;As Agilebase use migrates from one group of people to another throughout an organisation, a project manager or architect&amp;rsquo;s concern moves from the &amp;lsquo;is it technically possible?&amp;rsquo; question, to &amp;lsquo;is it going to be successful?&amp;rsquo;&lt;/p&gt;
&lt;p&gt;Over and over again we find that successful software implementations occur when users are happy. Frequently, Agilebase users evangelise the system to their colleagues and help grow the internal user base. There are a couple of reasons for this. Firstly, the user interface is friendly - not only easy to use but attractive and colourful. It sounds simple but it makes a world of difference.&lt;/p&gt;
&lt;p&gt;The user interface is also consistent from app to app - whatever the function of the app, the same look &amp;amp; feel &amp;amp; layouts are used, reducing training requirements and letting users support each other.&lt;/p&gt;
&lt;p&gt;Secondly, as Agilebase is a low code / no code platform, users can be involved from the very beginning. If a project is managed well, their input will be quickly actioned in a working prototype - people then feel they have a stake in the final application, resulting in engagement and buy-in.&lt;/p&gt;
&lt;p&gt;To aid adoption by new users, Agilebase allows an administrator to &lt;a href=&#34;https://docs.agilebase.co.uk/docs/adding-help/&#34;&gt;enter help content&lt;/a&gt; and links into many different places of the user interface, down to the individual field level. We highly recommend some time is spent doing this as applications are built.&lt;/p&gt;
&lt;h2 id=&#34;partners&#34;&gt;Partners&lt;/h2&gt;
&lt;p&gt;We have a growing network of partners, with lots of experience and skills in consultancy, project management and development using Agilebase. Larger projects and companies may well want to take advantage of this range of abilities, e.g. to run planning, development workshops and training events.&lt;/p&gt;
&lt;h2 id=&#34;security-privacy-and-control&#34;&gt;Security, privacy and control&lt;/h2&gt;
&lt;p&gt;As systems grow, it&amp;rsquo;s important that a level of control is exercised over who accesses which data, how and when, particularly when sensitive personal information is stored, or core data central to the running of a company.&lt;/p&gt;
&lt;p&gt;In a low code / low code environment such as Agilebase&amp;rsquo;s, an additional factor is controlling the evolution of the system. Too centralised and innovation can slow, too relaxed and it can run out of control.&lt;/p&gt;
&lt;p&gt;All of these factors are taken into consideration when we design the administrative features that help decision makers set the rules and monitoring for application development. The &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/&#34;&gt;Security and Compliance&lt;/a&gt; section of the documentation covers many of these. This is also an area of ongoing research and development - our &lt;a href=&#34;https://blog.agilebase.co.uk/2019/12/10/agilebase-platform-vision-2020-from-startup-to-scale-up-without-screwing-up/&#34;&gt;roadmap blog post&lt;/a&gt; details some of the current thinking.&lt;/p&gt;
&lt;h2 id=&#34;cost&#34;&gt;Cost&lt;/h2&gt;
&lt;p&gt;An easily understandable, fair and transparent pricing policy means that annual costs can be reliably estimated for any future growth scenario, in fact multiple scenarios can be planned - nothing is hidden! See the &lt;a href=&#34;https://todo.com&#34;&gt;costing&lt;/a&gt; section for more details.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Common Options</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-options/common-options/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-options/common-options/</guid>
      <description>
        
        
        &lt;h2 id=&#34;capitalise-field-name&#34;&gt;Capitalise field name&lt;/h2&gt;
&lt;p&gt;By default Agilebase displays field names in Title Case. Un-ticking this option disables that, which can be useful for special cases like e.g. &amp;lsquo;pH&amp;rsquo; or &amp;lsquo;Length (m)&amp;rsquo;, which would otherwise show as &amp;lsquo;PH&amp;rsquo; and &amp;lsquo;Length (M)&amp;rsquo;.&lt;/p&gt;
&lt;h2 id=&#34;icon&#34;&gt;Icon&lt;/h2&gt;
&lt;p&gt;Rather than displaying a field name, show an icon, chosen from &lt;a href=&#34;https://fontawesome.com/icons&#34;&gt;https://fontawesome.com/icons&lt;/a&gt;. For example, to show a phone icon for a phone number field, you could enter &lt;code&gt;phone&lt;/code&gt;, for an email field &lt;code&gt;envelope&lt;/code&gt; or a twitter handle &lt;code&gt;twitter&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;field-visibility&#34;&gt;Field visibility&lt;/h2&gt;
&lt;p&gt;Allow a field to be hidden or shown based on conditions.&lt;/p&gt;
&lt;p&gt;You can either select a view containing the conditions to use or just create conditions directly under the Field Visibility heading. In either case, the conditions in use will be shown.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/field-visibility.png&#34; alt=&#34;field visibility conditions&#34;&gt;&lt;/p&gt;
&lt;p&gt;Behind the scenes, the conditions are saved by creating a view (if none is selected already) and adding each condition as a filter. If a record appears in the view, the field will be visible, otherwise it won&amp;rsquo;t display to users.&lt;/p&gt;
&lt;p&gt;You can click the &amp;lsquo;visibility view&amp;rsquo; link to go to that view and edit it to add more complex conditions if you wish.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As the conditions are created in a view, this mechanism is really powerful. You can create simple or very complex critera, including all of the filter options in a view, for example basing a filter on a calculation and combining multiple filters.&lt;/p&gt;
&lt;p&gt;So you could make a field appear only when a particular point is reached in a process, or a status is changed elsewhere in a form, or perhaps it should only be visible to people who are &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/&#34;&gt;members of a certain role&lt;/a&gt;. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/filters/&#34;&gt;view filters&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Two special options are available&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;show always - the default state&lt;/li&gt;
&lt;li&gt;show never - useful for hiding fields used for internal purposes, e.g. which help the internal workings of a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;If this option is used on a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/separators/&#34;&gt;separator&lt;/a&gt; field, then the visibility rule will apply to the entire block of fields under that separator.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;lock-when-value-set&#34;&gt;Lock when value set&lt;/h2&gt;
&lt;p&gt;If the field is blank, allow a value to be entered, however as soon as it has a value, lock to prevent further editing. The user can manually unlock, but will be prompted for a reason for doing so, which will be logged against the field as a comment.&lt;/p&gt;
&lt;p&gt;This can be used to prevent accidental editing of important fields which should not usually be changed, for example a product&amp;rsquo;s stock code.&lt;/p&gt;
&lt;h2 id=&#34;unlock-if-record-in-view&#34;&gt;Unlock if record in view&lt;/h2&gt;
&lt;p&gt;If &lt;strong&gt;Lock when value set&lt;/strong&gt; is ticked, unlock on certain criteria. Works the same way as &lt;a href=&#34;#show-if-record-in-view&#34;&gt;Show if record in view&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;required&#34;&gt;Required&lt;/h2&gt;
&lt;p&gt;If ticked, prompt the user for a value when they try to leave a record without one. Note we can&amp;rsquo;t force the value, as the user could refresh the browser as a workaround.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For dropdown fields with the value(s) set to &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/#lists-of-users&#34;&gt;Lists of users&lt;/a&gt;, this has the special effect of defaulting the field to the ID of the currently logged in user.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;prominent&#34;&gt;Prominent&lt;/h2&gt;
&lt;p&gt;Prominently highlight the field on the screen, e.g. if it&amp;rsquo;s one that is important to fill out, without actually requiring a value to be supplied.&lt;/p&gt;
&lt;h2 id=&#34;set-from-previous-referenced-field&#34;&gt;Set from previous referenced field&lt;/h2&gt;
&lt;p&gt;Provides a way to calculate a default option for a field. Tick this option and place a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/referenced-data/&#34;&gt;referenced field&lt;/a&gt; just before this field. The value of this field will be set from whatever value the referenced field outputs.&lt;/p&gt;
&lt;p&gt;If the referenced field&amp;rsquo;s view has more than one field, the last one will be used, or if any have the same name as this field then that one will be.&lt;/p&gt;
&lt;p&gt;To have a value set only at a certain point in a process, this option can be combined with the &lt;a href=&#34;#show-if-record-in-view&#34;&gt;Show if record in view&lt;/a&gt; option. When the field becomes visible, the value will be set.&lt;/p&gt;
&lt;p&gt;Setting the value of a relation field is a special case because you need to set both the actual relation value, which is the numeric ID of the record you wish to relate to, and the display value i.e. what the user should see. The way to do this is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add a field or calculation with the same name as the display field for the relation. For example in a contact record, if you have a relation field &amp;lsquo;Company&amp;rsquo; with its display field set to &amp;lsquo;Company Name&amp;rsquo;, then you could create a calculation called Company Name and set it to output the name of the relevant company.&lt;/li&gt;
&lt;li&gt;Add the internal row ID for the company to the referenced field&amp;rsquo;s view. This should be the &lt;strong&gt;last&lt;/strong&gt; field in the view&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that another way of setting a value on record creation is to use a workflow set to &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/#when-a-records-created-run-this-workflow &#34;&gt;run on record creation&lt;/a&gt;. If you need to set the value on record creation, using a workflow is the best way - it will seem slightly quicker to the user. However if you need to be able to wait a while before automatically setting the value of a field, perhaps until another field has been filled in, then using this referenced field option is the way to go.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;unique&#34;&gt;Unique&lt;/h2&gt;
&lt;p&gt;Disallow any duplicate values from being entered. No records in the table can have the same value as each other.&lt;/p&gt;
&lt;h2 id=&#34;change-causes-record-refresh&#34;&gt;Change causes record refresh&lt;/h2&gt;
&lt;p&gt;Through the use of some field options like &lt;a href=&#34;#show-if-record-in-view&#34;&gt;Show if record in view&lt;/a&gt; above, the screen can change based on what&amp;rsquo;s entered into a form. This option can work as a switch to refresh the configuration of the screen if it does change as someone enters new data.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For example, if there is a table to store sales opportunities, one field may be the status. If the status changes to &lt;code&gt;won&lt;/code&gt; or &lt;code&gt;lost&lt;/code&gt;, then you may wish to show some extra fields like &amp;lsquo;date won&amp;rsquo; or &amp;lsquo;reason why lost&amp;rsquo; for example. To allow this, tick the &amp;lsquo;change causes record refresh&amp;rsquo; option on the status field. Then whenever the status changes, these fields will automatically appear if relevant.&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Reporting</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/usage-reporting/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/usage-reporting/</guid>
      <description>
        
        
        &lt;p&gt;Log data reporting provides a rich view of system usage.&lt;/p&gt;
&lt;h2 id=&#34;enhanced-audit-trail&#34;&gt;Enhanced audit trail&lt;/h2&gt;
&lt;p&gt;For organisations who have activated the enhanced audit trail, all logs are stored in user-accessible tables which are just like any other tables in the system, the only difference being the data is read only. This means an administrator can use the full power of the built in Agilebase reporting features, to create views, add calculations, charts etc., even export via the API.&lt;/p&gt;
&lt;p&gt;So for example, you could analyse how many changes were made per month by each user, count the volume of logins from various locations or see what the most common fields are to search on. All actions listed on the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/&#34;&gt;usage monitoring&lt;/a&gt; page are available to query.&lt;/p&gt;
&lt;p&gt;Data is also retained for an extended period, see &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/#retention-periods&#34;&gt;retention periods&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If interested in activating this feature, please &lt;a href=&#34;https://agilechilli.com/contact-us/&#34;&gt;get in touch&lt;/a&gt;. There will be a small recurring charge added to your bill.&lt;/p&gt;
&lt;h3 id=&#34;data-stored&#34;&gt;Data stored&lt;/h3&gt;
&lt;h4 id=&#34;logins&#34;&gt;Logins&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Username&lt;/li&gt;
&lt;li&gt;Date and time&lt;/li&gt;
&lt;li&gt;IP Address&lt;/li&gt;
&lt;li&gt;Country&lt;/li&gt;
&lt;li&gt;Internet Service Provider organisation name and location&lt;/li&gt;
&lt;li&gt;Client web browser (both summary and exact version details)&lt;/li&gt;
&lt;li&gt;Client operating system&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;data-changes-record-creation--update--delete&#34;&gt;Data changes (record creation / update / delete)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Username (in the case of an API call, will be &amp;lsquo;Public API [IP address]&amp;rsquo;. In the case of a system workflow, &amp;lsquo;System&amp;rsquo;)&lt;/li&gt;
&lt;li&gt;Date and time&lt;/li&gt;
&lt;li&gt;Action (e.g. update or delete)&lt;/li&gt;
&lt;li&gt;Table&lt;/li&gt;
&lt;li&gt;Field (if a single field is updated)&lt;/li&gt;
&lt;li&gt;Row ID - internal identifier of the record updated&lt;/li&gt;
&lt;li&gt;Saved data&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;view-access&#34;&gt;View access&lt;/h4&gt;
&lt;p&gt;This covers any time a view is opened or filtered, either by a user, or an API call&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Username (in the case of an API call, will be &amp;lsquo;Public API [IP address]&amp;rsquo;)&lt;/li&gt;
&lt;li&gt;Date and time&lt;/li&gt;
&lt;li&gt;Tile and view name&lt;/li&gt;
&lt;li&gt;Details - any filters and row limit applied&lt;/li&gt;
&lt;li&gt;Rows - the number of records returned to the user or API&lt;/li&gt;
&lt;li&gt;Processing time - the total server-side processing time in milliseconds needed to retrieve the data, and if for an API, transform it into JSON format&lt;/li&gt;
&lt;li&gt;Of which Q time &lt;strong&gt;(API calls only)&lt;/strong&gt; - to achieve a fair level of load balancing, Agilebase operates a separate API request queue for each customer. If a request arrives and the system is still busy processing a previous request, the new one gets held in a queue. This field shows how much of the total processing time, in ms was spent waiting for previous requests to complete&lt;/li&gt;
&lt;li&gt;Bytes &lt;strong&gt;(API calls only)&lt;/strong&gt; - the number of bytes of JSON data returned via the API&lt;/li&gt;
&lt;li&gt;Count - if many similar requests or API calls (to a particular view) reach the server in quick succession, they will be amalgamated together into one log line. The count then shows the number of requests the log line refers to, otherwise it will be 1. If more than one, then the &lt;em&gt;rows&lt;/em&gt;, &lt;em&gt;processing time&lt;/em&gt;, &lt;em&gt;of which q time&lt;/em&gt; and &lt;em&gt;bytes&lt;/em&gt; will represent the totals for all requests&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;table-schema-changes&#34;&gt;Table schema changes&lt;/h4&gt;
&lt;p&gt;These are changes made to a table structure by someone with &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/&#34;&gt;develop&lt;/a&gt; privileges, such as adding or removing a field.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Date and time&lt;/li&gt;
&lt;li&gt;Username&lt;/li&gt;
&lt;li&gt;Table name&lt;/li&gt;
&lt;li&gt;Action e.g. &amp;lsquo;add field&amp;rsquo;, &amp;lsquo;remove field&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Details - e.g. the name of the field&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;view-schema-changes&#34;&gt;View schema changes&lt;/h4&gt;
&lt;p&gt;Changes made to a view structure, such as adding fields, filters, calculations or charts&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Date and time&lt;/li&gt;
&lt;li&gt;Username&lt;/li&gt;
&lt;li&gt;Tile and view name&lt;/li&gt;
&lt;li&gt;Action&lt;/li&gt;
&lt;li&gt;Details - additional data related to the action, e.g. if adding a field, the field name&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;authentication-changes&#34;&gt;Authentication changes&lt;/h2&gt;
&lt;p&gt;A log of administrative actions such as assigning a user to a role, assigning privileges, or user actions such as requesting a password reset&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Date and time&lt;/li&gt;
&lt;li&gt;Username (of the user making the change)&lt;/li&gt;
&lt;li&gt;Action - e.g. add privilege&lt;/li&gt;
&lt;li&gt;Table name - only if the action relates to a particular table, e.g. assigning a role to a table&lt;/li&gt;
&lt;li&gt;Details - additional data related to the action, e.g. if adding a role to the table, the role name&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;standard-reporting&#34;&gt;Standard reporting&lt;/h2&gt;
&lt;p&gt;Built in reports are available in a number of areas, whether using the enhanced audit trail or standard logging.&lt;/p&gt;
&lt;h3 id=&#34;the-dashboard&#34;&gt;The dashboard&lt;/h3&gt;
&lt;p&gt;From the tiles interface, click the bird icon at the top left, then select &lt;em&gt;usage dashboard&lt;/em&gt;. The dashboard contains system reports including usage data.&lt;/p&gt;
&lt;h4 id=&#34;trends&#34;&gt;Trends&lt;/h4&gt;
&lt;p&gt;An overall usage treemap is displayed at the top. Each view is a section of the screen. Large areas represent views that get a lot of use, smaller areas those that don’t. Colours give immediate feedback on whether usage has been increasing (blue) or decreasing (grey) this month. Hovering over an area shows more stats including the top users.&lt;/p&gt;
&lt;p&gt;Underneath that a series of sparkline charts show long term trends, across selected operational, tactical and strategic metrics, all geared to showing utilisation over a 12 month period.&lt;/p&gt;
&lt;p&gt;Raw data can be downloaded to spreadsheet using the links beneath each sparkline. Note only the most recent 200,000 records can be downloaded in this way.&lt;/p&gt;
&lt;h4 id=&#34;capacity&#34;&gt;Capacity&lt;/h4&gt;
&lt;p&gt;As well as actual usage, the dashboard shows total capacity i.e. how many users, records, tables etc. are present in the system, along with purchased capacity (if relevant). These elements affect billing.&lt;/p&gt;
&lt;h4 id=&#34;workflows&#34;&gt;Workflows&lt;/h4&gt;
&lt;p&gt;A convenience view of all workflows which carry out automated data modifications, see &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflows&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;database-graph&#34;&gt;Database graph&lt;/h4&gt;
&lt;p&gt;Finally, for background on what the data structure looks like and how tables are connected, the database graph shows relations between tables is visual form. This can provide a fuller understaning of the system.&lt;/p&gt;
&lt;h3 id=&#34;table-and-view-usage&#34;&gt;Table and view usage&lt;/h3&gt;
&lt;p&gt;A quick overview of who is viewing data is shown in the administration interface for both tables and views.&lt;/p&gt;
&lt;p&gt;For a table&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Edit the table&lt;/li&gt;
&lt;li&gt;Open the &lt;em&gt;Recent Changes&lt;/em&gt; panel&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The report shows the number of times each user has viewed data from the table, per view. All views which contain any data from the table are included.&lt;/p&gt;
&lt;p&gt;For a view&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Edit the view&lt;/li&gt;
&lt;li&gt;Open to the &lt;em&gt;Recent Changes&lt;/em&gt; panel&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Similar data is show as for tables, but limited to the selected view.&lt;/p&gt;
&lt;h2 id=&#34;individual-record-histories&#34;&gt;Individual record histories&lt;/h2&gt;
&lt;p&gt;Any user can see the complete history of changes to an individual record, up to the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/usage-monitoring/#retention-periods&#34;&gt;retention period&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When editing a record, scroll to the bottom of the screen and click &lt;em&gt;history&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;To view the precise time of a change, hover over a date.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Table layouts</title>
      <link>https://docs.agilebase.co.uk/docs/tables/table-layouts/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/table-layouts/</guid>
      <description>
        
        
        &lt;p&gt;For each table, Agilebase will automatically build a data entry form for users to view, add and edit records with.&lt;/p&gt;
&lt;p&gt;The layout of this form can be controlled by selecting a layout option and adding separators to create blocks i.e. groups of fields which go together. This will create a more pleasant and usable system.&lt;/p&gt;
&lt;h2 id=&#34;layout&#34;&gt;Layout&lt;/h2&gt;
&lt;p&gt;The layout option is the main control. There are three options:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;single column&lt;/strong&gt; - a simple vertical list of fields&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;blocks in two columns&lt;/strong&gt; - makes the best use of screen space for large forms. Also allows tabs
&lt;ul&gt;
&lt;li&gt;All fields before the first separator are displayed in a section at the top of the screen, in two columns&lt;/li&gt;
&lt;li&gt;After that, each separator added creates a new block of fields. Blocks are arranged in two &amp;rsquo;newspaper&amp;rsquo; style columns which are displayed below the top section&lt;/li&gt;
&lt;li&gt;If the table has tabs, they are displayed below the top section&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;process flow&lt;/strong&gt; - blocks of fields are arranged vertically one after each other, works well when there the data entry form maps to a set process&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/tags-and-options.png&#34; alt=&#34;Tags and options&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s what the same data entry form looks like in each of the three configurations&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/layout-single.png&#34; alt=&#34;single column layout&#34;&gt; &amp;ldquo;single column&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/layout-two-columns.png&#34; alt=&#34;two column layout&#34;&gt; &amp;ldquo;two columns&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/layout-process.png&#34; alt=&#34;process flow layout&#34;&gt; &amp;ldquo;process flow&amp;rdquo;&lt;/p&gt;
&lt;p&gt;and here&amp;rsquo;s an example of &lt;strong&gt;2. blocks in two columns&lt;/strong&gt; with tabs.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/layout-tabs.png&#34; alt=&#34;form with tabs&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;separators&#34;&gt;Separators&lt;/h2&gt;
&lt;p&gt;To form a block, click on the &lt;em&gt;fields&lt;/em&gt; tab of a table and add a field of type &amp;lsquo;separator&amp;rsquo; - see the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/separators/&#34;&gt;fields reference&lt;/a&gt;. Move it to where the start of the block should be i.e. before the first field in the block.&lt;/p&gt;
&lt;h2 id=&#34;record-titles&#34;&gt;Record titles&lt;/h2&gt;
&lt;p&gt;In the screenshots above, you can see that each record has a heading, or title. drawn from the data.&lt;/p&gt;
&lt;p&gt;To set one or more fields to include in the title, use the field option &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/#use-as-record-title&#34;&gt;use as record title&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;see-also&#34;&gt;See also&lt;/h2&gt;
&lt;p&gt;When a relation field is near the top of the form, it&amp;rsquo;s also moved to the record title level to become a title link, allowing navigation upwards to the &amp;lsquo;parent&amp;rsquo; record. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/&#34;&gt;hierarchy navigation&lt;/a&gt; for info about upwards, and downwards, navigation.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: Guide 3.3 - Records: Advanced UI Control</title>
      <link>https://docs.agilebase.co.uk/guides/guide3-advanced-usage/records/</link>
      <pubDate>Tue, 17 Oct 2023 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/guides/guide3-advanced-usage/records/</guid>
      <description>
        
        
        &lt;h2 id=&#34;records&#34;&gt;Records&lt;/h2&gt;
&lt;p&gt;The Full record view is the interface that a user uses to update and create data in the underlying source Table.&lt;/p&gt;
&lt;p&gt;This User interface isn’t simply every field shown on the screen. The power of agilebase comes from providing facilities to control how the user interacts with their data. Put another way, by allowing developers to control individual fields, decide when to show them and group them together etc, the job of entering data becomes a pleasant user experience.&lt;/p&gt;
&lt;p&gt;There is plenty of help available in the agileBase Docs system - &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/&#34;&gt;Help on Fields&lt;/a&gt;
So, we will focus on a couple of key features that have a big impact on the user interface&lt;/p&gt;
&lt;p&gt;Let’s start with the simplest Field type, a &lt;strong&gt;text box&lt;/strong&gt;. It actually has some of the most powerful options. This can be setup to accept “anything” - and you can choose how much text is “expected” from the user by setting small, medium or large.&lt;/p&gt;
&lt;p&gt;Or you can decide to control/restrict the data entered&amp;hellip;
Choosing “Use as DropDown” or “Use tags” changes the text box from free form text entry to selecting from a list. Use as dropdown restricts the user to a single option, whilst tags allows multiple choice.
Ticking “use only given values” restricts the options the user can choose from to be from the comma separated list of values.
N.b. A dropdown with 3 or less options will appear as button switches. We can use this facility to create a pleasing UI when the user is faced with a series of Choices.
&lt;img src=&#34;https://docs.agilebase.co.uk/example-button-switch.png&#34; alt=&#34;Example of a series of button switches&#34;&gt;&lt;/p&gt;
&lt;p&gt;It can be very useful to prefix each option with a number to help with ordering when alphabetical is insufficient. For example if we want Yes before No!
Its during this scenario that being able to “Swap colours” can also be be handy&lt;/p&gt;
&lt;p&gt;There is a further option to “load” the options with the list of Users in the system - very useful when assigning ownership e.g. Account Manager or Task Assigned to
&lt;img src=&#34;https://docs.agilebase.co.uk/text-field-dropdown.png&#34; alt=&#34;Example of a drop down field restricted toa  drop down of users&#34;&gt;
(video coming soon)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A couple of quickies…&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Date fields -  you can control the date format (e.g. use the 3 letter month name not a number) as well as the accuracy required on data entry.
Number fields -  a hidden option on a decimal field is the ability to use “as duration”. Make sure you have 2 decimal places of accuracy and the user will see a time or duration… so instead of seeing a value like “17.5” they will see 17:30.&lt;/p&gt;
&lt;p&gt;(video coming soon)&lt;/p&gt;
&lt;h3 id=&#34;relation-fields&#34;&gt;Relation fields&lt;/h3&gt;
&lt;p&gt;These are the cornerstone of agileBase. Controlling and helping the user “pick” the right relation can make or break the usability of a system. It is worth spending the extra time to ensure the right “picker” is set up on a relation field. This is done by setting the “view to use” to be a tailored view dedicated to the job…&lt;/p&gt;
&lt;p&gt;(video coming soon)&lt;/p&gt;
&lt;h3 id=&#34;cross-reference-fields&#34;&gt;Cross Reference fields&lt;/h3&gt;
&lt;p&gt;One of the most powerful features a developer can use when defining a table and its user interface is a cross referenced field.
This field type isn&amp;rsquo;t for storing data directly, rather its for looking up existing data!
The Cross Reference (Xref for short) is a link to a view that navigates the relational database in order to calculate or lookup relevant information for the record being looked at by the user.
There are lots of use cases and lots of options when setting up the Xref in order to optimise their use.
One of the simplest Use Cases is to turn an editable field in to read only. For example, displaying the date when the record was created.&lt;/p&gt;
&lt;p&gt;To do this, start by creating a view based from the appropriate table. The name of the view is only important to the developer, but it can be useful to adopt a naming convention and filing system to help manage the back-end of the system. In this example we&amp;rsquo;ll call it &amp;ldquo;Xref - Date Created&amp;rdquo; and file it in the tile &amp;ldquo;System - Cross Referenced&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Now, simply add a calculation, giving it an appropriate name.
Bear in mind this name will most likely appear to the user so we will call it &amp;ldquo;Date Created&amp;rdquo;.
The contents of the calculation will be {sales opportunities.creation time [auto]}
Now return to the Table and add a field of type Cross reference.
Find your view and press add. After positioning it somewhere appropriate the UI should look something like&amp;hellip;
{screenshot}
&lt;img src=&#34;https://docs.agilebase.co.uk/xref-date-created-setup.png&#34; alt=&#34;Example of the definition of a cross Reference lookup field&#34;&gt;
&lt;img src=&#34;https://docs.agilebase.co.uk/xref-date-created-example.png&#34; alt=&#34;Example of how a cross Reference lookup field appears&#34;&gt;&lt;/p&gt;
&lt;p&gt;You have a couple of options about how the data appears.
The &lt;strong&gt;Tabular Display&lt;/strong&gt; checkbox does what its says on the tin. It is most useful when the Xref returns multiple lines of data.
If unticked then the &lt;strong&gt;Display of Fields&lt;/strong&gt; options come in to play.
&lt;img src=&#34;https://docs.agilebase.co.uk/xref-display-options.png&#34; alt=&#34;options for controlling how Xref data appears&#34;&gt;&lt;/p&gt;
&lt;p&gt;Cross references can return a lot more than a single field of datat&amp;hellip; the next example returns a table of data.
In this example we will create a view from the organisation that joins DOWN to the Contacts table and pull through a few key fields of information.
&lt;img src=&#34;https://docs.agilebase.co.uk/xref-tabular.png&#34; alt=&#34;options for controlling how Xref data appears&#34;&gt;
We can now see the Organisation&amp;rsquo;s contact list embedded in the Organisation record&lt;/p&gt;
&lt;p&gt;(video coming soon)&lt;/p&gt;
&lt;h4 id=&#34;important-concept-for-building-cross-references&#34;&gt;Important Concept for building Cross References&lt;/h4&gt;
&lt;p&gt;How you start building a Cross Reference view will effect how the UI uses it.
In this next example we will repeat the task but start by building our cross reference view from the contacts table and join UP to the organisation.
We will pull through the same few key fields and add the cross reference to the Organisation table.
&lt;img src=&#34;https://docs.agilebase.co.uk/xref-add-contact.png&#34; alt=&#34;Alternative Cross reference enabling adding a child record&#34;&gt;
As you can see we get more than a list, in fact we can add new contacts and edit existing ones.
In this configuration this Cross reference is an alternative to using the contacts tab.
As the developer the choice is yours to use the mechanism which you feel is best.
For this use case it would make sense to keep the Contacts tab, and use the first style of cross reference (read only mode) but only after its been tweaked to return those contacts who are flagged as the Owner or CEO.&lt;/p&gt;
&lt;p&gt;(video coming soon)&lt;/p&gt;
&lt;h4 id=&#34;xref-as-workflows&#34;&gt;Xref as Workflows&lt;/h4&gt;
&lt;p&gt;If you have read some of our other guides you&amp;rsquo;ll know that a view can be configured to be a WorkFlow and perform an action. And since a cross reference is also a view we can use this &amp;ldquo;double life&amp;rdquo; and use a cross reference WorkFlow to make a Button!
It is as simple as adding any other Cross reference&amp;hellip; although the name of the view you add will become the button title! So again, with a little bit of housekeeping it can be useful to have a tile called &amp;ldquo;System - Buttons&amp;rdquo; to keep them all in.
A typical Use Case would be to use a series of buttons to move a record through a series of &amp;ldquo;states&amp;rdquo;. This is especially useful if only certain users are allowed to change the state at certain stages.
For example: a Non Conformance may be marked as &amp;ldquo;Completed&amp;rdquo; by anyone, but only &amp;ldquo;admins&amp;rdquo; are allowed to mark completed tasks as &amp;ldquo;Verification Complete&amp;rdquo;. The right combination of buttons and visibility rules will make the UX smooth and seamless.&lt;/p&gt;
&lt;p&gt;To acheive this you will need to add a total of 3 cross reference fields.
The first is a simple &amp;ldquo;data&amp;rdquo; that shows the user the current &amp;ldquo;Status&amp;rdquo;.
The other 2 cross references, both Workflows, each set the &amp;ldquo;hidden&amp;rdquo; status to the appropriate value.
The visibility rule applied to each is very important - they need to check a combination of status and user role to ensure that the button is only visible at the right time to the right people.&lt;/p&gt;
&lt;p&gt;(video coming soon)&lt;/p&gt;
&lt;h4 id=&#34;xref-to-embed-graphs&#34;&gt;Xref to embed Graphs&lt;/h4&gt;
&lt;p&gt;The final use of cross reference fields is to embed graphs in to the User Interface.
If you add a simple &amp;ldquo;data&amp;rdquo; style Cross reference, but have gone into that view as a user and added a graph, then the system will choose to display the Graph instead.
Whilst the Cross reference may return a large data table (and corrsponding graph) when we look at the cross reference embed on the full record you can see the graph is only displaying results related to the record, in this case the organisation.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/xref-graph.png&#34; alt=&#34;options for controlling how Xref data appears&#34;&gt;&lt;/p&gt;
&lt;p&gt;(video coming soon)&lt;/p&gt;
&lt;h3 id=&#34;controlling-access-to-a-field&#34;&gt;Controlling access to a Field&lt;/h3&gt;
&lt;p&gt;The roles and permissions system gives you top level control as to the whether the whole table is accessible to a user. However, you often need more fined grained control on field by field basis.
There are two complimentary ways of controlling &lt;em&gt;access&lt;/em&gt; to a table&amp;rsquo;s field.
We have already briefly mentioned visibility rules, but there are also rules for locking.
The key difference is whether you want the end user to &lt;strong&gt;see&lt;/strong&gt; the data or not!
In both cases you can make the decision once, choosing &amp;ldquo;always&amp;rdquo; or &amp;ldquo;never&amp;rdquo;, or a much powerful option is to use a calculation to make the decision.
It is very similar to creating and using a cross reference&amp;hellip; a view is created&amp;hellip; in this case its a mechanism to hold the logic. The system uses the existence of the record within this &amp;ldquo;logic&amp;rdquo; view to control whether the field being looked at should be locked or is even visible.&lt;/p&gt;
&lt;p&gt;There is actually a shortcut to a regularly used &amp;ldquo;locking&amp;rdquo; use case&amp;hellip; Often you want a field to be non-editable once filled in. In this case you dont need to write the logic an apply the view, simply tick the option on the field options screen
&lt;img src=&#34;https://docs.agilebase.co.uk/lock-value-when-set.png&#34; alt=&#34;Image of Lock value when set&#34;&gt;&lt;/p&gt;
&lt;p&gt;(video coming soon)&lt;/p&gt;
&lt;h3 id=&#34;form-titles&#34;&gt;Form Titles&lt;/h3&gt;
&lt;h4 id=&#34;record-title&#34;&gt;Record Title&lt;/h4&gt;
&lt;p&gt;The user interface has the ability to highlight the importance of certain fields by showing their contents in large font at the top of the record data. For example, a Company Name field may be the record title for an organisation record.&lt;/p&gt;
&lt;p&gt;This option can be selected for multiple fields in a table. In that case, the first field will be the main title, others will appear as subtitles.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s also important to consider the position of the relation fields in your table.
In this first example the Organisation field is the first field in the table definition. It is given elevated status and appears as large link above the record title.
&lt;img src=&#34;https://docs.agilebase.co.uk/record-title.png&#34; alt=&#34;example of having relation field first and using record title option on text field&#34;&gt;&lt;/p&gt;
&lt;p&gt;In this second example the organisation field is second in the list and the record title field is not flagged as such.
&lt;img src=&#34;https://docs.agilebase.co.uk/record-title-v2.png&#34; alt=&#34;example of NOT having relation field first and NOT using record title option on text field&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Preventing duplicates&lt;/strong&gt;
Enabling the ‘use as record title’ option also has the effect of enabling duplicate detection. The system will detect when a value is entered that is close to an existing value in the system. Any ‘close’ values that are found are displayed as links to the relevant records.&lt;/p&gt;
&lt;p&gt;This can be useful when e.g. entering company names. Although a field can be marked unique to prevent exact duplicates, that won’t pick up near matches, which this duplicate detection will. For example, ‘The Universoty Of Bristol’ and ‘University Of Bristol (UOB)’ will be detected as close matches, or ‘Agilebase’ and ‘Agilebase Ltd’.&lt;/p&gt;
&lt;p&gt;The system uses trigram matching to detect similar values.&lt;/p&gt;
&lt;h3 id=&#34;sections&#34;&gt;Sections&lt;/h3&gt;
&lt;p&gt;A separator field doesn’t actually store any data, but is used as a marker of the start of a block of fields. Create a separator and move it to just before the field which should be the first in a block.
Depending on the table layout, these blocks will be displayed in different ways, but in all cases will form a distinct group of fields.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/record-separator.png&#34; alt=&#34;Screenshot of the defintion of a separator field&#34;&gt;&lt;/p&gt;
&lt;p&gt;Not only is the separator a useful mechanism for breaking up complicated forms of data, but it acts as a container allowing you to control visibility of the whole block. Simply apply your visibility rule to the container and all fields within it are controlled too.
Some use cases require optional data to be captured&amp;hellip; in these instances it can be useful to have sections that are closed by default. You can even use a &amp;ldquo;logic&amp;rdquo; rule to make them open once a user has decided to enter data in to them.&lt;/p&gt;
&lt;p&gt;Another setting with the Separator is “has tabs”.
The last Separator to have this option &amp;ldquo;ticked&amp;rdquo; will be the first &amp;ldquo;block&amp;rdquo; contained under the first record tab.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Form layout&lt;/strong&gt;
&lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/table-layouts/&#34;&gt;For more information on layout options visit &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(video coming soon)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Software Architect</title>
      <link>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/software-architect/</link>
      <pubDate>Tue, 03 Oct 2023 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/introduction/learner-progression-levels/software-architect/</guid>
      <description>
        
        
        &lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;As well as building and disassembling applications, software architects can set company-wide settings and manage the account as a whole. They can&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add and remove &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/users/&#34;&gt;users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Edit company level settings (e.g. whether to enforce 2FA)&lt;/li&gt;
&lt;li&gt;Change table &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/sensitive-data/&#34;&gt;sensitive and personal data&lt;/a&gt; settings (GDPR)&lt;/li&gt;
&lt;li&gt;View and controls users&amp;rsquo; learner progression levels&lt;/li&gt;
&lt;li&gt;Assign privileges&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;dont-know-where-to-start&#34;&gt;Don&amp;rsquo;t know where to start?&lt;/h2&gt;
&lt;p&gt;If your company has just started building using Agilebase and you are reading this, then you&amp;rsquo;re probably feeling that you&amp;rsquo;ve been thrown in to the deep end!
Don&amp;rsquo;t worry - using Agilebase will feel like you&amp;rsquo;ve been given a life buoy on &amp;hellip; with an outboard motor&amp;hellip; in lovely warm water&amp;hellip; next to the 5 star all inclusive carribean resort!
To kick off, watch the following guide which will walk you through building a fully functional sales CRM.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/guides/guide1-crm/&#34;&gt;Build a CRM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;useful-links&#34;&gt;Useful Links&lt;/h2&gt;
&lt;p&gt;Looking for some guides to help you&amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;COMING SOON - Video about debugging tips and advice on managing Agilebase development projects&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information about:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-data-to-a-third-party-via-api/&#34;&gt;Using the API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/advanced-usage/build-patterns/&#34;&gt;Build Patterns&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Logging in from an app</title>
      <link>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/app_login/</link>
      <pubDate>Sun, 20 Jun 2021 09:20:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/app_login/</guid>
      <description>
        
        
        &lt;p&gt;It&amp;rsquo;s possible for a developer to create a third party application, for example a phone or tablet app, that communicates with Agilebase via the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations&#34;&gt;API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now to use the API, you don&amp;rsquo;t need to authenticate as a user, as long as the app has the correct Authorization key(s), it can read and write data to Agilebase.&lt;/p&gt;
&lt;p&gt;However, in some cases the app may need to confirm that someone has a valid Agilebase account before allowing them to use the app. This may or may not be necessary depending on the use case, for example depending on whether the app is free to use for anyone, or must be limited to paying customers.&lt;/p&gt;
&lt;p&gt;To validate a user, the app must redirect them to the Agilebase login page, let them log in and confirm that was successful. Therefore, a HTTP client is necessary - this can be a &amp;lsquo;web view component&amp;rsquo; or a programmatic client such as the &lt;a href=&#34;https://hc.apache.org/&#34;&gt;Apache HTTP Client&lt;/a&gt; for &lt;a href=&#34;https://en.wikipedia.org/wiki/Java_%28programming_language%29&#34;&gt;Java&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this example, we&amp;rsquo;ll use the &lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/react-native-webview&#34;&gt;Native Web View&lt;/a&gt; but the principle is the same for any programming language or library.&lt;/p&gt;
&lt;h2 id=&#34;general-principle&#34;&gt;General Principle&lt;/h2&gt;
&lt;p&gt;The application must reproduce the same login process as a human would, using a HTTP client. Importantly, the HTTP client must support cookies, as the login process depends on them, in particular setting a &lt;code&gt;JSESSIONID&lt;/code&gt; cookie.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make a request to load the page &lt;a href=&#34;https://appserver.gtportalbase.com/Agilebase/AppController.servlet?return=user_details&#34;&gt;https://appserver.gtportalbase.com/Agilebase/AppController.servlet?return=user_details&lt;/a&gt;. This will return the login page and set the cookie value.&lt;/li&gt;
&lt;li&gt;Submit the login form using the user&amp;rsquo;s username and password. If using a programattic process i.e. making the calls from code rather than using a web view, this means making a form POST to &lt;code&gt;/Agilebase/j_security_check&lt;/code&gt; with the parameters &lt;code&gt;j_username&lt;/code&gt; and &lt;code&gt;j_password&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Detect whether the login&amp;rsquo;s successful. If not, the standard Agilebase login failure page will be returned&lt;/li&gt;
&lt;li&gt;If successful, a HTML page will be returned containing three hidden input fields, &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;forename&lt;/code&gt;, &lt;code&gt;surname&lt;/code&gt; containing relevant details for the logged in user. If being called from a React Native Web View, the page will also post back messages to React using this JavaScript:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if (window.ReactNativeWebView) {
    window.ReactNativeWebView.postMessage(&amp;#34;username:&amp;#34; + username);
    window.ReactNativeWebView.postMessage(&amp;#34;forename:&amp;#34; + forename);
    window.ReactNativeWebView.postMessage(&amp;#34;surname:&amp;#34; + surname);
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s a full example of a login.js page using the React Native Web View. NB this is an example taken from a full application, so you will need to modify it / strip it back to suit your needs, before it can be run.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;//Node imports
import React, {useEffect, useRef, useState} from &amp;#39;react&amp;#39;;
import {View, StatusBar, Image, ImageBackground, ScrollView} from &amp;#39;react-native&amp;#39;;

//Local imports
import {styles} from &amp;#39;../../../styles/loginStyles&amp;#39;;
import {Images, Colors, Constants, Language} from &amp;#39;../../../common&amp;#39;;
import {useNetInfo} from &amp;#34;@react-native-community/netinfo&amp;#34;;
import { WebView } from &amp;#39;react-native-webview&amp;#39;;
import {useDispatch, useSelector} from &amp;#39;react-redux&amp;#39;;
import {updateUserData} from &amp;#39;../../../redux/actions/commonAction&amp;#39;;
import commonFunctions from &amp;#39;../../../common/commonFunctions&amp;#39;;
import SplashScreen from &amp;#39;react-native-splash-screen&amp;#39;
const {fontSize, fontFamily, Window} = Constants;

const LoginScreen = (props) =&amp;gt; {
    const dispatch = useDispatch();
    const {user_data} = useSelector(state =&amp;gt; state);
    const netInfo = useNetInfo();

    useEffect(function () {
        SplashScreen.hide();
        console.log(&amp;#39;netInfo==============&amp;#39;, netInfo)
        if(netInfo?.isInternetReachable || netInfo?.details != null){
            checkUser();
        }
    }, [netInfo, user_data]);

    const checkUser = () =&amp;gt; {
        if(user_data &amp;amp;&amp;amp; user_data?.forename &amp;amp;&amp;amp; user_data?.surname &amp;amp;&amp;amp; user_data?.username){
            goToNextPage();
        }
        console.log(&amp;#39;user_data&amp;#39;, user_data)
    }

    const goToNextPage = async () =&amp;gt; {
        await commonFunctions.removeTimeStamp();
        navigateToNextPage();
    }

    const onResponseFromWebView = (event) =&amp;gt; {
        const eventData = event.nativeEvent.data;
        console.log(&amp;#39;eventData&amp;#39;, eventData);
        if (eventData.includes(&amp;#39;username&amp;#39;)) {
            dispatch(updateUserData({username: eventData.split(&amp;#39;username:&amp;#39;)[1]}));
        } else if (eventData.includes(&amp;#39;forename&amp;#39;)) {
            dispatch(updateUserData({forename: eventData.split(&amp;#39;forename:&amp;#39;)[1]}));
        } else if (eventData.includes(&amp;#39;surname&amp;#39;)) {
            dispatch(updateUserData({surname: eventData.split(&amp;#39;surname:&amp;#39;)[1]}));
        }
    }

    const navigateToNextPage = () =&amp;gt; {
        if (netInfo?.isInternetReachable) {
            return props.navigation.navigate(&amp;#39;Loading&amp;#39;);
        }
        return props.navigation.navigate(&amp;#39;MyApplicationPage&amp;#39;);
    }

    return (
        &amp;lt;View style={styles.container}&amp;gt;
            &amp;lt;StatusBar backgroundColor={Colors.black} barStyle={&amp;#39;dark-content&amp;#39;}/&amp;gt;
            {(netInfo?.isInternetReachable &amp;amp;&amp;amp; !user_data?.surname) ?
                &amp;lt;WebView
                    source={{uri: &amp;#39;https://appserver.gtportalbase.com/Agilebase/AppController.servlet?return=user_details&amp;#39;}}
                    onMessage={onResponseFromWebView}
                    textZoom={100}
                    sharedCookiesEnabled={true}
                /&amp;gt; :
                &amp;lt;View style={styles.loadingImage}&amp;gt;
                    &amp;lt;Image source={Images.logo}/&amp;gt;
                &amp;lt;/View&amp;gt;
            }
        &amp;lt;/View&amp;gt;
    );
};

export default LoginScreen;
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Introduction: Costing structure</title>
      <link>https://docs.agilebase.co.uk/introduction/costing-structure/</link>
      <pubDate>Mon, 22 Jun 2020 09:57:55 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/introduction/costing-structure/</guid>
      <description>
        
        
        &lt;p&gt;A large variety of applications can be built using the Agilebase platform. Customers can start small (perhaps in one team or department, or a new startup business) and build apps iteratively to encompass a constantly widening range of business requirements.&lt;/p&gt;
&lt;p&gt;Our costing structure has been developed to ensure fairness and affordability however far along an organisation is in their growth.&lt;/p&gt;
&lt;p&gt;Costing is controlled by five factors&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Users - the number of people who can log in&lt;/li&gt;
&lt;li&gt;Tables - a measure of the size of an application - how many capabilities does it cover?&lt;/li&gt;
&lt;li&gt;Document storage - used if a company uploads or generates documents, images or videos&lt;/li&gt;
&lt;li&gt;Quantity of data - the number of records stored in a system&lt;/li&gt;
&lt;li&gt;Optional API charges - when integrating with third party software&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each element has a sliding scale - the larger the number of units, the lower the per-unit cost, to allow large scale use while remaining affordable.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Creating a view</title>
      <link>https://docs.agilebase.co.uk/docs/views/creating-a-view/</link>
      <pubDate>Wed, 13 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/views/creating-a-view/</guid>
      <description>
        
        
        &lt;p&gt;In Agilebase, a view &amp;lsquo;belongs to&amp;rsquo; a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/&#34;&gt;table&lt;/a&gt;. We&amp;rsquo;ll see what that means in more detail below, but for now, just choose a table to show data from to users. In examples on this section of the documentation we&amp;rsquo;ll assume we pick a contacts table.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll also assume we already have some tables and some &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tiles/&#34;&gt;tiles&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;to-create-a-view&#34;&gt;To create a view&lt;/h2&gt;
&lt;p&gt;You can create a view from scratch, or clone an existing one then edit it.&lt;/p&gt;
&lt;p&gt;To create from scratch&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Select (or &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/&#34;&gt;create&lt;/a&gt; a new) table.&lt;/li&gt;
&lt;li&gt;Click the table you want to create a view from&lt;/li&gt;
&lt;li&gt;Once the table has been selected, click &lt;em&gt;name and views&lt;/em&gt; on the floating sidebar&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;Add View&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;You should now see your freshly created view&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;There is an option &lt;strong&gt;Populate the view with fields from this table&lt;/strong&gt; next to the &lt;em&gt;Add View&lt;/em&gt; button. This is a convenience feature, which is ticked by default. When it&amp;rsquo;s ticked, the view created will contain the first 10 fields from the table - you can then remove any you don&amp;rsquo;t need or add more. When un-ticked, the view will start with no fields so you can add just those you wish.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To clone an existing view&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open a view&lt;/li&gt;
&lt;li&gt;Toggle on the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/introduction/development-mode/&#34;&gt;development mode&lt;/a&gt; and click &amp;rsquo;edit view&amp;rsquo; at the top left&lt;/li&gt;
&lt;li&gt;Open the &amp;lsquo;properties and options&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Scroll down to the bottom of the panel and press the &amp;lsquo;clone view&amp;rsquo; button&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;[snippet video  - cloning a view]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/zA2EEW7YLsA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;organising-into-a-navigation-structure&#34;&gt;Organising into a navigation structure&lt;/h2&gt;
&lt;p&gt;On creating a view, its editing panel will open. One of the first things it&amp;rsquo;s useful to do is put the field in a tile - use the &lt;em&gt;Tile&lt;/em&gt; dropdown option, under &lt;em&gt;properties&lt;/em&gt; to do so.&lt;/p&gt;
&lt;p&gt;Within a tile, the view can be added to a menu by editing the view name. Simply prefix the view name with a menu name and a dash. So for example, naming a view &lt;code&gt;contacts - all contacts&lt;/code&gt; will create a &amp;lsquo;contacts&amp;rsquo; menu containing the view &amp;lsquo;all contacts&amp;rsquo; visible to users.&lt;/p&gt;
&lt;p&gt;Entering a view &lt;em&gt;Help&lt;/em&gt; in the space underneath the name will provide help text for the view. This will be displayed in the menu underneath the view name. Here&amp;rsquo;s a screenshot of a sample menu, each with purpose completed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/menu.png&#34; alt=&#34;menu&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;adding-and-removing-fields&#34;&gt;Adding and removing fields&lt;/h2&gt;
&lt;p&gt;The core function of a view is usually to display a set of fields to people, as columns, so they can see data and search it.&lt;/p&gt;
&lt;p&gt;When you create a view, the first dozen or so fields in the table it was created from will be added automatically. You can hover over a field and click the cross icon to remove it from the view.&lt;/p&gt;
&lt;p&gt;To add a new field, make sure you&amp;rsquo;re in the &amp;lsquo;fields&amp;rsquo; panel (the default). An &amp;lsquo;Add Field&amp;rsquo; section will be visible, with two selectors.
The first on the left selects the source of data. This is typically a table, but can also be a view.&lt;/p&gt;
&lt;p&gt;The default source is the view&amp;rsquo;s parent table. The system also intelligently presents any tables which are related - for example, when editing a view based on contacts, &amp;lsquo;organisations&amp;rsquo; may be available if each contact belongs to an organisation.
Finally, any tables or views which are &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/joins/&#34;&gt;joined&lt;/a&gt; to this view are available as sources.&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;ve selected a source (if not the default), you can choose a field to add.&lt;/p&gt;
&lt;p&gt;When you press the Add button you&amp;rsquo;ll be prompted to edit the field name if you like. You can just press OK to accept the name of the field as it is, but if you like you can edit it first. That doesn&amp;rsquo;t change the field name in its underlying table, but it does allow you to name the field something specific just for this view.
For example, in your organisations table, you may have a field &amp;lsquo;Organisation Name&amp;rsquo;. In a view of invoices to customers, you may want to name this &amp;lsquo;Customer Name&amp;rsquo;, just for that view.&lt;/p&gt;
&lt;h3 id=&#34;applying-sorts&#34;&gt;Applying sorts&lt;/h3&gt;
&lt;p&gt;When someone opens a view, they can sort it by any column they like by clicking the column header. However when building a view, you may want to set a default sort order.&lt;/p&gt;
&lt;p&gt;To do that, when looking at the list of fields in a view, click the little up/down icon to the left of the fieldname. That will apply a sort to that field. Clicking it again will change the direction of the sort.&lt;/p&gt;
&lt;p&gt;You can add sorts to multiple fields, they will take effect from the top down, i.e. the data will be sorted by the top field with a sort, then by the next one down etc.&lt;/p&gt;
&lt;h3 id=&#34;adding-sections&#34;&gt;Adding sections&lt;/h3&gt;
&lt;p&gt;If a view has many fields, it can be beneficial to organise them into sections, just like you organise table fields into sections using &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/separators/&#34;&gt;separators&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To create a section, edit the field or calculation which should form the start of a section and enter some text describing the section into the &lt;em&gt;Section Name&lt;/em&gt; box.&lt;/p&gt;
&lt;p&gt;When a user hovers over a column name which is the start of a section (identified by the vertical bar on screen), the section name is displayed. Here&amp;rsquo;s an example where the field Distinct Wish Count is the start of an &amp;lsquo;Actions&amp;rsquo; section.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/view-section.png&#34; alt=&#34;view section&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;using-a-view&#34;&gt;Using a view&lt;/h2&gt;
&lt;p&gt;Once the view is created, how can someone use it? We won&amp;rsquo;t work through every possibility here as this documentation is for administrators rather than users, but here are some of the most important points in brief you may like to be aware of in order to support apps you build.&lt;/p&gt;
&lt;h3 id=&#34;finding-data&#34;&gt;Finding data&lt;/h3&gt;
&lt;p&gt;By default, a search box appears under each column heading (the system can also be configured in a simplified way with a single search box to cover all fields).&lt;/p&gt;
&lt;p&gt;The help icon (?) to the left of the search boxes details the types of search that can be performed. There are many, allowing for e.g. date-based searches, &lt;em&gt;and&lt;/em&gt; and &lt;em&gt;or&lt;/em&gt; searching, finding empty values etc. Helper features pop up for some field types, like date range pickers for example.&lt;/p&gt;
&lt;h3 id=&#34;seeing-summary-stats&#34;&gt;Seeing summary stats&lt;/h3&gt;
&lt;p&gt;Hovering over a column shows summary statistics, like a total and average (of all filtered records) for numeric fields, or a breakdown of dropdown/tags fields.&lt;/p&gt;
&lt;h3 id=&#34;loading-a-record&#34;&gt;Loading a record&lt;/h3&gt;
&lt;p&gt;Once a record has been found, click a row in the view to load that record for viewing or editing. The record loaded comes from the table that the view belongs to (as referenced at the start of this page), even though the view may contain fields from other tables as well.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s also possible to use &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/options/display-options/#interface-inline-editing&#34;&gt;inline editing&lt;/a&gt; to edit the contents of fields directly in the view.&lt;/p&gt;
&lt;p&gt;Pressing the plus button to the left of the view contents will create a new record in the view&amp;rsquo;s parent table.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Basic Field Types</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-types/basic-field-types/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-types/basic-field-types/</guid>
      <description>
        
        
        &lt;p&gt;These are the core types of fields by which data can be entered by users (or other sources such as the API or a workflow).&lt;/p&gt;
&lt;h2 id=&#34;text&#34;&gt;Text&lt;/h2&gt;
&lt;p&gt;Text fields are the most commonly used. Depending on &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/&#34;&gt;field options&lt;/a&gt;, text can be entered into a standard data entry control, a large box allowing rich formatting (bold, italic etc.), chosen from a dropdown of options or added as tags.&lt;/p&gt;
&lt;h2 id=&#34;number&#34;&gt;Number&lt;/h2&gt;
&lt;p&gt;When adding a number field, select a &lt;em&gt;precision&lt;/em&gt; from the dropdown. If &lt;code&gt;0&lt;/code&gt; is chosen, then it will be a whole number (integer) field. If any other value is chosen, it will be a decimal field. The decimal precision can be changed at any time in the field options, but a whole number can&amp;rsquo;t be converted to a decimal or vice versa via field options.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/advanced-usage/build-patterns/#switching-a-field-from-one-type-to-another&#34;&gt;changing field types&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;date&#34;&gt;Date&lt;/h2&gt;
&lt;p&gt;Represents a date or date/time, of any precision from year to second.&lt;/p&gt;
&lt;h2 id=&#34;auto-generated-number-sequence&#34;&gt;Auto-generated number sequence&lt;/h2&gt;
&lt;p&gt;The value of this field will be generated automatically, incremented by one each time a record is created.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sequence numbers are never rolled back, even on the deletion of a record, so they can&amp;rsquo;t be used if a gapless assignment of numbers is required. To accomplish that, calculate a value with a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#set-from-previous-referenced-field&#34;&gt;cross-referenced field&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;relation&#34;&gt;Relation&lt;/h2&gt;
&lt;p&gt;Adding a relation creates a link from one table to another. For example, a contacts table may contain a relation linking to an organisations table, to allow a person to belong to an organisation. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/&#34;&gt;relational database concepts&lt;/a&gt; for further info.&lt;/p&gt;
&lt;h2 id=&#34;checkbox&#34;&gt;Checkbox&lt;/h2&gt;
&lt;p&gt;Represents a boolean (true or false) value.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Text Field Options</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-options/text-field-options/</guid>
      <description>
        
        
        &lt;h2 id=&#34;colour-words&#34;&gt;Colour words&lt;/h2&gt;
&lt;p&gt;When this field is included in a view, highlight it with a colour if the content is one of a number of words. The most up-to-date values to be highlighted are shown in the administrator interface, but as of the latest update of this page, they are&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/word-colours.png&#34; alt=&#34;Word Colours&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Text calculations can also be coloured based on the same words - see the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/calculations/#colouring&#34;&gt;calculation options&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Words will also automatically be coloured when a &amp;lsquo;radio button&amp;rsquo; style is used for a field, i.e. when&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lsquo;use dropdown&amp;rsquo; is ticked&lt;/li&gt;
&lt;li&gt;&amp;lsquo;use only given values&amp;rsquo; is ticked&lt;/li&gt;
&lt;li&gt;there are three or fewer values to choose from&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;swap-colours&#34;&gt;Swap colours&lt;/h2&gt;
&lt;p&gt;When words are coloured (see above), &amp;lsquo;yes&amp;rsquo; will usually be coloured green and &amp;rsquo;no&amp;rsquo; red etc. However depending on the field name or question being asked, you may want to swap the colours.&lt;/p&gt;
&lt;p&gt;For example, for a field &amp;lsquo;Passport Checked&amp;rsquo;, you might want yes to be green, but for a field &amp;lsquo;Dangerous Substances Detected&amp;rsquo;, yes should be red and no should be green. In that case, use this option to swap the colours.&lt;/p&gt;
&lt;p&gt;The words that will have colours swapped by this option are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;yes / no&lt;/li&gt;
&lt;li&gt;true / false&lt;/li&gt;
&lt;li&gt;low / high&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;use-dropdown&#34;&gt;Use dropdown&lt;/h2&gt;
&lt;p&gt;Rather than a simple text entry field, display a dropdown of choices from which one can be selected. If there are only a few values, then the user interface may display options in &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio&#34;&gt;radio button&lt;/a&gt; style, but the behaviour is exactly the same.&lt;/p&gt;
&lt;p&gt;Options can be provided by entering a comma separated list into the &lt;a href=&#34;#values&#34;&gt;value(s)&lt;/a&gt; setting as below. If no options are specified, then the list of options will be automatically generated from the set of unique values &lt;strong&gt;already entered&lt;/strong&gt; into records. In this way, a set of values will gradually grow as people enter new data.&lt;/p&gt;
&lt;p&gt;See also the &lt;a href=&#34;#use-only-given-values&#34;&gt;Use only given values&lt;/a&gt; option below to enforce the use of provided values only.&lt;/p&gt;
&lt;h2 id=&#34;use-tags&#34;&gt;Use tags&lt;/h2&gt;
&lt;p&gt;Similar to Use dropdown, but rather than only letting the user select one value, multiple values can be chosen at once.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An example use may be selecting countries of origin for an ingredient, where it may come from different countries (perhaps via different suppliers).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The list of available options is specified in exactly the same way as for dropdowns above.&lt;/p&gt;
&lt;h2 id=&#34;use-only-given-values&#34;&gt;Use only given values&lt;/h2&gt;
&lt;p&gt;If a dropdown or tags list is used as above, ticking this option enforces the use of one of the provided values.&lt;/p&gt;
&lt;p&gt;If it&amp;rsquo;s un-ticked, then an &amp;lsquo;add new entry&amp;rsquo; option will be available for users to manually add values which aren&amp;rsquo;t yet in the list. Added values will be visible to all.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In some circumstances, it can be useful to leave this un-ticked and let options grow organically, until a certain point. Administrators can then rationalise and &amp;lsquo;hard-code&amp;rsquo; values from the most commonly entered. In other situations, it may be best to specify available options right from the start.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;values&#34;&gt;Value(s)&lt;/h2&gt;
&lt;p&gt;For basic text fields, i.e. not those which display as dropdowns or tag lists (see below), this simply provides a default value to set the field to when a new record&amp;rsquo;s created. If not provided, the field value will be blank on creation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Field defaults can also be calculated, with a simple or arbitratily complex calculation. To do that, instead use the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#set-from-previous-referenced-field&#34;&gt;Set from previous referenced field&lt;/a&gt; option.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;specifying-dropdown-lists-and-tags-fields&#34;&gt;Specifying dropdown lists and tags fields&lt;/h3&gt;
&lt;p&gt;If either &lt;a href=&#34;#use-dropdown&#34;&gt;Use dropdown&lt;/a&gt; or &lt;a href=&#34;#use-tags&#34;&gt;Use tags&lt;/a&gt; is selected, the value(s) option provides a &lt;strong&gt;list&lt;/strong&gt; of options with which to populate the dropdown, or a set of tags to choose from. Enter each option here separated by commas.&lt;/p&gt;
&lt;p&gt;If the list &lt;strong&gt;starts with&lt;/strong&gt; a comma, that means the field should be blank by default when a record is created. If not, then the default will be the first value in the comma separated list.&lt;/p&gt;
&lt;p&gt;In the dropdown/tags list, the options will be ordered alphabetically, not shown in the order they&amp;rsquo;re entered in. If you wish to give the values a particular order, you can prefix them with a number or letter followed by a closing bracket like so: &lt;code&gt;1) cold, 2) warm, 3) hot&lt;/code&gt;. The number prefixes won&amp;rsquo;t show to the user.&lt;/p&gt;
&lt;h4 id=&#34;customising-the-list-of-options-per-user&#34;&gt;Customising the list of options per user&lt;/h4&gt;
&lt;p&gt;As well as entering a default set of options for dropdowns and tags fields as above, it&amp;rsquo;s possible to add options which will only be visible to certain users, specifically those in a certain role.&lt;/p&gt;
&lt;p&gt;The way to add an option which will only be visible to users of a role is to add &lt;code&gt;|rolename&lt;/code&gt; after the option, that is a vertical bar followed by the name of the role.&lt;/p&gt;
&lt;p&gt;For example, setting the list of options to&lt;/p&gt;
&lt;p&gt;&lt;code&gt;1) not billed, 2) awaiting payment, 3) paid|finance&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;will mean that anyone will be able to set the field to &lt;code&gt;1) not billed&lt;/code&gt; or &lt;code&gt;2) awaiting payment&lt;/code&gt; but only members of the finance role will be able to see and set the &lt;code&gt;3) paid&lt;/code&gt; option (once it has been set, it will be visible to everyone).&lt;/p&gt;
&lt;h4 id=&#34;lists-of-users&#34;&gt;Lists of users&lt;/h4&gt;
&lt;p&gt;Also for dropdown lists and tags fields, Agilebase can generate dropdown contents based on a list of users and/or roles in the system. To do that, select &lt;code&gt;users&lt;/code&gt; or &lt;code&gt;users and roles&lt;/code&gt; from the &amp;lsquo;fill with&amp;rsquo; selector just below the value(s) input. The standard user ID format throughout the system is used, &amp;lsquo;Forename Surname (username)&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;Only users/roles which have privileges to view the data in this particular table will be shown in the list. That can keep things manageable if a system has hundreds or more users.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An example use would be assigning an account manager to a customer, selecting from a list of staff members (who are users).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When a user is selected in this way, more options for use are opened up, such as automatically emailing the selected person when there&amp;rsquo;s a status change or something is overdue for example. Agilebase can look up the user&amp;rsquo;s email address to accomplish this, See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-email/&#34;&gt;email workflows&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;When using &amp;lsquo;fill with users&amp;rsquo;, the list of users to appear in the dropdown can further be narrowed down by role if required. To do that, enter the text&lt;/p&gt;
&lt;p&gt;&lt;code&gt;_users|role1,role2,role3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;i.e. &lt;code&gt;_users&lt;/code&gt; followed by a vertical bar and then a comma separated list of role names. Only users which appear in one or more of the named roles will appear.&lt;/p&gt;
&lt;p&gt;If you want a field to auto-populate with the ID of the currently logged in user, enable both this option and the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#required&#34;&gt;required&lt;/a&gt; field option.&lt;/p&gt;
&lt;h2 id=&#34;text-case&#34;&gt;Text case&lt;/h2&gt;
&lt;p&gt;Convert people&amp;rsquo;s input into the required case as it&amp;rsquo;s entered - choose from&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;lowercase&lt;/li&gt;
&lt;li&gt;UPPERCASE&lt;/li&gt;
&lt;li&gt;Title Case&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;size&#34;&gt;Size&lt;/h2&gt;
&lt;p&gt;If &amp;lsquo;short&amp;rsquo; is chosen, a standard single line input box is displayed.&lt;/p&gt;
&lt;p&gt;If &amp;rsquo;large&amp;rsquo; is chosen, a multi-line text entry box is shown. This option also lets people format the text entered, such as using &lt;strong&gt;bold&lt;/strong&gt;, &lt;em&gt;italics&lt;/em&gt; or bullet points. For data security reasons, only certain formatting is allowed.&lt;/p&gt;
&lt;h2 id=&#34;use-as-record-title&#34;&gt;Use as record title&lt;/h2&gt;
&lt;p&gt;The user interface has the ability to highlight the importance of certain fields by showing their contents in large font at the top of the record data. For example, a Company Name field may be the record title for an organisation record.&lt;/p&gt;
&lt;p&gt;This option can be selected for multiple fields in a table. In that case, the first field will be the main title, others will appear as subtitles.&lt;/p&gt;
&lt;h3 id=&#34;preventing-duplicates&#34;&gt;Preventing duplicates&lt;/h3&gt;
&lt;p&gt;Enabling the &amp;lsquo;use as record title&amp;rsquo; option also has the effect of enabling duplicate detection. The system will detect when a value is entered that is close to an existing value in the system. Any &amp;lsquo;close&amp;rsquo; values that are found are displayed as links to the relevant records.&lt;/p&gt;
&lt;p&gt;This can be useful when e.g. entering company names. Although a field can be marked &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#unique&#34;&gt;unique&lt;/a&gt; to prevent exact duplicates, that won&amp;rsquo;t pick up near matches, which this duplicate detection will. For example, &amp;lsquo;The Universoty Of Bristol&amp;rsquo; and &amp;lsquo;University Of Bristol (UOB)&amp;rsquo; will be detected as close matches, or &amp;lsquo;Agilebase&amp;rsquo; and &amp;lsquo;Agilebase Ltd&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;The system uses &lt;a href=&#34;https://www.postgresql.org/docs/current/pgtrgm.html&#34;&gt;trigram matching&lt;/a&gt; to detect similar values.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: 5. Cross References and Automations</title>
      <link>https://docs.agilebase.co.uk/guides/guide1-crm/cross-reference-and-automations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.agilebase.co.uk/guides/guide1-crm/cross-reference-and-automations/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Learning Aim:&lt;/strong&gt;   Using Cross Reference (Xref) fields in a table definition to display related info. Introduce WorkFlows (Buttons, sending emails, document generation). Being organised by using a naming convention!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; User to have watched “Add a Sales Pipeline” and “Introducing calculated” video. Understand how to create calculations in views.&lt;/p&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;This part of the guide starts to introduce some more powerful and advanced features of the agileBase system. It looks at how we can give users of our basic CRM some power ups that make it a better user experience. Let’s continue with our Sales Opportunities and introduce the concept of cross referencing data before adding an automated email ‘reminder’ and a button to the user interface…&lt;/p&gt;
&lt;p&gt;[guide 1.5 - video 1]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/2fCRaTfsE60&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;getting-things-ready&#34;&gt;Getting things ready&lt;/h2&gt;
&lt;p&gt;As a system starts to get bigger it helps to organise the &amp;ldquo;behind the scenes&amp;rdquo; views as much as the tiles and views that out users interact with. It is good practice to create a collection of System Tiles where you can file the &amp;ldquo;behind the scenes&amp;rdquo; work.&lt;/p&gt;
&lt;p&gt;We would suggest the following tiles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;System - Cross Reference&amp;rdquo; for the lookup style views that will add data to our forms&lt;/li&gt;
&lt;li&gt;&amp;ldquo;System - Workflow&amp;rdquo; for the automations&lt;/li&gt;
&lt;li&gt;&amp;ldquo;System - Visibility&amp;rdquo; for the rules that control the visibility of specific User Interface items&lt;/li&gt;
&lt;li&gt;&amp;ldquo;System - Tabs&amp;rdquo; for the views that control the list of child items seen on a forms tab&lt;/li&gt;
&lt;li&gt;&amp;ldquo;System - General&amp;rdquo; for everything else&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;adding-look-up-data-to-a-form&#34;&gt;Adding Look Up data to a Form&lt;/h2&gt;
&lt;p&gt;In this first example we want to show the user who the owner of the company is rather than letting the user set it.&lt;/p&gt;
&lt;p&gt;Start from the Tiles interface, and enter the build interface.&lt;/p&gt;
&lt;p&gt;We first need to build a view that will look up the data for us.&lt;/p&gt;
&lt;p&gt;Find the Sales Opportunity table, click to Edit, navigate to Names and Views, and Create a new view (with out all fields) in the Tile called ‘System - Cross Referenced’&amp;hellip; Try using the name “xref - Sales Opportunity Organisation Owner”&lt;/p&gt;
&lt;p&gt;To find out who the company owner is we need to navigate the relational database. In this case, UP to the organisation, then DOWN to contacts.&lt;/p&gt;
&lt;p&gt;Add the joins!!!&lt;/p&gt;
&lt;p&gt;Typically, Cross reference views only have a few key fields of information&amp;hellip;&lt;/p&gt;
&lt;p&gt;Add Name, tel and email&lt;/p&gt;
&lt;p&gt;However, we only want contacts that we know are the Owners, so add a filter on the contact role where Role contains &amp;ldquo;Owner&amp;rdquo;&lt;/p&gt;
&lt;p&gt;At this point it&amp;rsquo;s useful to look at the data and judge whether it seems about right&lt;/p&gt;
&lt;p&gt;Now we need to add this data to the Sales Opportunity.&lt;/p&gt;
&lt;p&gt;Go back and Edit the Sales Opportunity table and show the list of fields.&lt;/p&gt;
&lt;p&gt;Add a Cross reference field. This is just a special type of field that needs a little bit more setting up than a regular field.&lt;/p&gt;
&lt;p&gt;Add the new field, name “Company Owner(s)”,  set the type to &amp;lsquo;cross referenced data&amp;rsquo;&lt;/p&gt;
&lt;p&gt;Table to Use: Sales Opportunities&lt;/p&gt;
&lt;p&gt;View to use:  ‘xref - Sales Opportunity Organisation Owner’&lt;/p&gt;
&lt;p&gt;Move it to right place (probably near the top)&lt;/p&gt;
&lt;p&gt;Close the edit, navigate to a Sales opportunity record and see how it looks&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You have a little bit of control how it appears on the form, by choosing ‘Tabular display’ and or the drop down ‘display of fields’&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;automations---sending-an-email&#34;&gt;Automations - sending an email&lt;/h2&gt;
&lt;p&gt;Our second example is going to demonstrate the power of Workflows. We can configure the system to be working when we’re not! We will now add an internal ‘Reminder’ email that will prompt the owner of our Sales opportunities to update their progress.
You can read about this facility at &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-email/&#34;&gt;docs workflows - sending an email&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IMPORTANT NOTE - Whilst Agilebase can be used to send emails, it should NOT be used for marketing purposes. Rather it should be used as a method to notify people about data associated to the system. In this instance we are going to remind people that they have ‘Sales opportunities requiring updates’&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[guide 1.5 - video 2]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/CG4y7jclRK8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;1-starting-from-the-view-of-tiles-enter-the-build-interface&#34;&gt;1. Starting from the view of Tiles, enter the build interface.&lt;/h3&gt;
&lt;p&gt;We first need to create the Workflow that will do all the work for us.&lt;/p&gt;
&lt;p&gt;Find the Sales Opportunity table, click to Edit, navigate to Names and Views, and Create a new view (without all fields) in the Tile called ‘System - Workflows’. We suggest a name like “WF email - Sales opportunities requiring updates”&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Prefixing with WF, along with some text, makes it clear to future developers what action the Workflow performs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2-our-intial-task-is-to-add-all-the-fields-we-wish-to-use-in-the-email&#34;&gt;2. Our intial task is to add all the fields we wish to use in the email&lt;/h3&gt;
&lt;p&gt;Add the join to get the Main contact’s full name&lt;/p&gt;
&lt;p&gt;Add Title, Date of Enquiry, Main Contact, Owner, Last updated&lt;/p&gt;
&lt;h3 id=&#34;3-now-add-the-filters-so-we-only-get-the-records-that-need-chasing&#34;&gt;3. Now Add the filters so we only get the records that need chasing.&lt;/h3&gt;
&lt;p&gt;Obviously we only want to chase Opportunities that have not been updated recently&lt;/p&gt;
&lt;p&gt;Add a filter for Last Updated that is older than 1 week&lt;/p&gt;
&lt;p&gt;We also only want to chase Opportunities that are ‘In Progress’. Our Status field uses a number prefix to make this easy&amp;hellip; Opportunities that still need to be progressed have a prefix number lower than 4, therefore add a second filter for Status Less Than 4&lt;/p&gt;
&lt;h3 id=&#34;4-setup-the-email&#34;&gt;4. Setup the email&lt;/h3&gt;
&lt;p&gt;Click on the &amp;ldquo;Workflow - send emails&amp;rdquo; option on the Left hand Side of the Edit pop-up.&lt;/p&gt;
&lt;p&gt;We are sending an internal ‘email notification’, so click the right hand option&lt;/p&gt;
&lt;p&gt;Set the options much like you would a mailmerge in Word. In agileBase you use the Curly brackets to let the system know where to insert the data (notice the list of fields available to you above the To input field.&lt;/p&gt;
&lt;p&gt;For example we want the &amp;ldquo;To&amp;rdquo; field to be set to {owner}&lt;/p&gt;
&lt;p&gt;Subject can be set to ‘Sales Opp Update needed for {title}‘&lt;/p&gt;
&lt;p&gt;And the Body of the email can be set to&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;‘&lt;/span&gt;Hi {owner}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;You have a Sales opportunity called &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; {Title} &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; {Date of Enquiry} that has &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; been updated since {Last updated}&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Please contact {full name} &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; do what a good salesperson does &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; close the deal&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!!!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Regards
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Agilebase&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;’&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The system will colour the text red if you get any of the merge fields incorrect&lt;/p&gt;
&lt;h3 id=&#34;5-setting-up-the-workflow&#34;&gt;5. Setting up the workflow&lt;/h3&gt;
&lt;p&gt;Set the Workflow to run everyday&lt;/p&gt;
&lt;p&gt;Set the Log send time and choose every 24 hours. Once set to 24hours you can specify a time the workflow should run. Dont forget to log when it sends to a new field called ‘wf_SalesOpDateChaseSent’&lt;/p&gt;
&lt;p&gt;Behind the scenes agileBase has automatically added a filter that means this Workflow will only ever chase once. Whilst this is probably the case in 90% of cases when we chase things by email, in this example we want to chase every 7 days. So we can alter the Filter.&lt;/p&gt;
&lt;p&gt;Navigate to the filters option&lt;/p&gt;
&lt;p&gt;Remove the automatically created filter on ‘wf_SalesOpDateChaseSent’.&lt;/p&gt;
&lt;p&gt;Now, add one back in with ‘wf_SalesOpDateChaseSent’ must be older than a week, and then click the ‘or blank’.&lt;/p&gt;
&lt;p&gt;Finally, if you click on the view title, the display will load in the list of records that the system will email next time the Workflow runs - which should be tomorrow at your specified time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TIPS&lt;/strong&gt;
Go to ‘Properties and options’, and set the ‘Row limit’ to 1&lt;/p&gt;
&lt;p&gt;You’ll see the view only has one item in it.&lt;/p&gt;
&lt;p&gt;If we now go to ‘workflow - edit records’, we can press ‘Run Workflow Now’, and it will only send the one email!&lt;/p&gt;
&lt;p&gt;We can also see evidence of the email being sent in the Logs, recent messages section.&lt;/p&gt;
&lt;p&gt;Now don&amp;rsquo;t forget to go back and remove the Row limit!”&lt;/p&gt;
&lt;h2 id=&#34;a-look-at-the-chaser&#34;&gt;A look at the &amp;ldquo;Chaser&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;The email notification option usually sends a single email per record. The Chaser is a built in feature that is preconfigured to send repeat emails. This is a bigger, more feature rich version of what we just setup. Again, it’s something that runs in the background.&lt;/p&gt;
&lt;p&gt;It’s specifically aimed at automating those emails you send to 3rd parties chasing for specific information. But can also be used for internal chasers&amp;hellip; which is what we are going to demonstrate with a chaser for Outstanding Tasks”&lt;/p&gt;
&lt;p&gt;[guide 1.5 - video 2a]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/bAF7T_Ip2eA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;setting-up-a-chaser&#34;&gt;Setting Up a chaser&lt;/h3&gt;
&lt;p&gt;Go in to development mode and find the Tasks table.&lt;/p&gt;
&lt;p&gt;As we’ve done before add a new view to the workflow tile and call it ‘wf chaser - outstanding tasks’.&lt;/p&gt;
&lt;p&gt;Go to the send emails option and choose the chaser option.&lt;/p&gt;
&lt;p&gt;Click the first tickbox and enable the chaser.&lt;/p&gt;
&lt;p&gt;The system does a lot of the heavy lifting for you, adding fields, and creating the calcs and views needed for it to work, but dont forget to check what time of day you wish the chaser to run.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/workflow_chaser.png&#34; alt=&#34;List of fields created and added by the chaser&#34;&gt;&lt;/p&gt;
&lt;p&gt;You can see in the screeshot above how the system has created several calculations setting things like ‘Chase every’ and ‘escalate after’ and ‘escalate to’ which the system references to control the way the chaser works.&lt;/p&gt;
&lt;p&gt;For more information please visit &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-chaser/&#34;&gt;docs sending a chaser&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At a bare minimum you will need to change who we are sending the email to.&lt;/p&gt;
&lt;p&gt;Edit the “To” calculation and change it to be the “assigned to” user.&lt;/p&gt;
&lt;p&gt;And add the appropriate filters which in this case are when the “Due” date has passed (older than 1 day). And the status is not equal to completed.&lt;/p&gt;
&lt;p&gt;Sepping back and looking at the data returned by the view we can see in its current form the chaser will send an email every 8 days, and after 5 attempts will stop but as we have NOT set the escalate to field no one will be notified that this task has failed to be completed!!!&lt;/p&gt;
&lt;h2 id=&#34;adding-a-button-to-a-form&#34;&gt;Adding a button to a form&lt;/h2&gt;
&lt;p&gt;In this third example we want to add a button to the user interface so that when the Sales Opportunity is won, we want that button to set the status AND log who did it AND when!&lt;/p&gt;
&lt;p&gt;Start from the Tiles interface, and enter the build interface.&lt;/p&gt;
&lt;p&gt;We first need to build a Workflow that will do the actual work of setting the data for us.&lt;/p&gt;
&lt;p&gt;Find the Sales Opportunity table, click to Edit, navigate to Names and Views, and Create a new view (without all fields) in the Tile called ‘System - Workflows’. We suggest a name like “Sales opportunity WON”&lt;/p&gt;
&lt;p&gt;N.b. We have NOT prefixed this workflow and the name of the view will be what the user sees on the form&amp;rsquo;s interface&lt;/p&gt;
&lt;p&gt;[guide 1.5 - video 3]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/QkkFtW2CpuU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;1-setting-data&#34;&gt;1. Setting DATA&lt;/h3&gt;
&lt;p&gt;For our workflow to set data we need to create a calculation.&lt;/p&gt;
&lt;p&gt;We learnt how to create calculations in a previous video&lt;/p&gt;
&lt;p&gt;In this case we want a ‘text’ calculation.&lt;/p&gt;
&lt;p&gt;It is essential that we use the same name as the field we wish to set. In this case ‘Status’.&lt;/p&gt;
&lt;p&gt;The correct way to write SQL for Text fields involves using single quotes to hold our value. It is also important that we set the field to be the right option in our Status drop down -  in this case it must include the number prefix. Set the calculation value to be&amp;hellip;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;‘4) Won’ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We also want to set WHO closed the Sales Op. This is another text field but this time the destination field is called ‘closed by’.”&lt;/p&gt;
&lt;p&gt;We can use a special bit of SQL called a variable to find out who is logged in.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/calculation_variables.png&#34; alt=&#34;List of variables avaialble to a calculation&#34;&gt;&lt;/p&gt;
&lt;p&gt;From the list above we can see we need our calculation text to be&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ab_userid()
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-setting-up-the-workflow&#34;&gt;3. Setting up the WORKFLOW&lt;/h3&gt;
&lt;p&gt;Finally we need to turn this view into a Workflow that does something!&lt;/p&gt;
&lt;p&gt;If we choose the workflow - edit records section we can change the Action to ‘Update the Matching Sales Opportunity’&lt;/p&gt;
&lt;p&gt;We can use the fact that the system needs to store the date it perfomed the action by setting &amp;ldquo;log update to&amp;rdquo; to the exisitng &amp;ldquo;Closed date” field&lt;/p&gt;
&lt;p&gt;We will leave Frequency as ‘Manual’ as we want the user to use a button to fire this workflow&lt;/p&gt;
&lt;h3 id=&#34;adding-the-button-to-the-ui&#34;&gt;Adding the Button to the UI&lt;/h3&gt;
&lt;p&gt;At last we are ready to add the button to the user interface&lt;/p&gt;
&lt;p&gt;Go back to Edit Sales opportunity table and show the list of fields&lt;/p&gt;
&lt;p&gt;Buttons are just Cross reference Fields that are setup to be workflows&lt;/p&gt;
&lt;p&gt;Add the new field to the table&amp;hellip; name “BTN - Sales Op WON”,  type cross referenced data&lt;/p&gt;
&lt;p&gt;Table to Use: Sales Opportunities&lt;/p&gt;
&lt;p&gt;View to use:  ‘Sales Op WON’&lt;/p&gt;
&lt;p&gt;Move it to right place, probably near the bottom, and see how it looks&lt;/p&gt;
&lt;h3 id=&#34;hiding-the-button-when-we-dont-want-it&#34;&gt;Hiding the button when we dont want it!!!&lt;/h3&gt;
&lt;p&gt;First of all try pressing the button&lt;/p&gt;
&lt;p&gt;You can see that the status is now Won&lt;/p&gt;
&lt;p&gt;However, at the moment, even though the button has been pressed and we’ve set the status to Won we can still press the button again!!!&lt;/p&gt;
&lt;p&gt;To stop this we need to apply a visibility rule to that button to hide it. In this case we want the button to be hidden if the sales opportunity is already marked as Won.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/button_visibility_rule.png&#34; alt=&#34;Visibility rule added to the field&#34;&gt;&lt;/p&gt;
&lt;p&gt;Go back to Edit Sales opportunity table, show the list of fields and click to edit the BTN field&lt;/p&gt;
&lt;p&gt;Scroll down a little and you can see the section about Field Visibility.&lt;/p&gt;
&lt;p&gt;Simply set the filter required - In our case this means the status value is less than 4 as seen in the screenshot above.&lt;/p&gt;
&lt;h2 id=&#34;other-types-of-automations&#34;&gt;Other types of Automations&lt;/h2&gt;
&lt;p&gt;There are several other types of automations&amp;hellip; we’ve already seen sending emails in this guide, but you can also create new records and generate PDFs. If you are interested please take a look at our other guides linked below and the associated documentation&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-chaser/&#34;&gt;List of different types of workflows&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Guides: 6. Security and Access Control</title>
      <link>https://docs.agilebase.co.uk/guides/guide1-crm/security-and-access-control/</link>
      <pubDate>Thu, 31 Aug 2023 13:00:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/guides/guide1-crm/security-and-access-control/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Learning Aim:&lt;/strong&gt;   Understand basic database privileges&amp;hellip; Roles and giving them to Users!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; To have built a multi table system, to have more than themselves as users.&lt;/p&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;AgileBase uses the classic concept of Roles to help you control the access users have to the system you are building.
A classic metaphor would be the manager of an office has the keys to the building, whilst the staff do not. The person acting as the manager may change overtime, but the permission and privileges (in this case having keys) does not!&lt;/p&gt;
&lt;p&gt;[guide 1.6 - video 1]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ybixmV1TdVA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;creating-roles&#34;&gt;Creating Roles&lt;/h2&gt;
&lt;p&gt;For our scenario of a Basic CRM we will model the simple situation that all users will need to access contact information, but only some users will log tasks. Similarly, only some users will access sales opportunities.
We can start by creating a Role called ‘Orgs and Contacts’
Press Add Role and name it ‘Orgs and Contacts’
Start by looking at the Privileges list. As you can see this shows you a list of ALL the tables in the system. We want users with this role to be able to read and importantly WRITE any organisation info.
Set the radio button Edit on Organisations, Sites and Contacts
&lt;img src=&#34;https://docs.agilebase.co.uk/roles-privileges.png&#34; alt=&#34;The Roles privilege list&#34;&gt;
Now look at the Members option. We can give this permission to all our users.&lt;/p&gt;
&lt;p&gt;For our Basic CRM we will need to do the same for a role to use Tasks and another for Sales Opportunites&lt;/p&gt;
&lt;h3 id=&#34;user-roles-permissions-and-tiles&#34;&gt;User Roles, Permissions and Tiles&lt;/h3&gt;
&lt;p&gt;Now to take a look from a User&amp;rsquo;s perspective.
Back to the starting page of Development mode and click Users to show ALL users
Click on a user&amp;rsquo;s record
If we click on the Roles option, we can see any roles the user may be missing.
Simple click to add
&lt;img src=&#34;https://docs.agilebase.co.uk/user-roles.png&#34; alt=&#34;The Roles privilege list&#34;&gt;
Sometimes it&amp;rsquo;s useful to see an individual’s permissions. This can be done by looking at the Privileges tab on their user record.&lt;/p&gt;
&lt;p&gt;Perhaps, more useful is ensuring they have the tile to access the functionality!!!
Click on Tiles and you can see whether they have our Sales opportunity tile.
When you add a tile you are prompted to choose the default view. It is an important consideration to choose the most appropriate view for your users.
&lt;img src=&#34;https://docs.agilebase.co.uk/user-adding-tile.png&#34; alt=&#34;The Roles privilege list&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;advanced-access-control&#34;&gt;Advanced Access Control&lt;/h2&gt;
&lt;p&gt;Sometimes we may find a situation where access control can not be broken down to complete tables, but instead we want to have control on a field by field basis. In this instance we can use field visibility rules combined with the roles system.
In our example scenario we have a role called “HR” and we only want ONLY users with this role to see a Date of Birth field on the Contact record.&lt;/p&gt;
&lt;p&gt;[guide 1.6 - video 1]
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/MEFep-NFl1o&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;We need to create a view that will control the visibility of the field, so we create a view in the &amp;ldquo;System Visibility Tile”&lt;/p&gt;
&lt;h3 id=&#34;field-visibility-and-user-roles&#34;&gt;Field Visibility and User Roles&lt;/h3&gt;
&lt;p&gt;We have already had an exmaple of using a visibility rule to hide a button. In this case we are going a step further and controlling visibility based on the logged in User&amp;rsquo;s roles.
To start we will need a view called ‘vis - Contact HR only’ built rom the Contacts table.
Since Field Visibility rules work by only showing the field if the record exists in a specified view we don’t need loads of columns, we just need to concentrate on filtering. For this example we need to filter by the Role the user has, and we can do this by using a calculation.
Add a Calculation field of type boolean called ‘is in HR’. The SQL you need is&amp;hellip;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  ab_userroles() ilike &amp;#39;%HR%&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It is easy to follow if you have an understanding of SQL, if not there is plenty of help and tutorials on the internet. However, as a brief explanation, aB_userroles() is a variable that will return the list of roles that the logged in user is a member of. Ilike is a text match that looks for in this case the letters HR. In otherwords, this query will let us know is the user is a member of the HR role.
Dont forget to apply the filter by going to the fiter option and adding where &amp;ldquo;is in HR&amp;rdquo; equals True&lt;/p&gt;
&lt;p&gt;All that&amp;rsquo;s left to do is apply the visibilty rule to the chosen field. In this example, navigate to edit the Contacts table, Click on the DOB field.
Scroll down to Field Visibility, show choosing the view ‘vis - Contact HR only’&lt;/p&gt;
&lt;h2 id=&#34;success---a-basic-crm&#34;&gt;SUCCESS - A basic CRM&lt;/h2&gt;
&lt;p&gt;If you have been following along and building your own system then congratulations you have a fledging CRM system for your business. You now have knowledge of the all the building blocks needed to extend this tool and turn it into a powerful back office system to help your colleagues manage their work.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Relation Field Options</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-options/relation-field-options/</link>
      <pubDate>Tue, 12 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-options/relation-field-options/</guid>
      <description>
        
        
        &lt;p&gt;Relations between tables are the &amp;lsquo;glue&amp;rsquo; that holds together an application built using Agilebase. If you&amp;rsquo;d like to learn more about this fundamental concept, please check out the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/&#34;&gt;relational database concepts&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Some of the options for a relation field determine the nature of the links between tables, which can have a great effect on how an app works, so it&amp;rsquo;s very useful to know about them.&lt;/p&gt;
&lt;h2 id=&#34;one-to-one-only&#34;&gt;One to one only&lt;/h2&gt;
&lt;p&gt;By default, a relation is a &amp;lsquo;many to one&amp;rsquo;. For example if a relation field in a contacts table links to an organisation, that organisation can have many contacts linked. If an ingredient links to a recipe, that recipe can have many ingredients. One customer can have many orders - examples are numerous.&lt;/p&gt;
&lt;p&gt;If a relation is marked as &amp;lsquo;one to one only&amp;rsquo;, then that behaviour is changed so that only one &amp;lsquo;child&amp;rsquo; record of this type is allowed for a particular &amp;lsquo;parent&amp;rsquo; record.&lt;/p&gt;
&lt;p&gt;When is this useful?&lt;/p&gt;
&lt;p&gt;Take the case of an ingredient record. You may want to record nutritional information, chemical composition and allergens for example. With each type of date stored in a separate table, linked by a one-to-one relation, these can be separated out on the screen into &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/&#34;&gt;tabs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The advantages of doing that, as opposed to just adding all the fields into different blocks in a single table are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The user interface becomes clearer to navigate, especially if you have dozens of fields in each section&lt;/li&gt;
&lt;li&gt;Different privileges can easily be assigned to different tables. For example, you may want only certain people to be able to update allergen information, with others able to view but not edit the data.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;do-not-auto-populate&#34;&gt;Do not auto-populate&lt;/h2&gt;
&lt;p&gt;This is ticked by default. When un-ticked, this means that when you add a new record, the relation field will automatically be populated with a link to the last &amp;lsquo;parent&amp;rsquo; item you were looking at. For example, if you edit an organisation, then move away somewhere else in the system, finally load a contacts screen and create a new contact, that contact will link to the organisation you were editing (assuming there&amp;rsquo;s a relation field linking contacts and organisations).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/sequence-field-options/&#34;&gt;similarly named option&lt;/a&gt; exists for sequence fields, to prevent auto-population of sequence numbers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;on-parent-delete&#34;&gt;On parent delete&lt;/h2&gt;
&lt;p&gt;This is an important option for controlling what happens when a parent record is deleted.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s assume we have a table of customers and one of invoices, each invoice linked to a customer by a relation field in the invoices table, so the invoice is a &amp;lsquo;child record&amp;rsquo; of the customer. What would happen if a customer is deleted? This setting controls that and there are three options.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;disallow deletion (the default)
&lt;ul&gt;
&lt;li&gt;the user is prevented from deleting the parent record. They have to manually delete the child record before being allowed to delete the parent.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;This is the safest option and the default&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;cascade delete
&lt;ul&gt;
&lt;li&gt;the user is allowed to delete the parent and when the parent is deleted, &lt;strong&gt;child records are deleted as well&lt;/strong&gt;. The user is still shown a prompt asking if they&amp;rsquo;re sure they want to do this.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;make orphan
&lt;ul&gt;
&lt;li&gt;when the parent is deleted, the child record is retained, but un-linked from the parent. In our invoice/customer example, we would be left with an invoice not linked to any particular customer&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that this option is set on the &lt;em&gt;child&lt;/em&gt; relation field, not on the parent side. Therefore you can have different rules for different child tables. A good practice is to set this to &lt;em&gt;disallow deletion&lt;/em&gt; for any important information in the system, that you wouldn&amp;rsquo;t want to be lost (like invoices) and for other tables choose one of the other options appropriately.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;value-to-display&#34;&gt;Value to display&lt;/h2&gt;
&lt;p&gt;The field from the parent table that easily identified the record, to show in the child editing form. For example, for the &amp;lsquo;company&amp;rsquo; relation field in a contacts table, you might select &amp;lsquo;company name&amp;rsquo;.&lt;/p&gt;
&lt;h2 id=&#34;secondary-value-to-display&#34;&gt;Secondary value to display&lt;/h2&gt;
&lt;p&gt;For additional context, a secondary identifying field from the parent record can be chosen. For example, as well as the name of a company, you may want to show the city or country they&amp;rsquo;re in.&lt;/p&gt;
&lt;p&gt;This field doesn&amp;rsquo;t have to be directly from the parent table, it can also be any field in the &lt;strong&gt;view to use&lt;/strong&gt; selected (the below option), including a calculation, which opens up more display possibilities, e.g. concatenating the values from multiple fields together.&lt;/p&gt;
&lt;h2 id=&#34;view-to-use&#34;&gt;View to use&lt;/h2&gt;
&lt;p&gt;When the user is selecting a parent record to link to a particular child, they will be able to use this view to show a list of parent records to choose from. Therefore the view must be created from the parent table.&lt;/p&gt;
&lt;p&gt;They will be able to filter on any field in the view to search for a record.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Using pre-set &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/filters/&#34;&gt;view filters&lt;/a&gt; to narrow down the list of relevant records can be helpful, e.g. if only records of a certain category are required.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;use-only-given-values&#34;&gt;Use only given values&lt;/h2&gt;
&lt;p&gt;When this is un-ticked, allow the user to create a new parent record directly from the child record&amp;rsquo;s editing screen. Relation fields allow you to type the name of a parent record to find and select one. If no matches are found, a prompt will appear allowing the user to create one.&lt;/p&gt;
&lt;h2 id=&#34;show-navigation-link&#34;&gt;Show navigation link&lt;/h2&gt;
&lt;p&gt;When this is ticked (as it is by default), allow the user to navigate from a record containing this field to the one that the relation links to. For example, if a contacts table contains a relation to the organisations table, then when a user views a contact, allow them to navigate to the related organisation by clicking a navigation icon next to the field.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Tabs</title>
      <link>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/</link>
      <pubDate>Mon, 04 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/</guid>
      <description>
        
        
        &lt;p&gt;Tabs are one way of exposing relationships between tables, to allow the user to navigate the structure of an application. For example, in a companies table, a contacts tab may show all the people employed at that particular company.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The user interface can display more than two levels of structure on screen in other ways (e.g. showing a menu in a tab) and wherever the user is, they can navigate up or down the hierarchy of data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;adding-a-tab&#34;&gt;Adding a tab&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/adding-and-removing/#editing-a-table&#34;&gt;Edit the table&lt;/a&gt; you wish to add a tab to&lt;/li&gt;
&lt;li&gt;In the &amp;rsquo;tabs&amp;rsquo; panel, select a &amp;lsquo;child table&amp;rsquo; in the &lt;em&gt;Add a tab&lt;/em&gt; dropdown&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;tab-types&#34;&gt;Tab types&lt;/h2&gt;
&lt;p&gt;There are two types of tab, those which show a &lt;strong&gt;single record&lt;/strong&gt; and those which show &lt;strong&gt;multiple records&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The type used depends on the relation field in the child table used in the tab, which links to the main table. If it is &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/relation-field-options/#one-to-one-only&#34;&gt;one-to-one&lt;/a&gt;, then a single record is shown in the tab. If it&amp;rsquo;s &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/table-layouts/&#34;&gt;one to many&lt;/a&gt;, then a view appears embedded in the tab, with which the user can choose a record to edit.&lt;/p&gt;
&lt;p&gt;A one to one example may be showing a tab of specification information against an ingredient for example.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/tab-one-to-one.png&#34; alt=&#34;one to one tab&#34;&gt;&lt;/p&gt;
&lt;p&gt;A one to many may be a list of suppliers who supply that ingredient.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/tab-one-to-many.png&#34; alt=&#34;one to many tab&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;tab-options&#34;&gt;Tab options&lt;/h2&gt;
&lt;p&gt;Typically, these options are only needed to finnesse an application. They can be useful to look at once the core of the structure is built.&lt;/p&gt;
&lt;h3 id=&#34;tab-view&#34;&gt;Tab view&lt;/h3&gt;
&lt;p&gt;For one to many tabs, which &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;view&lt;/a&gt; to use to show items. By creating a specific view to use for the tab, you can control which fields are displayed in which order, add calculations, filter those which are shown etc.&lt;/p&gt;
&lt;p&gt;To use a view as a tab view, it must contain the row ID field of the parent table i.e. the table the tab is present in.&lt;/p&gt;
&lt;p&gt;If the view contains one or more charts, those charts will also be shown when opening the tab, filtered to show only data for the parent record containing the tab (in the same way that the records to display in the tab are filtered).&lt;/p&gt;
&lt;h3 id=&#34;populate-from-template&#34;&gt;Populate from template&lt;/h3&gt;
&lt;p&gt;Under a tab, a button allows the user to add records. For example in the contacts tab of an organisation, they would be able to add a new contact.&lt;/p&gt;
&lt;p&gt;However, in some situations you want to pre-populate the tab with records, rather than make the user create each one manually. An example might be order lines for a customer order in a telesales system. The order lines could be initially pre-populated with regular items the customer orders.&lt;/p&gt;
&lt;p&gt;One way of doing that is to use the &amp;lsquo;Populate from template&amp;rsquo; view, first creating a new view to use for this purpose. The view must contain the record ID field of the parent table (e.g. customer orders in our example). When the user clicks on the tab, if there are no records present yet, it will prompt to populate the tab. Each row from the view where the record ID matches that of the parent record (cutomer order) will be used to create a record in the tab.&lt;/p&gt;
&lt;p&gt;Any calculations in the view &lt;strong&gt;with the same name&lt;/strong&gt; as a field in the tab table will be used to populate values in the records.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Another way of auto-populating data is to use a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/#when-a-records-created-run-this-workflow&#34;&gt;workflow which runs on record creation&lt;/a&gt; or in the background. You can choose whichever method works best for a particular purpose.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;show-only-if-in-view&#34;&gt;Show only if in view&lt;/h3&gt;
&lt;p&gt;This option allows you to control tab visibility - whether the tab is visible on screen or not at any time depends on whether the main record appears in the view chosen. This works exactly the same way as &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/#show-if-record-in-view&#34;&gt;field visibility&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;colour-from-view&#34;&gt;Colour from view&lt;/h3&gt;
&lt;p&gt;The colour of each tab can be chosen. For example, different steps of a process may each be represented by a tab. Once a step is complete, the tab may be coloured green.&lt;/p&gt;
&lt;p&gt;To set this up, create a view from the main (parent) table. It should contain a text calculation called &amp;lsquo;colour&amp;rsquo; which outputs the name of a colour e.g. green, or a blank value for no colour. The colour names are the same as those for &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/#flag-records-with-colour&#34;&gt;record flagging&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;name&#34;&gt;Name&lt;/h3&gt;
&lt;p&gt;By default the tab is named the same as the table used. However, you can override that here.&lt;/p&gt;
&lt;h3 id=&#34;use-inline-editing&#34;&gt;Use inline editing&lt;/h3&gt;
&lt;p&gt;Speed up intensive data entry by allowing each field in the tab view to be edited inline. Here&amp;rsquo;s an example using an order processing system.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/tab-inline-edit.png&#34; alt=&#34;tab inline editing&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;show-relation-fields&#34;&gt;Show relation fields&lt;/h3&gt;
&lt;p&gt;If this is un-ticked (which it is by default), any relation fields in the tab table will be hidden. This can be useful if you want to reduce the complexity exposed to the user. They can load all data including relations by navigating to the full record.&lt;/p&gt;
&lt;h3 id=&#34;choose-a-record-when-a-new-item-is-added&#34;&gt;Choose a record when a new item is added&lt;/h3&gt;
&lt;p&gt;Used when a tab shows a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/relational-database-concepts/#a-more-complex-example&#34;&gt;join (also called a junction) table&lt;/a&gt;. To continue the example from that page, when adding a link between supplier and raw materials, if the raw materials table had a tab showing links, this option would cause the user to be immediately prompted for a supplier when adding a link.&lt;/p&gt;
&lt;h3 id=&#34;accept-emails-from-parent-table&#34;&gt;Accept emails from parent table&lt;/h3&gt;
&lt;p&gt;Redirect any incoming emails to the parent table to be stored in this tab. See &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/options/#accept-emails-to-this-address&#34;&gt;table options&lt;/a&gt; for details of receiving emails.&lt;/p&gt;
&lt;h2 id=&#34;multiple-tabs-for-the-same-table&#34;&gt;Multiple tabs for the same table&lt;/h2&gt;
&lt;p&gt;A final note about tabs. In a small number of cases, one table A may have two relations to the &lt;strong&gt;same&lt;/strong&gt; table B. For example, a record of a contract between two parties may have a relation to the customer and supplier, both of which are records in an organisations table.&lt;/p&gt;
&lt;p&gt;In this case, you may want to add two tabs to the organisations table, one to show contracts for which a particular organisation is a customer, another for which they are a supplier.&lt;/p&gt;
&lt;p&gt;You can do that - just add two tabs for the same table. The system will use the first relation it finds for the first tab, the second for the next.&lt;/p&gt;
&lt;p&gt;Another example is a recursive Bill Of Materials (BOM) system where a join table may link to a parent item and a child item.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: To grandchild records</title>
      <link>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/to-grandchild-records/</link>
      <pubDate>Mon, 04 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/to-grandchild-records/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/&#34;&gt;Tabs&lt;/a&gt; allow navigation from a parent record to a child, e.g. an organisation to a contact, order to order line, recipe to ingredient etc.&lt;/p&gt;
&lt;p&gt;Of course, that child record may itself have subsidiary records of its own, e.g. a contact may have a tab for their training records.&lt;/p&gt;
&lt;p&gt;When that&amp;rsquo;s the case, Agilebase exposes both tiers of data on screen so the user can jump from the top level, in this example the organisation, directly to a contact&amp;rsquo;s training records.&lt;/p&gt;
&lt;p&gt;This type of navigation manifests in different ways according to the setup.&lt;/p&gt;
&lt;p&gt;If a child links to the parent with a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/relation-field-options/#one-to-one-only&#34;&gt;one-to-one relation&lt;/a&gt; then links to &amp;lsquo;grandchildren&amp;rsquo; are displayed by a menu in a tab. Here&amp;rsquo;s a menu showing the various grandchild items under a product&amp;rsquo;s specification.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/tab-menu.png&#34; alt=&#34;tab menu&#34;&gt;&lt;/p&gt;
&lt;p&gt;If it&amp;rsquo;s a many-to-one, then grandchildren are represented by blocks at the end of the record.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/grandchild-blocks.png&#34; alt=&#34;grandchild blocks&#34;&gt;&lt;/p&gt;
&lt;p&gt;Finally, in the special case when a grandchild tab&amp;rsquo;s tab view contains the ID of both its immediate parent and the parent above that, then the grandchild contents are shown directly, underneath the child record. Here&amp;rsquo;s an example where there&amp;rsquo;s a three tier structure of&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;supplier approval -&amp;gt; risk assessment -&amp;gt; risk assessment scores.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/grandchild-table.png&#34; alt=&#34;grandchild rows&#34;&gt;&lt;/p&gt;
&lt;p&gt;When the user looks at a supplier approval record, the risk assessment summary and scores can both be seen at the same time.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Sensitive data</title>
      <link>https://docs.agilebase.co.uk/docs/tables/sensitive-data/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/sensitive-data/</guid>
      <description>
        
        
        &lt;p&gt;In a table&amp;rsquo;s &lt;em&gt;privacy and security&lt;/em&gt; panel, there are two options which are worth considering if the data is storing commercially sensitive information (plenty of information in most customer systems falls under this category!) or personal information as defined by EU General Data Protection Regulations (GDPR).&lt;/p&gt;
&lt;p&gt;When either option is ticked, two controls appear.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/privacy-and-security.png&#34; alt=&#34;Privacy and security&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;notify-administrators-on-export&#34;&gt;Notify administrators on export&lt;/h2&gt;
&lt;p&gt;Here you can enter a number. When a user exports more than that number of records at once to spreadsheet, all administrators (users with the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/privileges/#assigning-the-administrator-privilege&#34;&gt;administrator&lt;/a&gt; privilege) are notified by email.&lt;/p&gt;
&lt;h2 id=&#34;disallow-exports&#34;&gt;Disallow exports&lt;/h2&gt;
&lt;p&gt;This is also a number, representing a hard limit on the number of records which can be exported from this table at any one time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;See also &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/exporting/&#34;&gt;exporting&lt;/a&gt; for how to set up export privileges. Exports are disallowed by default.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When &lt;strong&gt;This table contains personal data, sensitive data or data about children&lt;/strong&gt; is ticked, a number of additional data entry boxes appear, to let you record the GDPR-relevant considerations.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: This is for informational purposes only and doesn&amp;rsquo;t by itself ensure compliance with the GDPR!. We recommend looking at the &lt;a href=&#34;https://ico.org.uk/for-organisations/guide-to-the-general-data-protection-regulation-gdpr/&#34;&gt;ICO website&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;potential-exfiltration-information&#34;&gt;Potential exfiltration information&lt;/h2&gt;
&lt;p&gt;When either option is ticked, some additional information is shown that can highlight opportunities for data to be exported.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Any API views which send data to third party systems&lt;/li&gt;
&lt;li&gt;Any roles which are set up to allow exporting and which have users with privileges to see the table data&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Date Field Options</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-options/date-field-options/</link>
      <pubDate>Tue, 12 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-options/date-field-options/</guid>
      <description>
        
        
        &lt;h2 id=&#34;accuracy&#34;&gt;Accuracy&lt;/h2&gt;
&lt;p&gt;Whether to record a date as just a year, year and month, year month and day, or with a time: hours, hh:mm, hh:mm:ss.&lt;/p&gt;
&lt;h2 id=&#34;use-current-time-for-new-records&#34;&gt;Use current time for new records&lt;/h2&gt;
&lt;p&gt;If ticked, set the value of this field to the current time when a record is created&lt;/p&gt;
&lt;h2 id=&#34;date-format&#34;&gt;Date format&lt;/h2&gt;
&lt;p&gt;The format to display in views. Note this doesn&amp;rsquo;t affect data entry screens, which use the browser&amp;rsquo;s standard date picker, which may customise to the user&amp;rsquo;s region.&lt;/p&gt;
&lt;h2 id=&#34;min-years-age--max-years-age&#34;&gt;Min. years age / Max. years age&lt;/h2&gt;
&lt;p&gt;These two options specify the valid range of allowable dates for the field. By default values up to 10 years in the future or 100 years in the past are allowed.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Other types of date check can be added using the &lt;a href=&#34;&#34;&gt;Advanced field checks&lt;/a&gt; options for a table&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Separators</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/separators/</link>
      <pubDate>Thu, 07 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/separators/</guid>
      <description>
        
        
        &lt;p&gt;A separator field doesn&amp;rsquo;t actually store any data, but is used as a marker of the start of a block of fields. Create a separator  and move it to just before the field which should be the first in a block.&lt;/p&gt;
&lt;p&gt;Depending on the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/table-layouts/&#34;&gt;table layout&lt;/a&gt;, these blocks will be displayed in different ways, but in all cases will form a distinct group of fields.&lt;/p&gt;
&lt;p&gt;Inline help can be added for separators in the same way as for normal fields, by adding a field description. This help text will apply to the whole block of fields created by a separator.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a system with several&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/blocks-one-expanded.png&#34; alt=&#34;blocks&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Upwards Navigation</title>
      <link>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/upwards-navigation/</link>
      <pubDate>Mon, 04 May 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/upwards-navigation/</guid>
      <description>
        
        
        &lt;p&gt;Whenever a relation field is used in a table, the user has the option to navigate to the related record by clicking a link next to the relation.&lt;/p&gt;
&lt;p&gt;However its useful to know that if the relation is one of the &lt;strong&gt;first fields&lt;/strong&gt; in the table, i.e. at the top of the form, then it will be treated as having greater importance by the user interface. In this case, the relation will appear as a relation heading, making it clear the &amp;lsquo;parent-child&amp;rsquo; relationship i.e. that one record &amp;lsquo;belongs&amp;rsquo; to another.&lt;/p&gt;
&lt;p&gt;For example, in a contacts table, if the relation to a contact&amp;rsquo;s organisation is one of the first fields in the form, the organisation name will appear as a heading for the contact record. It will be a hyperlink so can be used to navigate to the parent organisation easily.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A record can have multiple &amp;lsquo;parents&amp;rsquo; of different types, e.g. a contact may belong to both an organisation and a site or department within that organisation.&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Built In Charting</title>
      <link>https://docs.agilebase.co.uk/docs/charting/built-in-charting/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/charting/built-in-charting/</guid>
      <description>
        
        
        &lt;p&gt;Charting is not strictly an administrator function, as any user can create charts and other data visualisations, such as maps and word clouds.&lt;/p&gt;
&lt;p&gt;However, it&amp;rsquo;s useful for administrators to know how the system works in outline, so they can support users and also because creating charts may be a key part of building an application.&lt;/p&gt;
&lt;p&gt;In Agilebase, charts &amp;lsquo;belong to&amp;rsquo; a view. Each view can have a collection of charts. Users can toggle between viewing data rows and looking at charts based on those rows. When a user filters data using the quick filter boxes at the top of the screen, the data or charts (whichever is shown) will update to match the filtered results.&lt;/p&gt;
&lt;h2 id=&#34;creating-a-chart&#34;&gt;Creating a chart&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;In the tiles interface, open the tile and view to use as a source of chart data&lt;/li&gt;
&lt;li&gt;Click the charts button at the top right of the screen&lt;/li&gt;
&lt;li&gt;Click the &lt;em&gt;add/edit chart or map&lt;/em&gt; button&lt;/li&gt;
&lt;li&gt;Follow each of the steps (1 - 3) on screen to build the chart&lt;/li&gt;
&lt;li&gt;In the last step, give a name to the chart and press &lt;em&gt;save&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When choosing a type of chart in step 3, small previews will be displayed based on some of the chart data. However some chart types may display a message rather than a preview. In this case, the chart data selected in step 1 is not applicable for this chart type.&lt;/p&gt;
&lt;p&gt;For example, if in step 1 we have a count of items per year:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/chart-1.png&#34; alt=&#34;Chart - step 1&#34;&gt;&lt;/p&gt;
&lt;p&gt;then the scatter diagram will work but the bubble chart won&amp;rsquo;t. For the bubble chart, &lt;strong&gt;two&lt;/strong&gt; y-axis measurements are required, one to specify the position of the bubble on the y-axis, plus another to determine the relative size of the bubble.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/chart-bubble.png&#34; alt=&#34;Chart - step 3&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;embedding-charts-in-forms&#34;&gt;Embedding charts in forms&lt;/h2&gt;
&lt;p&gt;Charts can be embedded into tables. When the user opens a record, the chart will automatically filter to show data pertaining to that record only.&lt;/p&gt;
&lt;p&gt;So for example if you have a chart of sales per month per customer, which you embed into a customer table, it will show as sales per month, only for the customer on screen.&lt;/p&gt;
&lt;p&gt;This is accomplished by using a view with chart(s) as a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-types/special-field-types/referenced-data/&#34;&gt;referenced data field&lt;/a&gt; - see that page for setup information.&lt;/p&gt;
&lt;h2 id=&#34;embedding-charts-in-tabs&#34;&gt;Embedding charts in tabs&lt;/h2&gt;
&lt;p&gt;When a tab contains many &amp;lsquo;child&amp;rsquo; records, e.g. an organisation may have a tab which contains financial data for the past 10 years, then charts can display above the rows of data when the tab&amp;rsquo;s opened.&lt;/p&gt;
&lt;p&gt;To accomplish this, simply add a chart to the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/hierarchy-navigation/tabs/#tab-view&#34;&gt;view used by the tab&lt;/a&gt;. When the tab is opened, the chart will automatically be filtered to only show data pertaining to the parent table, in a similar fashion to how charts embedded using cross-referenced panels are filtered, as above.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/endole-example.png&#34; alt=&#34;Endole example&#34; title=&#34;Example of a chart in a tab&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;subscribing-users-or-roles-to-charts&#34;&gt;Subscribing users or roles to charts&lt;/h2&gt;
&lt;p&gt;Users can be subscribed to charts (or subscribe themselves) to receive them by email.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In a view with some charts, open the charts&lt;/li&gt;
&lt;li&gt;Next to &amp;lsquo;Send these charts to me&amp;rsquo;, select a frequency, e.g. monthly.&lt;/li&gt;
&lt;li&gt;Under &amp;lsquo;Include data too&amp;rsquo;, select tabular data to include in the email too - various options will be displayed e.g. all new rows since the last email&lt;/li&gt;
&lt;li&gt;Next to &amp;lsquo;roles&amp;rsquo;, select a role to send the charts and data to. All users in the role will be subscribed. Multiple roles can be added&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;If the view has no charts, this function can be used to send tabular data only&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Business Intelligence</title>
      <link>https://docs.agilebase.co.uk/docs/charting/business-intelligence/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/charting/business-intelligence/</guid>
      <description>
        
        
        &lt;blockquote&gt;
&lt;p&gt;Before setting up a BI connection, please be aware of the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/charting#privacy-and-data-security&#34;&gt;data privacy and security&lt;/a&gt; considerations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Any tool which utilises &lt;a href=&#34;https://en.wikipedia.org/wiki/Open_Database_Connectivity&#34;&gt;ODBC&lt;/a&gt; can be used, such as Excel for example. Power BI is a common one.&lt;/p&gt;
&lt;h2 id=&#34;initial-setup&#34;&gt;Initial Setup&lt;/h2&gt;
&lt;p&gt;The first step is to &lt;a href=&#34;https://agilechilli.com/contact-us/&#34;&gt;contact us&lt;/a&gt; to request we prepare your account. This will also allow connections from Power BI or any other tool which can connect to ODBC).&lt;/p&gt;
&lt;p&gt;If you use Power BI, then the process is as follows&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install the PostgreSQL ODBC driver from &lt;a href=&#34;https://odbc.postgresql.org/&#34;&gt;https://odbc.postgresql.org/&lt;/a&gt;. Use the Downloads link and if running on Windows, use the newest driver from the &lt;strong&gt;msi&lt;/strong&gt; folder.&lt;/li&gt;
&lt;li&gt;Use your operating system&amp;rsquo;s control panel to set up the ODBC driver, using the login details we supply. Ensure the SSL mode is set to &amp;lsquo;require&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;From Power BI, add a connection using the PostgreSQL ODBC driver, &lt;em&gt;not&lt;/em&gt; the built-in Power BI PostgreSQL driver.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;sending-data-to-your-external-reporting-tool&#34;&gt;Sending data to your external reporting tool&lt;/h2&gt;
&lt;p&gt;A developer with DEVELOP privileges on a view&amp;rsquo;s parent table can set this up.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Before continuing, please also note that only users without any &lt;a href=&#34;https://docs.agilebase.co.uk/docs/security-and-compliance/security-features/roles/#multi-tenanting&#34;&gt;multi-tenanting&lt;/a&gt; roles will be able to turn on external reporting.
That&amp;rsquo;s because data sent this way doesn&amp;rsquo;t take account of multi-tenanting. Rather all data is sent, whatever the tenant.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;In Agilebase, open the view you wish to report on. Ensure it has all the necessary fields and calculations in it which you want to report on. If not, add them before continuing.&lt;/li&gt;
&lt;li&gt;Click the charting icon to view the chart setup interface&lt;/li&gt;
&lt;li&gt;At the bottom of the screen, tick &amp;lsquo;send data to a shareable dashboard&amp;rsquo;. As this makes data available &lt;a href=&#34;charting#privacy-and-data-security&#34;&gt;outside of Agilebase&lt;/a&gt;, you will be asked to confirm you will treat the data in a way which maintains privacy and security before enabling the feature.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Within a few seconds, the data will then be visible to your external application.&lt;/p&gt;
&lt;h3 id=&#34;changes&#34;&gt;Changes&lt;/h3&gt;
&lt;p&gt;It&amp;rsquo;s easy for developers to make changes to views in Agilebase, for example adding / removing fields, changing calculations or just renaming a view.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;However, when the BI connection is active, bear in mind that certain changes could break it. The reason is that once data is set up to transfer to a separate system, the other system typically expects it to remain in the same format.&lt;/p&gt;
&lt;p&gt;That means that if you rename the view or move it, or rename/delete fields and calculations, you may afterwards need to check your charts in Superset / Power BI, to see if they need re-creating.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;daily-updates&#34;&gt;Daily updates&lt;/h3&gt;
&lt;p&gt;Once the view has been set up, external applications will see a new read-only snapshot of data once a day at a time you can specify on screen. If your data needs to be updated more often, you can add a workflow button to accomplish that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ensure that the view A is used for reporting only, in particular it doesn&amp;rsquo;t have any &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflow&lt;/a&gt; set up.&lt;/li&gt;
&lt;li&gt;From another view B, edit the view and go to the &amp;lsquo;workflow - edit records&amp;rsquo; panel&lt;/li&gt;
&lt;li&gt;Under &amp;lsquo;chain workflow&amp;rsquo;, select the reporting view A&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Then, when a user opens view B, they will see a button at the top of the screen with the button text set to the name of view A. Pressing it will refresh the view A data sent to external applications.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Changing Field Types</title>
      <link>https://docs.agilebase.co.uk/docs/fields/field-types/changing-field-types/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/fields/field-types/changing-field-types/</guid>
      <description>
        
        
        &lt;p&gt;Once a field has been created, the type can&amp;rsquo;t be changed with the flick of a switch. However there is an easy to follow process to accomplish this.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Rename the field to &lt;code&gt;[fieldname] old&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add a new field &lt;code&gt;[fieldname]&lt;/code&gt;. This means that any calculations that reference the field won&amp;rsquo;t have to be changed and won&amp;rsquo;t break due to mis-matching field names&lt;/li&gt;
&lt;li&gt;Copy all values from one field to another. The easiest way is to use a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/&#34;&gt;workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Try to delete the old field. If any views reference it, the delete will fail and a list of them will be shown&lt;/li&gt;
&lt;li&gt;Edit all those views
&lt;ul&gt;
&lt;li&gt;remove the old field and add the new, to all fields, filters etc.&lt;/li&gt;
&lt;li&gt;update all calculations that reference the field e.g. add a space to the end of all of them. That will refresh them to reference the new field rather than the old&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Finally, delete the old field&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Before starting, it will be worth ensuring that data won&amp;rsquo;t change during the process, for example by making the data read-only to all users, or requesting they don&amp;rsquo;t edit field values until finished.&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Data Integrity Checks</title>
      <link>https://docs.agilebase.co.uk/docs/tables/data-integrity-checks/</link>
      <pubDate>Fri, 24 Apr 2020 16:40:00 +0100</pubDate>
      
      <guid>https://docs.agilebase.co.uk/docs/tables/data-integrity-checks/</guid>
      <description>
        
        
        &lt;p&gt;It can be important to ensure that certain rules are followed when data is entered, either manually by a user, by an incoming &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;API request&lt;/a&gt; or someone filling in a &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-chaser/&#34;&gt;chaser&lt;/a&gt; response.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When designing applications, just be aware there is sometimes a trade-off between the ideal of data integrity and everyday concerns.&lt;/p&gt;
&lt;p&gt;For example, you may like to force users to always provide an email address for contacts but in a small minority of cases, they may not have that available.&lt;/p&gt;
&lt;p&gt;Agilebase has options for handling soft validation (highlighting errors or notifying someone) as well as the hard validation (disallowing invalid data entry) options discussed here. For example, you could&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/&#34;&gt;Create a view&lt;/a&gt;to show all records with errors, for later checking&lt;/li&gt;
&lt;li&gt;Set up a workflow or chaser to &lt;a href=&#34;https://docs.agilebase.co.uk/docs/workflows/send-chaser/&#34;&gt;chase someone&lt;/a&gt; when errors are found&lt;/li&gt;
&lt;li&gt;Use the &lt;a href=&#34;https://docs.agilebase.co.uk/docs/integrations/&#34;&gt;API&lt;/a&gt; to send a message to your internal messaging system e.g. Slack&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;That said, these are the ways in which you can strictly enforce data integrity.&lt;/p&gt;
&lt;h2 id=&#34;at-an-individual-field-level&#34;&gt;At an individual field level&lt;/h2&gt;
&lt;p&gt;Basic rules can be applied with &lt;a href=&#34;https://docs.agilebase.co.uk/docs/fields/field-options/common-options/&#34;&gt;field options&lt;/a&gt;. For example a field may be set as mandatory, or it must contain unique values (no duplicates).&lt;/p&gt;
&lt;h2 id=&#34;data-integrity-checks-advanced&#34;&gt;Data integrity checks (advanced)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/adding-and-removing/#editing-a-table&#34;&gt;Edit a table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Click _Data Integrity Checks&lt;/li&gt;
&lt;li&gt;Click &amp;lsquo;Add Single-Field Check&amp;rsquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here you can add more complex checks, such as the value must be longer or shorter than a certain length, be within a date range or match a &lt;a href=&#34;https://en.wikipedia.org/wiki/Regular_expression&#34;&gt;regular expression&lt;/a&gt;. The list of checks available is the same as that used in &lt;a href=&#34;https://docs.agilebase.co.uk/docs/views/filters/&#34;&gt;view filters&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.agilebase.co.uk/field-checks.png&#34; alt=&#34;Field checks&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;multi-field-unique-constraints&#34;&gt;Multi-field unique constraints&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.agilebase.co.uk/docs/tables/adding-and-removing/#editing-a-table&#34;&gt;Edit a table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Click _Data Integrity Checks&lt;/li&gt;
&lt;li&gt;Click &amp;lsquo;Add Multi-Field Unique Check&amp;rsquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Sometimes, fields must be unique &lt;strong&gt;in combination&lt;/strong&gt;. For example, imagine you have a system for recording customer complaints. One of the fields might be a customer&amp;rsquo;s reference number, another a relation to the customer record.&lt;/p&gt;
&lt;p&gt;You want to avoid duplicates being entered, so could make the customer reference number unique. However it could be that two different customers could use the same reference number independently, so that wouldn&amp;rsquo;t really work.&lt;/p&gt;
&lt;p&gt;The solution is to add a multi-field unique constraint on customer and customer reference number. That way, a reference number won&amp;rsquo;t be able to be re-used for a complaint from the same customer, but more than one customer is allowed to use the same reference.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
